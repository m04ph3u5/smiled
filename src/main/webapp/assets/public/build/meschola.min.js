/*! meschola 2016-03-14 Buonaiuto Andrea - Parlato Luigi  */
angular.module("smiled.application",["ui.router","ngCookies","ui.bootstrap","ngStorage","ngResource","permission","restangular","ngFileUpload","ui.date","ngDialog","ang-drag-drop","infinite-scroll","ngTagsInput","bootstrapLightbox","ngSanitize","fox.scrollReveal","ui.slider","FBAngular","angular-p5"]),angular.module("smiled.application").config(["$stateProvider","$urlRouterProvider","$locationProvider","RestangularProvider","$httpProvider",function($stateProvider,$urlRouterProvider,$locationProvider,RestangularProvider,$httpProvider){$stateProvider.state("notLogged",{templateUrl:"assets/public/partials/template-notLogged.html","abstract":!0,data:{permissions:{only:["anonymous"],redirectTo:"logged.dashboard"}}}).state("notLogged.setFirstPassword",{url:"/setPassword",views:{content:{templateUrl:"assets/public/partials/setPassword.html",controller:"setPasswordCtrl",controllerAs:"setPassword"}},data:{pageTitle:"setPassword - Meschola"}}).state("notLogged.login",{url:"/",views:{header:{templateUrl:"assets/public/partials/navbar-login.html",controller:"loginCtrl",controllerAs:"login"},content:{templateUrl:"assets/public/partials/registerPartial.html",controller:"registerCtrl",controllerAs:"register"}},data:{pageTitle:"Login - Meschola"}}).state("notLogged.forgotPassword",{url:"/password-dimenticata",views:{header:{templateUrl:"assets/public/partials/navbar-login.html",controller:"loginCtrl",controllerAs:"login"},content:{templateUrl:"assets/public/partials/forgotPartial.html",controller:"forgotCtrl",controllerAs:"forgot"}},data:{pageTitle:"Recupera password - Meschola"}}).state("notLogged.policy",{url:"/cookie-policy",views:{header:{templateUrl:"assets/public/partials/navbar-login.html",controller:"loginCtrl",controllerAs:"login"},content:{templateUrl:"assets/public/partials/cookie-policy.html"}},data:{pageTitle:"Cookie policy - Meschola"}}).state("logged",{templateUrl:"assets/private/partials/template-logged.html",controller:"mainCtrl","abstract":!0,data:{permissions:{except:["anonymous"],redirectTo:"notLogged.login"}}}).state("logged.issues",{url:"/anomalie",views:{"content@logged":{templateUrl:"assets/private/partials/issues.html",controller:"issuesCtrl",controllerAs:"issues"}},data:{pageTitle:"Segnala un problema - Meschola"}}).state("logged.newFeature",{url:"/suggerimenti",views:{"content@logged":{templateUrl:"assets/private/partials/suggestions.html",controller:"issuesCtrl",controllerAs:"issues"}},data:{pageTitle:"Segnala un problema - Meschola"}}).state("logged.lastNews",{url:"/novita",views:{"content@logged":{templateUrl:"assets/private/partials/lastNews.html"}},data:{pageTitle:"Novita' - Meschola"}}).state("logged.toolMap",{url:"/tool-mappe",views:{"content@logged":{templateUrl:"assets/private/partials/toolMap.html",controller:"toolMapCtrl",controllerAs:"toolMap"}},data:{pageTitle:"Download tool generazione mappe - Meschola"}}).state("logged.dashboard",{url:"/dashboard",views:{content:{controller:"loggedCtrl",controllerAs:"logged"}},resolve:{loggedUser:function(userService){return userService.getMe()}},data:{pageTitle:"Meschola"}}).state("logged.dashboard.teacher",{views:{"content@logged":{templateUrl:"assets/private/partials/dashboardTeacher.html",controller:"dashboardCtrl",controllerAs:"dashboard"}}}).state("logged.dashboard.student",{views:{"content@logged":{templateUrl:"assets/private/partials/dashboardStudent.html",controller:"dashboardCtrl",controllerAs:"dashboard"}}}).state("logged.dashboard.admin",{url:"/admin",views:{"content@logged":{templateUrl:"assets/private/partials/dashboardAdmin.html",controller:"dashboardAdminCtrl",controllerAs:"dashboardAdmin"}},data:{permissions:{only:["admin"],redirectTo:"logged.dashboard"},pageTitle:"Amministrazione - Meschola"}}).state("logged.dashboard.admin.scenarios",{url:"/scenari",templateUrl:"assets/private/partials/admin-scenarios.html"}).state("logged.dashboard.admin.users",{url:"/utenti",templateUrl:"assets/private/partials/admin-users.html"}).state("logged.dashboard.admin.log",{url:"/log",templateUrl:"assets/private/partials/admin-logs.html"}).state("logged.dashboard.admin.issueSegnalations",{url:"/anomalieAdmin",templateUrl:"assets/private/partials/admin-issues.html"}).state("logged.dashboard.admin.suggestionSegnalations",{url:"/suggerimentiAdmin",templateUrl:"assets/private/partials/admin-segnalations.html"}).state("logged.dashboard.admin.registrationRequest",{url:"/richiesteRegistrazione",templateUrl:"assets/private/partials/admin-registrationRequests.html"}).state("logged.dashboard.admin.exceptionsOnClient",{url:"/eccezioni",templateUrl:"assets/private/partials/admin-eccezioni.html"}).state("logged.dashboard.scenariosList",{url:"scenari",views:{"content@logged":{templateUrl:"assets/private/partials/scenariosList.html",controller:"scenariosListCtrl",controllerAs:"scenariosList"}},data:{pageTitle:"I miei scenari - Meschola"}}).state("logged.dashboard.studentsList",{url:"/studenti",views:{"content@logged":{templateUrl:"assets/private/partials/studentsList.html",controller:"studentsListCtrl",controllerAs:"studentsList"}},data:{pageTitle:"I miei studenti - Meschola"}}).state("logged.dashboard.colleaguesList",{url:"/colleghi",views:{"content@logged":{templateUrl:"assets/private/partials/colleaguesList.html",controller:"colleaguesListCtrl",controllerAs:"colleaguesList"}},data:{pageTitle:"I miei colleghi - Meschola"}}).state("logged.dashboard.missionsList",{url:"/missioni",views:{"content@logged":{templateUrl:"assets/private/partials/personalMissionsList.html",controller:"personalMissionCtrl",controllerAs:"personalMission"}},data:{pageTitle:"I miei compiti - Meschola"},params:{missions:null}}).state("logged.dashboard.filesList",{url:"/materiale",views:{"content@logged":{templateUrl:"assets/private/partials/filesList.html",controller:"filesListCtrl",controllerAs:"filesList"}},data:{pageTitle:"Il mio materiale - Meschola"}}).state("logged.dashboard.draft",{url:"/bozze",views:{"content@logged":{templateUrl:"assets/private/partials/draftsList.html",controller:"draftsListCtrl",controllerAs:"draftsList"}},data:{pageTitle:"Le mie bozze - Meschola"},resolve:{drafts:function(apiService){return apiService.getMyDraft(!1)}}}).state("logged.dashboard.draft.edit",{url:"/{postId}",views:{"body@logged.dashboard.draft":{templateUrl:"assets/private/partials/edit-draft.html",controller:"editDraftCtrl",controllerAs:"editDraft"}},params:{postId:null}}).state("logged.userProfile",{url:"/utente/{id}",params:{id:null},views:{content:{templateUrl:"assets/private/partials/personalProfile.html",controller:"personalProfileCtrl",controllerAs:"personalProfile"}},data:{pageTitle:"Profilo - Meschola"}}).state("logged.myNotifications",{url:"/notifiche",views:{content:{templateUrl:"assets/private/partials/myNotifications.html",controller:"notificationCtrl",controllerAs:"notification"}},data:{pageTitle:"Notifiche - Meschola"}}).state("logged.scenario",{url:"/scenario/{id}","abstract":!0,params:{id:null},views:{content:{templateUrl:"assets/private/partials/template-scenario.html",controller:"scenarioCtrl",controllerAs:"scenario"}},resolve:{scenario:function(apiService,$stateParams){var idScenario=$stateParams.id;return apiService.getScenario(idScenario)},loggedUser:function(userService){return userService.getMe()}}}).state("logged.scenario.posts",{url:"/post",views:{body:{templateUrl:"assets/private/partials/posts-scenario.html",controller:"scenarioPostCtrl",controllerAs:"scenarioPost"}},data:{pageTitle:"Meschola"}}).state("logged.scenario.post",{url:"/post/{idPost}",params:{idPost:null},views:{body:{templateUrl:"assets/private/partials/single-post-scenario.html",controller:"singlePostCtrl",controllerAs:"singlePost"}},data:{pageTitle:"Meschola"}}).state("logged.scenario.storyline",{url:"/storyline",views:{body:{templateUrl:"assets/private/partials/storyline-scenario.html",controller:"scenarioStorylineCtrl",controllerAs:"scenarioStoryline"}},data:{pageTitle:"Storyline - Meschola"}}).state("logged.scenario.characters",{url:"/personaggi",views:{body:{templateUrl:"assets/private/partials/characters-scenario.html",controller:"scenarioCharactersCtrl",controllerAs:"scenarioCharacters"}},data:{pageTitle:"I personaggi - Meschola"}}).state("logged.scenario.map",{url:"/mappa",views:{body:{templateUrl:"assets/private/partials/map-scenario.html",controller:"scenarioMapCtrl",controllerAs:"scenarioMap"}},data:{pageTitle:"La mappa - Meschola"}}).state("logged.scenario.missions",{url:"/compiti",views:{body:{templateUrl:"assets/private/partials/missions.html",controller:"scenarioMissionsCtrl",controllerAs:"scenarioMissions"}},data:{pageTitle:"Compiti - Meschola"}}).state("logged.scenario.resources",{url:"/materiali",views:{body:{templateUrl:"assets/private/partials/resources-scenario.html",controller:"scenarioResourcesCtrl",controllerAs:"scenarioResources"}},data:{pageTitle:"Materiali - Meschola"}}).state("logged.scenario.socialGraph",{url:"/relazioni",views:{body:{templateUrl:"assets/private/partials/social-graph.html"}},data:{pageTitle:"Grafo delle relazioni - Meschola"}}).state("logged.scenario.charprofile",{url:"/personaggi/{idCharacter}",views:{body:{templateUrl:"assets/private/partials/character-scenario-profile.html",controller:"characterProfileCtrl",controllerAs:"characterProfile"}},params:{idCharacter:null},data:{pageTitle:"Profilo - Meschola"}}).state("logged.scenarioWizard",{"abstract":!0,url:"/scenarioWizard",params:{id:null},views:{content:{templateUrl:"assets/private/partials/template-scenario-wizard.html",controller:"scenarioWizardCtrl",controllerAs:"scenarioWizard"}},data:{pageTitle:"Gestisci scenario - Meschola",permissions:{only:["teacher","admin"],redirectTo:"logged.dashboard"}}}).state("logged.scenarioWizard.info",{url:"/{id}/info",templateUrl:"assets/private/partials/info-scenario-wizard.html"}).state("logged.scenarioWizard.attendees",{url:"/{id}/attendees",templateUrl:"assets/private/partials/attendees-scenario-wizard.html"}).state("logged.scenarioWizard.characters",{url:"/{id}/characters",templateUrl:"assets/private/partials/characters-scenario-wizard.html"}).state("logged.scenarioWizard.associations",{url:"/{id}/associations",templateUrl:"assets/private/partials/associations-scenario-wizard.html"}).state("logged.scenarioWizard.collaborators",{url:"/{id}/collaborators",templateUrl:"assets/private/partials/collaborators-scenario-wizard.html"}).state("notLogged.registrationConfirm",{url:"/registrationConfirm.html",views:{header:{templateUrl:"assets/public/partials/navbar-login.html",controller:"loginCtrl",controllerAs:"login"},content:{templateUrl:"assets/public/partials/registerPartial.html",controller:"registerCtrl",controllerAs:"register"}},data:{pageTitle:"Meschola - Conferma registrazione"}}).state("notLogged.notFound",{url:"/404",views:{header:{templateUrl:"assets/public/partials/navbar-login.html",controller:"loginCtrl",controllerAs:"login"},content:{templateUrl:"assets/public/partials/404.html"}},data:{pageTitle:"404 - Meschola"}}),$urlRouterProvider.otherwise(function($injector,$location){var state=$injector.get("$state");state.go("notLogged.notFound")}),$httpProvider.interceptors.push("unauthorizedInterceptor"),$locationProvider.html5Mode(!0),$httpProvider.useApplyAsync(!0),RestangularProvider.setBaseUrl("/api/v1"),RestangularProvider.setDefaultHeaders({"Content-Type":"application/json"})}]).run(function(Permission,userService,$q,$rootScope,$stateParams,$state){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams,Permission.defineRole("anonymous",function(stateParams){var deferred=$q.defer();return userService.getMe().then(function(data){deferred.reject()},function(reason){deferred.resolve()}),deferred.promise}),Permission.defineRole("user",function(stateParams){var deferred=$q.defer();return userService.getMeForPermission().then(function(data){"ROLE_USER"==data.role.authority?deferred.resolve():deferred.reject()},function(reason){deferred.reject()}),deferred.promise}),Permission.defineRole("teacher",function(stateParams){var deferred=$q.defer();return userService.getMeForPermission().then(function(data){"ROLE_TEACHER"==data.role.authority?deferred.resolve():deferred.reject()},function(reason){deferred.reject()}),deferred.promise}),Permission.defineRole("admin",function(stateParams){var deferred=$q.defer();return userService.getMeForPermission().then(function(data){"ROLE_ADMIN"==data.role.authority?deferred.resolve():deferred.reject()},function(reason){deferred.reject()}),deferred.promise})}),angular.module("smiled.application").controller("characterProfileCtrl",["CONSTANTS","$scope","$stateParams","apiService","Upload",function(CONSTANTS,$scope,$stateParams,apiService,Upload){var self=this;self.character={};var idChar=$stateParams.idCharacter;self.idChar=idChar;var scenarioId=$scope.scenario.scen.id;self.scen=$scope.scenario.scen,self.editProfile=!1,self.actualUserCover=null,self.newCharacter={},self.genderBool=!0,self.numberOfPastUsers,self.viewPastUsers=!1,self.viewBiography=!1,self.currentChar=$scope.scenario.currentCharacter.id,Object.size=function(obj){var key,size=0;for(key in obj)obj.hasOwnProperty(key)&&size++;return size},self.openViewPastUsers=function(){self.viewPastUsers=!0},self.closeViewPastUsers=function(){self.viewPastUsers=!1},self.openViewBiography=function(){self.viewBiography=!0},self.closeViewBiography=function(){self.viewBiography=!1},apiService.getCharacter(scenarioId,idChar).then(function(data){self.character=data,self.newCharacter=angular.copy(data),null!=self.character.actualUser&&null!=self.character.actualUser.id&&(self.actualUserCover=CONSTANTS.urlUserCover(self.character.actualUser.id)),"F"==self.character.gender?self.genderBool=!1:"M"==self.character.gender,self.numberOfPastUsers=Object.size(self.character.pastUserId)},function(reason){console.log("ERROR RETRIEVE CHARACTER: "),console.log(reason)}),self.cover=CONSTANTS.urlCharacterCover(scenarioId,idChar),self.toggleEditProfile=function(){self.editProfile=!self.editProfile},self.getBornMonth=function(){return null!=self.character.bornDate?CONSTANTS.monthString(self.character.bornDate.month):""},self.getDeadMonth=function(){return null!=self.character.deadDate?CONSTANTS.monthString(self.character.deadDate.month):""},self.deleteUpdateChar=function(){self.newCharacter=angular.copy(self.character)},self.updateChar=function(){0==self.genderBool?self.newCharacter.gender="F":self.newCharacter.gender="M";var isEquals=isEqualsCharacter();if(!isEquals){var charDTO=self.newCharacter;apiService.updateCharacter(scenarioId,charDTO,idChar).then(function(data){self.character=data,self.newCharacter=angular.copy(data),"F"==self.character.gender?self.genderBool=!1:self.genderBool=!0},function(reason){self.newCharacter=angular.copy(self.character),"F"==self.character.gender?self.genderBool=!1:self.genderBool=!0})}},self.uploadCharacterCover=function(file){file&&file.length&&Upload.upload({url:CONSTANTS.urlCharacterCover(scenarioId,idChar),headers:{"Content-Type":file.type},file:file}).success(function(data,status,headers,config){var d=new Date;self.cover=CONSTANTS.urlCharacterCover(scenarioId,idChar)+"?"+d.toString(),$scope.scenario.currentCharacter.cover=self.cover;for(var i=0;i<self.posts.length;i++)self.posts[i].character.cover=CONSTANTS.urlCharacterCover(scenarioId,idChar)+"?"+d.toString()})},self.showDeadDatePicker=!1,self.switchShowDeadDate=function(){!self.showDeadDatePicker&&self.showBornDatePicker&&(self.showBornDatePicker=!1),self.showDeadDatePicker=!self.showDeadDatePicker},self.showBornDatePicker=!1,self.switchShowBornDate=function(){!self.showBornDatePicker&&self.showDeadDatePicker&&(self.showDeadDatePicker=!1),self.showBornDatePicker=!self.showBornDatePicker},self.hideDatePicker=function(){self.showDeadDatePicker=!1,self.showBornDatePicker=!1};var isEqualsCharacter=function(){if(self.character.nickname!=self.newCharacter.nickname)return!1;if(self.character.quote!=self.newCharacter.quote)return!1;if(self.character.description!=self.newCharacter.description)return!1;if(self.character.gender!=self.newCharacter.gender)return!1;if(self.character.role!=self.newCharacter.role)return!1;if(1==self.genderBool&&"F"==self.character.gender)return!1;if(0==self.genderBool&&"M"==self.character.gender)return!1;if(0==self.character.gender&&0==self.genderBool)return!1;if(self.character.bornDate&&self.newCharacter.bornDate){if(self.character.bornDate.day!=self.newCharacter.bornDate.day)return!1;if(self.character.bornDate.month!=self.newCharacter.bornDate.month)return!1;if(self.character.bornDate.year!=self.newCharacter.bornDate.year)return!1;if(self.character.bornDate.afterChrist!=self.newCharacter.bornDate.afterChrist)return!1}else if(self.character.bornDate||self.newCharacter.bornDate)return!1;if(self.character.deadDate&&self.newCharacter.deadDate){if(self.character.deadDate.day!=self.newCharacter.deadDate.day)return!1;if(self.character.deadDate.month!=self.newCharacter.deadDate.month)return!1;if(self.character.deadDate.year!=self.newCharacter.deadDate.year)return!1;if(self.character.deadDate.afterChrist!=self.newCharacter.deadDate.afterChrist)return!1}else if(self.character.deadDate||self.newCharacter.deadDate)return!1;return self.character.bornTown!=self.newCharacter.bornTown?!1:self.character.deadTown==self.newCharacter.deadTown},getPost=function(date,time){console.log("GET POST"),apiService.getLastCharacterPosts(self.scen.id,idChar,scrollable,date,time).then(function(data){console.log(data);var newPosts=[];newPosts=data,0==data.length&&(stopScroll=!0);for(var i=0;newPosts&&i<newPosts.length;i++){if(newPosts[i].character){newPosts[i].character.cover=CONSTANTS.urlCharacterCover(self.scen.id,newPosts[i].character.id);for(var j=0;j<newPosts[i].likes.length;j++)if(newPosts[i].likes[j].id==idChar){newPosts[i].youLike=!0;break}}self.posts.push(angular.copy(newPosts[i]))}self.busy=!1},function(reason){console.log("errore"),self.busy=!1})};self.posts=[],self.busy=!1;var scrollable=CONSTANTS.numberOfPostForScroll,stopScroll=!1;self.nextPost=function(){self.busy||stopScroll||(self.busy=!0,0==self.posts.length?getPost():getPost(self.posts[self.posts.length-1].julianDayNumber,self.posts[self.posts.length-1].timeNumber))}}]),angular.module("smiled.application").controller("colleaguesListCtrl",["loggedUser",function(loggedUser){var self=this;self.user=loggedUser}]),angular.module("smiled.application").controller("customDatePickerTemplateCtrl",["startDate","endDate","post","modalService",function(startDate,endDate,post,modalService){var self=this;self.startDate=startDate,self.endDate=endDate;var oldDateNumber=angular.copy(post.julianDayNumber),oldDateString=angular.copy(post.formattedDate);self.dateNumber=post.julianDayNumber,self.dateString=post.formattedDate,self.timeNumber=post.timeNumber,self.updateDate=function(){post.julianDayNumber=self.dateNumber,post.formattedDate=self.dateString,post.timeNumber=self.timeNumber,modalService.closeModalSetHistoryDate()},self.cancel=function(){self.dateNumber=oldDateNumber,self.dateString=oldDateString,modalService.closeModalSetHistoryDate()}}]),angular.module("smiled.application").controller("dashboardAdminCtrl",["loggedUser","modalService","apiService","CONSTANTS","$location","userService","alertingGeneric","$anchorScroll","$q",function(loggedUser,modalService,apiService,CONSTANTS,$location,userService,alertingGeneric,$anchorScroll,$q){var self=this,order=!0;self.typeOrder="creationDate",self.user=loggedUser;var nItemDefault=20,nPagDefault=0,maxItemDefault=20;self.showClose=!0,self.dateFormat=CONSTANTS.realDateFormatWithSecond,self.dateFormatBornDate=CONSTANTS.realDateFormatWithoutHour,self.nItemStudents=nItemDefault,self.nItemTeachers=nItemDefault,self.nItemExceptions=nItemDefault,self.nItemScenarios=nItemDefault,self.nItemLogs=nItemDefault,self.nItemRegistrationRequests=nItemDefault,self.nItemIssues=nItemDefault,self.nItemSuggestions=nItemDefault,self.nPagStudents=nPagDefault,self.nPagTeachers=nPagDefault,self.nPagExceptions=nPagDefault,self.nPagScenarios=nPagDefault,self.nPagLogs=nPagDefault,self.nPagRegistrationRequests=nPagDefault,self.nPagIssues=nPagDefault,self.nPagSuggestions=nPagDefault,self.myListOfTeachers=[],self.myListOfStudents=[],self.myListOfExceptions=[],self.myListOfLogs=[],self.myListOfScenarios=[],self.myListOfUsers=[],self.myListOfRegistrationRequests=[],self.myListOfSuggestions=[],self.myListOfIssues=[],self.numExceptionsFounded=0,self.numLogsFounded=0,self.numTeachersFounded=0,self.numStudentsFounded=0,self.numScenariosFounded=0,self.numUsersFounded=0,self.numRegistrationRequestsFounded=0,self.numIssuesFounded=0,self.numSuggestionsFounded=0,self.showErrorSearchBy=!1,self.noMoreStudents="",self.noMoreTeachers="",self.noMoreScenarios="",self.noMoreUsers="",self.noMoreExceptions="",self.noMoreLogs="",self.noMoreRegistrationRequests="",self.noMoreSuggestions="",self.noMoreissues="";var mapOfUsersInLog={},mapOfScenariosInLog={};self.whoIsUser=function(l){l.userId in mapOfUsersInLog?(l.firstName=mapOfUsersInLog[l.userId].firstName,l.lastName=mapOfUsersInLog[l.userId].lastName,l.email=mapOfUsersInLog[l.userId].email):userService.getUser(l.userId).then(function(data){var ref={};ref.firstName=data.firstName,ref.lastName=data.lastName,ref.email=data.email,mapOfUsersInLog[l.userId]=angular.copy(ref),l.firstName=data.firstName,l.lastName=data.lastName,l.email=data.email},function(reason){var ref={};ref.firstName="nome non disponibile",ref.lastName="cognome non disponibile",ref.email="email non disponibile",mapOfUsersInLog[l.userId]=angular.copy(ref),l.firstName="nome non disponibile",l.lastName="cognome non disponibile",l.email="email non disponibile"})},self.whoIsScenario=function(l){l.scenarioId in mapOfScenariosInLog?(l.nameScenario=mapOfScenariosInLog[l.scenarioId].nameScenario,l.creator=mapOfScenariosInLog[l.scenarioId].creator):apiService.getScenario(l.scenarioId).then(function(data){var ref={};ref.nameScenario=data.name,ref.creator=data.teacherCreator.firstname+" "+data.teacherCreator.lastname,mapOfScenariosInLog[l.scenarioId]=angular.copy(ref),l.nameScenario=data.name,l.creator=data.teacherCreator.firstname+" "+data.teacherCreator.lastname},function(reason){var ref={};ref.nameScenario="nome non disponibile",ref.creator="creatore non disponibile",mapOfScenariosInLog[l.scenarioId]=angular.copy(ref),l.nameScenario="nome non disponibile",l.creator="creatore non disponibile"})},self.toggleShowClose=function(){self.showClose=!self.showClose},self.calculateCover=function(id){return CONSTANTS.urlScenarioCover(id)},self.changeScenariosToPrev=function(){self.nPagScenarios--,self.searchScenarios()},self.changeScenariosToNext=function(){self.nPagScenarios++,self.searchScenarios()},self.changeRegistrationRequestsToPrev=function(){self.nPagRegistrationRequests--,self.searchRegistrationRequests()},self.changeRegistrationRequestsToNext=function(){self.nPagRegistrationRequests++,self.searchRegistrationRequests()},self.changeIssuesToPrev=function(){self.nPagIssues--,self.searchIssues()},self.changeIssuesToNext=function(){self.nPagIssues++,self.searchIssues()},self.changeSuggestionsToPrev=function(){self.nPagSuggestions--,self.searchSuggestions()},self.changeSuggestionsToNext=function(){self.nPagSuggestions++,self.searchSuggestions()},self.switchTypeOrder=function(){self.searchScenarios()},self.searchScenarios=function(){self.nItemScenarios>maxItemDefault&&(self.nItemScenarios=maxItemDefault),order="creationDate"==self.typeOrder,apiService.getPagedScenarios(self.nPagScenarios,self.nItemScenarios,order).then(function(data){self.numScenariosFounded=data.totalElements,self.myListOfScenarios=data.content,0==self.myListOfScenarios.length?self.noMoreScenarios="Nessun utente trovato in questa pagina":self.noMoreScenarios=""},function(reason){console.log("errore"),self.numScenariosFounded=0})},self.searchIssues=function(){self.nItemIssues>maxItemDefault&&(self.nItemIssues=maxItemDefault),apiService.getPagedIssues(self.nPagIssues,self.nItemIssues).then(function(data){self.numIssuesFounded=data.totalElements,self.myListOfIssues=data.content,0==self.myListOfIssues.length?self.noMoreIssues="Nessuna segnalazione di errore trovata in questa pagina":self.noMoreIssues=""},function(reason){console.log("errore"),self.numIssuesFounded=0})},self.searchSuggestions=function(){self.nItemSuggestions>maxItemDefault&&(self.nItemSuggestions=maxItemDefault),apiService.getPagedSuggestions(self.nPagSuggestions,self.nItemSuggestions).then(function(data){self.numSuggestionsFounded=data.totalElements,self.myListOfSuggestions=data.content,0==self.myListOfSuggestions.length?self.noMoreSuggestions="Nessuna segnalazione di errore trovata in questa pagina":self.noMoreSuggestions=""},function(reason){console.log("errore"),self.numSuggestionsFounded=0})},self.searchRegistrationRequests=function(){self.nItemRegistrationRequests>maxItemDefault&&(self.nItemRegistrationRequests=maxItemDefault),apiService.getPagedRegistrationRequests(self.nPagRegistrationRequests,self.nItemRegistrationRequests).then(function(data){self.numRegistrationRequestsFounded=data.totalElements,self.myListOfRegistrationRequests=data.content,0==self.myListOfRegistrationRequests.length?self.noMoreRegistrationRequests="Nessun utente trovato in questa pagina":self.noMoreRegistrationRequests=""},function(reason){console.log("errore"),self.numRegistrationRequestsFounded=0})},self.changeTeachersToPrev=function(){self.nPagTeachers--,self.searchTeachers()},self.changeTeachersToNext=function(){self.nPagTeachers++,self.searchTeachers()},self.searchTeachers=function(){self.nItemTeachers>maxItemDefault&&(self.nItemTeachers=maxItemDefault),apiService.getPagedTeachers(self.nPagTeachers,self.nItemTeachers).then(function(data){self.numTeachersFounded=data.totalElements,self.myListOfTeachers=data.content,0==self.myListOfTeachers.length?self.noMoreTeachers="Nessun utente trovato in questa pagina":self.noMoreTeachers=""},function(reason){console.log("errore"),self.numTeachersFounded=0})},self.searchUsersByFirstNameAndLastName=function(){null!=self.firstName&&""!=self.firstName||null!=self.lastName&&""!=self.lastName?(self.showErrorSearchBy=!1,apiService.getUsersByFirstNameAndLastName(self.firstName,self.lastName).then(function(data){data.length>0?(self.numUsersFounded=data.length,self.myListOfUsers=data,self.noMoreUsers=""):(self.numUsersFounded=0,self.myListOfUsers=[],self.noMoreUsers="Nessun utente trovato")},function(reason){console.log("errore"),self.numUsersFounded=0,self.myListOfUsers=[],self.noMoreUsers="Nessun utente trovato"})):(self.showErrorSearchBy=!0,self.numUsersFounded=0,self.myListOfUsers=[])},self.changeStudentsToPrev=function(){self.nPagStudents--,self.searchStudents()},self.changeStudentsToNext=function(){self.nPagStudents++,self.searchStudents()},self.searchStudents=function(){self.nItemStudents>maxItemDefault&&(self.nItemStudents=maxItemDefault),apiService.getPagedStudents(self.nPagStudents,self.nItemStudents).then(function(data){self.numStudentsFounded=data.totalElements,self.myListOfStudents=data.content,0==self.myListOfStudents.length?self.noMoreStudents="Nessun utente trovato":self.noMoreStudents=""},function(reason){console.log("errore"),self.numStudentsFounded=0})},self.changeExceptionsToPrev=function(){self.nPagExceptions--,self.searchExceptions()},self.changeExceptionsToNext=function(){self.nPagExceptions++,self.searchExceptions()},self.changeLogsToPrev=function(){self.nPagLogs--,self.searchLogs()},self.changeLogsToNext=function(){self.nPagLogs++,self.searchLogs()},self.searchExceptions=function(){self.nItemExceptions>maxItemDefault&&(self.nItemExceptions=maxItemDefault),apiService.getPagedExceptions(self.nPagExceptions,self.nItemExceptions).then(function(data){self.numExceptionsFounded=data.totalElements,self.myListOfExceptions=data.content,0==self.myListOfExceptions.length?self.noMoreExceptions="Nessuna eccezione trovata in questa pagina":self.noMoreExceptions=""},function(reason){console.log("errore"),self.numExceptionsFounded=0})},self.searchLogs=function(){self.nItemLogs>maxItemDefault&&(self.nItemLogs=maxItemDefault),apiService.getPagedLogs(self.nPagLogs,self.nItemLogs).then(function(data){if(self.numLogsFounded=data.totalElements,self.myListOfLogs=data.content,0==self.myListOfLogs.length)self.noMoreLogs="Nessun log trovato in questa pagina";else{self.noMoreLogs="";for(var i=0;i<self.myListOfLogs.length;i++)self.whoIsUser(self.myListOfLogs[i]),self.whoIsScenario(self.myListOfLogs[i])}},function(reason){console.log("errore"),self.numLogsFounded=0})},self.showResetExceptions=function(){return self.myListOfExceptions.length>0||self.nPagExceptions!=nPagDefault||self.nItemExceptions!=nItemDefault||""!=self.noMoreExceptions},self.showResetSuggestions=function(){return self.myListOfSuggestions.length>0||self.nPagSuggestions!=nPagDefault||self.nItemSuggestions!=nItemDefault||""!=self.noMoreSuggestions},self.showResetIssues=function(){return self.myListOfIssues.length>0||self.nPagIssues!=nPagDefault||self.nItemIssues!=nItemDefault||""!=self.noMoreIssues},self.showResetRegistrationRequests=function(){return self.myListOfRegistrationRequests.length>0||self.nPagRegistrationRequests!=nPagDefault||self.nItemRegistrationRequests!=nItemDefault||""!=self.noMoreRegistrationRequests},self.showResetLogs=function(){return self.myListOfLogs.length>0||self.nPagLogs!=nPagDefault||self.nItemLogs!=nItemDefault||""!=self.noMoreLogs},self.showResetScenarios=function(){return self.myListOfScenarios.length>0||self.nPagScenarios!=nPagDefault||self.nItemScenarios!=nItemDefault||""!=self.noMoreScenarios},self.showResetTeachers=function(){return self.myListOfTeachers.length>0||self.nPagTeachers!=nPagDefault||self.nItemTeachers!=nItemDefault||""!=self.noMoreTeachers},self.showResetUsersByName=function(){return!!(self.myListOfUsers.length>0||self.showErrorSearchBy||""!=self.noMoreUsers)},self.showResetStudents=function(){return self.myListOfStudents.length>0||self.nPagStudents!=nPagDefault||self.nItemStudents!=nItemDefault||""!=self.noMoreStudents},self.resetExceptions=function(){self.myListOfExceptions=[],self.nItemExceptions=nItemDefault,self.nPagExceptions=0,self.noMoreExceptions="",self.numExceptionsFounded=0},self.resetIssues=function(){self.myListOfIssues=[],self.nItemIssues=nItemDefault,self.nPagIssues=0,self.noMoreIssues="",self.numIssuesFounded=0},self.resetSuggestions=function(){self.myListOfSuggestions=[],self.nItemSuggestions=nItemDefault,self.nPagSuggestions=0,self.noMoreSuggestions="",self.numSuggestionsFounded=0},self.resetRegistrationRequests=function(){self.myListOfRegistrationRequests=[],self.nItemRegistrationRequests=nItemDefault,self.nPagRegistrationRequests=0,self.noMoreRegistrationRequests="",self.numRegistrationRequestsFounded=0},self.resetLogs=function(){self.myListOfLogs=[],self.nItemLogs=nItemDefault,self.nPagLogs=0,self.noMoreLogs="",self.numLogsFounded=0},self.resetScenarios=function(){self.myListOfScenarios=[],self.nItemScenarios=nItemDefault,self.nPagScenarios=0,self.noMoreScenarios="",self.numScenariosFounded=0},self.resetTeachers=function(){self.myListOfTeachers=[],self.nItemTeachers=nItemDefault,self.nPagTeachers=0,self.noMoreTeachers="",self.numTeachersFounded=0},self.resetStudents=function(){self.myListOfStudents=[],self.nItemStudents=nItemDefault,self.nPagStudents=0,self.noMoreStudents="",self.numStudentsFounded=0},self.resetUsersByName=function(){self.firstName="",self.lastName="",self.myListOfUsers=[],self.showErrorSearchBy=!1,self.numUsersFounded=0,self.noMoreUsers=""},self.showPopUpConfirmRegistration=function(l){modalService.showModalConfirmRegistration(l,!0).then(function(response){if(alertingGeneric.addSuccess("Registrazione confermata"),self.myListOfRegistrationRequests){for(var i=0;i<self.myListOfRegistrationRequests.length;i++)if(self.myListOfRegistrationRequests[i].id==l.id){self.myListOfRegistrationRequests.splice(i,1);break}self.numRegistrationRequestsFounded--,$location.hash("comeHere"),$anchorScroll(),$location.url($location.path())}},function(reason){alertingGeneric.addWarning("Operazione annullata"),
$location.hash("comeHere"),$anchorScroll(),$location.url($location.path())})},self.showPopUpDeleteRegistration=function(l){modalService.showModalConfirmRegistration(l,!1).then(function(response){if(alertingGeneric.addSuccess("Registrazione cancellata"),self.myListOfRegistrationRequests){for(var i=0;i<self.myListOfRegistrationRequests.length;i++)if(self.myListOfRegistrationRequests[i].id==l.id){self.myListOfRegistrationRequests.splice(i,1);break}self.numRegistrationRequestsFounded--,$location.hash("comeHere"),$anchorScroll(),$location.url($location.path())}},function(reason){alertingGeneric.addWarning("Operazione annullata"),$location.hash("comeHere"),$anchorScroll(),$location.url($location.path())})},self.searchMoreInfo=function(l){userService.getUserByEmail(l.email).then(function(data){l.firstName=data.firstName,l.lastName=data.lastName,l.registrationDate=data.registrationDate,l.agree=data.agree,l.profile={},l.profile=data.profile},function(reason){console.log("Error in getUserByEmail !!!")}),l.moreInfo=!0}}]),angular.module("smiled.application").controller("dashboardCtrl",["loggedUser","modalService","userService","$scope","$interval","apiService","CONSTANTS",function(loggedUser,modalService,userService,$scope,$interval,apiService,CONSTANTS){function compareDate(a,b){return a.creationDate>b.creationDate?-1:a.creationDate<b.creationDate?1:0}var self=this,originalUser=angular.copy(loggedUser);self.missionDateFormatDay=CONSTANTS.realDateFormatOnlyDay,self.missionDateFormatMonth=CONSTANTS.realDateFormatOnlyMonth,"ROLE_USER"==loggedUser.role.authority?(self.numScenariosToShow=5,apiService.getMyMissions().then(function(data){self.myMissions=data},function(reason){console.log("Error retrieve missions"),console.log(reason)})):self.numScenariosToShow=4,apiService.getMyDraft(!0).then(function(data){self.myDraft=data;for(var i=0;self.myDraft&&i<self.myDraft.length;i++){self.myDraft[i].character&&(self.myDraft[i].character.cover=CONSTANTS.urlCharacterCover(self.myDraft[i].scenarioId,self.myDraft[i].character.id));for(var j=0;loggedUser.openScenarios&&j<loggedUser.openScenarios.length;j++)self.myDraft[i].scenarioId==loggedUser.openScenarios[j].id&&(self.myDraft[i].scenarioName=loggedUser.openScenarios[j].name)}},function(reason){}),self.user=loggedUser,self.scenariosToShow=new Array,self.studentsList=loggedUser.students,self.showCollCard=[!1,!1,!1,!1,!1,!1],self.selectedUserID=null,self.myCharacters=new Array,self.tab=new Array,self.showPopUpCreationScenario=function(){modalService.showModalCreateScen()};var shuffleArray=function(array){for(var t,i,m=array.length;m;)i=Math.floor(Math.random()*m--),t=array[m],array[m]=array[i],array[i]=t;return array},createArrayOfScenariosToShow=function(){var tmp=new Array;if(null!=self.user.openScenarios&&null!=self.user.creatingScenarios){for(var i=0;i<self.user.openScenarios.length;i++)self.user.openScenarios[i].isOpen=!0;for(var i=0;i<self.user.creatingScenarios.length;i++)self.user.creatingScenarios[i].isOpen=!1;tmp=angular.copy(self.user.openScenarios).concat(angular.copy(self.user.creatingScenarios))}else if(null!=self.user.openScenarios&&null==self.user.creatingScenarios){self.myCharacters=[];for(var i=0;i<self.user.openScenarios.length;i++)if(self.user.openScenarios[i].isOpen=!0,self.user.openScenarios[i].myCharacterId){var character={};character.scenarioId=self.user.openScenarios[i].id,character.id=self.user.openScenarios[i].myCharacterId,character.name=self.user.openScenarios[i].myCharacterName,character.cover=CONSTANTS.urlCharacterCover(self.user.openScenarios[i].id,self.user.openScenarios[i].myCharacterId),self.myCharacters.push(character)}tmp=angular.copy(self.user.openScenarios)}else if(null==self.user.openScenarios&&null!=self.user.creatingScenarios){for(var i=0;i<self.user.creatingScenarios.length;i++)self.user.creatingScenarios[i].isOpen=!1;tmp=angular.copy(self.user.creatingScenarios)}tmp.sort(compareDate),tmp.splice(self.numScenariosToShow,tmp.length-self.numScenariosToShow),self.scenariosToShow=tmp},getLoggedUser=function(){userService.getMe().then(function(data){angular.equals(originalUser,data)||(self.user=data,originalUser=angular.copy(self.user),createArrayOfScenariosToShow(),data.students&&shuffleArray(data.students),data.colleagues&&shuffleArray(data.colleagues),self.myCharacters&&shuffleArray(self.myCharacters))},function(reason){console.log("errore")})};createArrayOfScenariosToShow(),self.openCollCard=function(userID,index){for(self.selectedUserID=userID,i=0;i<6;i++)i!=index&&(self.showCollCard[i]=!1),self.tab[i]=i+1;self.showCollCard[index]=!self.showCollCard[index],self.showCollCard[index]&&(self.tab[index]=0)};var reloadDashboardListener=$scope.$on("dashboard.reloadDashboard",function(){console.log("dashboard.reloadDashboard"),getLoggedUser()}),reloadSpecificDashboardListener=null,reloadMissionListener=null;"ROLE_USER"==loggedUser.role.authority?(reloadSpecificDashboardListener=$scope.$on("dashboardStudent.reloadDashboard",function(){getLoggedUser()}),reloadMissionListener=$scope.$on("dashboardStudent.reloadMission",function(){apiService.getMyMissions().then(function(data){self.myMissions=data},function(reason){console.log("Error retrieve missions"),console.log(reason)})})):"ROLE_TEACHER"==loggedUser.role.authority&&(reloadSpecificDashboardListener=$scope.$on("dashboardTeacher.reloadDashboard",function(){getLoggedUser()})),$scope.$on("$destroy",function(){reloadDashboardListener(),null!=reloadSpecificDashboardListener&&reloadSpecificDashboardListener(),null!=reloadMissionListener&&reloadMissionListener()})}]),angular.module("smiled.application").controller("deleteResourceCtrl",["file","modalService",function(file,modalService){var self=this;self.file=file}]),angular.module("smiled.application").controller("dialogConfirmRegistrationCtrl",["modalService","userService","alertingGeneric","$scope","confirmRegistrationBool",function(modalService,userService,alertingGeneric,$scope,confirmRegistrationBool){var self=this;self.reg={},self.reg=modalService.getRegistrationToConfirm(),self.confirmReg=confirmRegistrationBool,alertingGeneric.removeAllAlerts(),self.confirm=function(){self.confirmReg?userService.confirmRegisterTeacher(self.reg.token,self.reg.email).then(function(data){modalService.closeModalConfirmRegistration()},function(reason){console.log("problem in confirmation register teacher"),alertingGeneric.addDanger("Si è verificato un errore. Non è stato possibile confermare la registrazione!")}):userService.deleteRegisterTeacher(self.reg.token,self.reg.email).then(function(data){modalService.closeModalConfirmRegistration()},function(reason){console.log("problem in delete register teacher"),alertingGeneric.addDanger("Si è verificato un errore. Non è stato possibile annullare la registrazione!")})}}]),angular.module("smiled.application").controller("dialogMissionCtrl",["modalService","apiService","alertingGeneric","$scope",function(modalService,apiService,alertingGeneric,$scope){var self=this;self.mission={},self.createMission=function(scenId){null==scenId&&apiService.createMission(self.mission.scenId,self.mission).then(function(data){modalService.closeModalCreateMission()},function(reason){console.log("error in creation of new mission")})}}]),angular.module("smiled.application").controller("dialogScenarioCtrl",["modalService","alertingGeneric","$state","CONSTANTS",function(modalService,alertingGeneric,$state,CONSTANTS){var self=this;self.scenario={},self.scenToDelete=modalService.getScenToDelete(),self.attendeeToDelete=modalService.getAttendeeToDelete(),self.collaboratorToDelete=modalService.getCollaboratorToDelete(),self.characterToDelete=modalService.getCharacterToDelete(),self.scenario.startDate={},self.scenario.endDate={},self.scenario.showRelationsToAll=!0,self.scenario.startDate.afterChrist=!0,self.scenario.endDate.afterChrist=!0,self.startDate={},self.endDate={},self.createScenario=function(){if(""==self.scenario.title||null==self.scenario.title||null==self.scenario.startDate||null==self.scenario.endDate)alertingGeneric.addWarning("Inserire tutti i dati richiesti");else if(self.scenario.title.length<2)alertingGeneric.addWarning("Inserire un titolo di almeno 2 caratteri");else if(0==checkDate(self.scenario.startDate.year))alertingGeneric.addWarning("Data di inizio errata");else if(0==checkDate(self.scenario.endDate.year))alertingGeneric.addWarning("Data di fine errata");else if(0==checkIfEndIsAfterStart(self.scenario.startDate,self.scenario.endDate))alertingGeneric.addWarning("La data di fine non puo' precedere la data di inizio");else if(!self.scenario.startDate.afterChrist&&parseInt(self.scenario.startDate.year)>4712)alertingGeneric.addWarning("La minima data rappresentabile e': 1 gennaio 4712 AC");else{var s=modalService.createScenario(self.scenario);s.then(function(data){alertingGeneric.addSuccess("ScenarioCreato"),modalService.closeModalCreateScen(),$state.go("logged.scenarioWizard.info",{id:data.id})},function(reason){alertingGeneric.addWarning("Non e' stato possibile creare lo scenario, riprova!")})}},self.deleteScenario=function(){null!=self.scenToDelete&&""!=self.scenToDelete&&(modalService.deleteScenario(),modalService.closeModalDeleteScen(),$state.go("logged.dashboard"))},self.startDate.months=CONSTANTS.getMonths("it"),self.startDate.days=CONSTANTS.getDays(self.scenario.startDate.month),self.endDate.months=CONSTANTS.getMonths("it"),self.endDate.days=CONSTANTS.getDays(self.scenario.endDate.month),self.getStartDays=function(){self.startDate.days=CONSTANTS.getDays(self.scenario.startDate.month)},self.getEndDays=function(){self.endDate.days=CONSTANTS.getDays(self.scenario.endDate.month)};var checkIfEndIsAfterStart=function(sD,eD){var startDate={},endDate={};return startDate.year=parseInt(sD.year),endDate.year=parseInt(eD.year),startDate.month=sD.month,endDate.month=eD.month,startDate.day=sD.day,endDate.day=eD.day,startDate.afterChrist=sD.afterChrist,endDate.afterChrist=eD.afterChrist,startDate.afterChrist&&endDate.afterChrist?startDate.year>endDate.year?!1:startDate.year<endDate.year?!0:startDate.month>endDate.month?!1:startDate.month<endDate.month?!0:startDate.day>endDate.day?!1:(startDate.day<endDate.day,!0):startDate.afterChrist||endDate.afterChrist?!(startDate.afterChrist||!endDate.afterChrist):startDate.year<endDate.year?!1:startDate.year>endDate.year?!0:startDate.month>endDate.month?!1:startDate.month<endDate.month?!0:startDate.day>endDate.day?!1:(startDate.day<endDate.day,!0)},checkDate=function(year){return!isNaN(year)}}]),angular.module("smiled.application").controller("dialogSetDateCtrl",["modalService","alertingGeneric","$state","scen","start","CONSTANTS",function(modalService,alertingGeneric,$state,scen,start,CONSTANTS){var self=this;self.start=start,self.newDate={},1==start?self.newDate=scen.history.startDate:self.newDate=scen.history.endDate,self.closeModal=function(){modalService.closeModalSetDate()},self.months=CONSTANTS.getMonths("it"),self.days=CONSTANTS.getDays(self.newDate.month),self.getDays=function(){self.days=CONSTANTS.getDays(self.newDate.month)}}]),angular.module("smiled.application").controller("draftsListCtrl",["loggedUser","drafts","apiService","CONSTANTS",function(loggedUser,drafts,apiService,CONSTANTS){var self=this;self.user=loggedUser,self.myDraft=drafts;var onStartUp=function(){for(var i=0;self.myDraft&&i<self.myDraft.length;i++){self.myDraft[i].character&&(self.myDraft[i].character.cover=CONSTANTS.urlCharacterCover(self.myDraft[i].scenarioId,self.myDraft[i].character.id));for(var j=0;loggedUser.openScenarios&&j<loggedUser.openScenarios.length;j++)self.myDraft[i].scenarioId==loggedUser.openScenarios[j].id&&(self.myDraft[i].scenarioName=loggedUser.openScenarios[j].name)}console.log("DRAFT")};onStartUp()}]),angular.module("smiled.application").controller("editDraftCtrl",["loggedUser","drafts","$stateParams",function(loggedUser,drafts,$stateParams){var self=this;self.user=loggedUser,self.drafts=drafts,self.postId=$stateParams.postId}]),angular.module("smiled.application").controller("expandCtrl",["apiService",function(apiService){function getMe(){return apiService.getMe().then(function(data){self.user=data;data.creatingScenarios},function(reason){self.user={},console.log("dashboardCtrl error getting user")})}var self=this;getMe()}]),angular.module("smiled.application").controller("filesListCtrl",["loggedUser",function(loggedUser){var self=this;self.user=loggedUser}]),angular.module("smiled.application").controller("forgotCtrl",["userService","alertingGeneric",function(userService,alertingGeneric){var self=this;self.userEmail="",self.sendNewPassRequest=function(){if(self.userEmail&&validateEmail()){var e={};e.email=self.userEmail,userService.forgotPasswordRequest(e).then(function(data){alertingGeneric.addSuccess("Richiesta inviata con successo.")},function(reason){alertingGeneric.addDanger("Si è verificato un errore")})}else alertingGeneric.addWarning("Inserire un indirizzo mail valido")};var validateEmail=function(){var re=/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{1,6}(?:\.[a-z]{1})?)$/i;return re.test(self.userEmail)}}]),angular.module("smiled.application").controller("indexCtrl",["userService","apiService",function(userService,apiService){function isLoggedUpdate(){self.isLogged=userService.isLogged(),self.isLogged&&apiService.getMe().then(function(data){self.user=data;var imageProfileUrl=baseImageProfile,random=new Date;self.cover=imageProfileUrl+"?"+random.toString()},function(reason){console.log("errore")})}function logout(){userService.logout()}function updateImageProfile(){var random=new Date;self.cover=baseImageProfile+"?"+random.toString()}userService.registerObserverLoginCallback(isLoggedUpdate),userService.registerObserverImageProfileCallback(updateImageProfile);var baseImageProfile="api/v1/me/cover",self=this;self.logout=logout,isLoggedUpdate()}]),angular.module("smiled.application").controller("issuesCtrl",["CONSTANTS","apiService","$state","$timeout",function(CONSTANTS,apiService,$state,$timeout){var self=this;self.sended=!1,self.suggestionSended=!1,self.error=!1,self.postSuggestion=function(){var suggestion={};suggestion.newFeature=self.newFeature,suggestion.modifyFeature=self.modifyFeature,suggestion.deleteFeature=self.deleteFeature,apiService.postSuggestion(suggestion).then(function(data){self.error=!1,self.newFeature="",self.modifyFeature="",self.deleteFeature="",self.suggestionSended=!0,$timeout(function(){$state.go("logged.dashboard")},7e3)},function(reason){self.error=!0,console.log("Errore nell'invio della segnalazione"+reason)})},self.postIssue=function(){var problema={};problema.preOperation=self.preOperation,problema.issue=self.issue,problema.expect=self.expect,apiService.postIssue(problema).then(function(data){self.error=!1,self.preOperation="",self.issue="",self.expect="",self.sended=!0,$timeout(function(){$state.go("logged.dashboard")},7e3)},function(reason){self.error=!0,console.log("Errore nell'invio della segnalazione"+reason)})}}]),angular.module("smiled.application").controller("loggedCtrl",["loggedUser","$state",function(loggedUser,$state){"ROLE_ADMIN"==loggedUser.role.authority?$state.go("logged.dashboard.admin.users"):"ROLE_TEACHER"==loggedUser.role.authority?$state.go("logged.dashboard.teacher"):"ROLE_USER"==loggedUser.role.authority&&$state.go("logged.dashboard.student")}]),angular.module("smiled.application").controller("loginCtrl",["userService","apiService","alertingLogin","$state",function(userService,apiService,alertingLogin,$state){var self=this;self.user={},self.register={},self.dateOptions={dateFormat:"dd/mm/yy"},self.login=function(){null==self.user.email||""==self.user.email?(alertingLogin.addWarning("Inserire email"),self.user.password=""):null==self.user.password||""==self.user.password?alertingLogin.addWarning("Inserire password"):validateEmail(self.user.email)?self.user.password.length<8?(alertingLogin.addWarning("Password troppo corta!"),self.user.password=""):userService.login(self.user.email,self.user.password).then(function(data){$state.go("logged.dashboard")},function(reason){self.user.password="",self.user.email="",alertingLogin.addDanger("Attenzione credenziali errate!")}):(alertingLogin.addWarning("Email non valida!"),self.user.password="")};var validateEmail=function(email){var re=/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{1,6}(?:\.[a-z]{1})?)$/i;return re.test(email)}}]),angular.module("smiled.application").controller("mainCtrl",["$state","$rootScope",function($state,$rootScope){$rootScope.$on("unauthorized",function(){$state.go("notLogged.login")})}]),angular.module("smiled.application").controller("navbarCtrl",["userService","$state","CONSTANTS","$scope","webSocketService","notifyService","$timeout","$window","$rootScope",function(userService,$state,CONSTANTS,$scope,webSocketService,notifyService,$timeout,$window,$rootScope){function logout(){userService.logout().then(function(data){self.cover="",$state.go("notLogged.login")},function(reason){console.log("Errore logout")})}var self=this;self.newNotifications=[],self.oldNotifications=[],self.numNewNotifications=0,self.user={},self.basicCover={},self.dateFormat=CONSTANTS.realDateFormatWithSecond,self.iHaveDone=!1,self.openNotifications=!1,userService.getMe().then(function(data){self.user=data,"ROLE_TEACHER"==self.user.role.authority||"ROLE_ADMIN"==self.user.role.authority?self.basicCover=CONSTANTS.basicTeacherCover:"ROLE_USER"==self.user.role.authority&&(self.basicCover=CONSTANTS.basicStudentCover)},function(reason){console.log("errore")});var updateCover=function(){var date=new Date;self.cover=CONSTANTS.urlMeCover+"?"+date.toString()},monthNames=["Gennaio","Febbraio","Marzo","Aprile","Maggio","Giugno","Luglio","Agosto","Settembre","Ottobre","Novembre","Dicembre"],getNewNotification=function(n){n.read=!1,self.newNotifications.splice(0,0,n),self.numNewNotifications=self.newNotifications.length,formatVerb(self.newNotifications)},formatVerb=function(notifications){if(null!=notifications&&notifications.length>0)for(var scenarioId=userService.getScenarioId(),reloadAssociation=!1,i=0;i<notifications.length;i++)if("COMMENT_TO_POST"==notifications[i].verb)self.user.id==notifications[i].mainReceiver?notifications[i].text=notifications[i].actorName+" ha commentato un tuo post nello scenario "+notifications[i].scenarioName:notifications[i].text=notifications[i].actorName+" ha commentato un post che segui nello scenario "+notifications[i].scenarioName;else if("LIKE_TO_POST"==notifications[i].verb)self.user.id==notifications[i].mainReceiver?notifications[i].text="A "+notifications[i].actorName+" piace un tuo post nello scenario "+notifications[i].scenarioName:notifications[i].text="A "+notifications[i].actorName+" piace un post in cui sei taggato nello scenario "+notifications[i].scenarioName;else if("TAG_ON_CREATE"==notifications[i].verb)notifications[i].text=notifications[i].actorName+" ti ha taggato in un post nello scenario "+notifications[i].scenarioName;else if("TAG_ON_MOD"==notifications[i].verb){if(notifications[i].tagged){for(var stringTags="",j=0;j<notifications[i].tagged.length;j++)stringTags+=j<notifications[i].tagged.length-2?notifications[i].tagged[j].firstname+", ":j<notifications[i].tagged.length-1?notifications[i].tagged[j].firstname+" e ":notifications[i].tagged[j].firstname;notifications[i].text=notifications[i].actorName+" ha taggato "+stringTags+" in un post nello scenario "+notifications[i].scenarioName}}else"METACOMMENT_TO_POST"==notifications[i].verb?self.user.id==notifications[i].mainReceiver?notifications[i].text=notifications[i].actorName+" ha inserito un suggerimento ad un tuo post nello scenario "+notifications[i].scenarioName:notifications[i].text=notifications[i].actorName+" ha inserito un suggerimento ad un post che segui nello scenario "+notifications[i].scenarioName:"NEW_ASSOCIATION"==notifications[i].verb?self.user.id==notifications[i].objectId?(notifications[i].text="Ti e' stato assegnato il personaggio "+notifications[i].actorName+" nello scenario "+notifications[i].scenarioName,scenarioId==notifications[i].scenarioId&&(reloadAssociation=!0)):notifications[i].text="Il personaggio "+notifications[i].actorName+" e' stato assegnato a "+notifications[i].objectContent+" nello scenario "+notifications[i].scenarioName:"DEL_ASSOCIATION"==notifications[i].verb?self.user.id==notifications[i].objectId?(notifications[i].text="Non stai piu' interpretando il personaggio "+notifications[i].actorName+" nello scenario "+notifications[i].scenarioName,scenarioId==notifications[i].scenarioId&&(reloadAssociation=!0)):notifications[i].text=notifications[i].objectContent+" non sta piu' interpretando il personaggio "+notifications[i].actorName+"nello scenario "+notifications[i].scenarioName:"OPEN_SCENARIO"==notifications[i].verb?notifications[i].text="Entra nel nuovo scenario "+notifications[i].scenarioName+" creato da "+notifications[i].actorName:"CLOSE_SCENARIO"==notifications[i].verb?notifications[i].text="Lo scenario "+notifications[i].scenarioName+" e' stato chiuso da "+notifications[i].actorName:"MODIFIED"==notifications[i].verb?self.user.id!=notifications[i].mainReceiver&&(notifications[i].text=notifications[i].actorName+" ha modificato un post che segui nello scenario "+notifications[i].scenarioName):"NEW_PERSONAL_MISSION"==notifications[i].verb?notifications[i].text=notifications[i].actorName+", ti e' stata assegnata una nuova missione nello scenario "+notifications[i].scenarioName:"NEW_GLOBAL_MISSION"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ha assegnato una nuova missione ai partecipanti dello scenario "+notifications[i].scenarioName:"NEW_MOD"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ti ha aggiunto come collaboratore nello scenario "+notifications[i].scenarioName:"NEW_FILE"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ha aggiunto il file "+notifications[i].objectContent+" nella sezione materiali dello scenario "+notifications[i].scenarioName:"NEW_ATTENDEE"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ti ha iscritto allo scenario "+notifications[i].scenarioName:"DEL_ATTENDEE"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ti ha rimosso dallo scenario "+notifications[i].scenarioName:"DELETED_POST_BY_MOD"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ha cancellato un tuo post nello scenario "+notifications[i].scenarioName:"MODIFIED_POST_BY_MOD"==notifications[i].verb?self.user.id==notifications[i].mainReceiver?notifications[i].text=notifications[i].actorName+" ha modificato un tuo post nello scenario "+notifications[i].scenarioName:notifications[i].text=notifications[i].actorName+" ha modificato un post che segui nello scenario "+notifications[i].scenarioName:"NEW_MOD_TO_CREATOR"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ha aggiunto "+notifications[i].objectContent+" come collaboratore dello scenario "+notifications[i].scenarioName:"DEL_MOD"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ti ha rimosso dallo scenario "+notifications[i].scenarioName:notifications[i].text="Nuova notifica!";reloadAssociation&&notifyService.reloadAssociation()},formatDate=function(notifications){if(null!=notifications&&notifications.length>0)for(var actual=new Date,i=0;i<notifications.length;i++){var timeString="",diff=actual-notifications[i].date;if(diff=Math.round(diff/1e3),1>=diff)timeString="un secondo fa";else if(60>diff)timeString=diff+" secondi fa";else if(diff>=60)if(diff=Math.round(diff/60),1>=diff)timeString="un minuto fa";else if(60>diff)timeString=diff+" minuti fa";else if(diff>=60){var dd=new Date(notifications[i].date);diff=Math.round(diff/60),1>=diff?timeString="circa un'ora fa":24>diff?timeString=diff+" ore fa":48>diff?timeString="Ieri alle "+dd.getHours()+" "+dd.getMinutes():diff>=48&&(timeString=dd.getDate()+" "+monthNames[dd.getMonth()]+" alle ore "+dd.getHours()+":"+dd.getMinutes())}notifications[i].formatDate=timeString}},closeDropDown=function(){if(self.newNotifications&&self.newNotifications.length>0){for(var i=self.newNotifications.length-1;i>=0;i--)self.oldNotifications.splice(0,0,angular.copy(self.newNotifications[i]));self.newNotifications=[]}self.numNewNotifications=0,self.openNotifications=!1};self.onBlurDropDown=function(){closeDropDown()};var openDropDown=function(){if(self.newNotifications.length>0){formatDate(self.newNotifications);var ack={};ack.ids=[],ack.type="ACK_N";for(var i=self.newNotifications.length-1;i>=0;i--)ack.ids.push(angular.copy(self.newNotifications[i].id));ack&&ack.ids&&webSocketService.send(ack)}if(self.oldNotifications.length>0&&formatDate(self.oldNotifications),self.openNotifications=!0,self.newNotifications.length+self.oldNotifications.length<10){var older="",num=10;self.oldNotifications.length>0?older=self.oldNotifications[self.oldNotifications.length-1].id:self.newNotifications.length>0&&(older=self.newNotifications[self.newNotifications.length-1].id),older&&(num=10-self.newNotifications.length+self.oldNotifications.length),num>0&&notifyService.readOldNotifications(older,num).then(function(data){formatDate(data),formatVerb(data);for(var i=0;data&&i<data.length;i++)data[i].sender!=self.user.id&&(data[i].read=!1,self.oldNotifications.push(data[i]))},function(reason){console.log("Error retriving old notification (REST)")})}};self.clickOnNotificationsButton=function(){if(self.openNotifications){closeDropDown();var element=$window.document.getElementById("notificationButton");element&&element.blur()}else openDropDown()},self.getNotificationCover=function(){return null},self.clickOnNotify=function(n){if(!n.viewed){n.viewed=!0;var view={};view.ids=[],view.ids.push(n.id),view.type="VIEW_N",$timeout(webSocketService.send(view),1e3)}if("MODIFIED"==n.verb||"MODIFIED_POST_BY_MOD"==n.verb||"LIKE_TO_POST"==n.verb||"TAG_ON_CREATE"==n.verb||"TAG_ON_MOD"==n.verb)$state.go("logged.scenario.post",{id:n.scenarioId,idPost:n.objectId});else if("COMMENT_TO_POST"==n.verb||"METACOMMENT_TO_POST"==n.verb){var idPost=n.objectId.substring(0,n.objectId.indexOf("/"));$state.go("logged.scenario.post",{id:n.scenarioId,idPost:idPost})}else"NEW_PERSONAL_MISSION"==n.verb?("logged.scenario.missions"==$state.current.name?$rootScope.$broadcast("notification.updateCharacterMission",{idS:n.scenarioId,idC:n.actorId}):$state.go("logged.scenario.missions",{id:n.scenarioId}),ß):"NEW_GLOBAL_MISSION"==n.verb?"logged.scenario.missions"==$state.current.name?$rootScope.$broadcast("notification.updateGlobalMission",{idS:n.scenarioId}):$state.go("logged.scenario.missions",{id:n.scenarioId}):"DEL_ASSOCIATION"==n.verb||"OPEN_SCENARIO"==n.verb||"NEW_ATTENDEE"==n.verb?$state.go("logged.scenario.characters",{id:n.scenarioId}):"NEW_ASSOCIATION"==n.verb?$state.go("logged.scenario.charprofile",{id:n.scenarioId,idCharacter:n.actorId}):"NEW_MOD_TOCREATOR"==n.verb||"NEW_MOD"==n.verb?$state.go("logged.scenarioWizard.info",{id:n.scenarioId}):"NEW_FILE"==n.verb?$state.go("logged.scenario.resources",{id:n.scenarioId}):"DEL_MOD"!=n.verb&&"DEL_ATTENDEE"!=n.verb||$state.go("logged.dashboard")},self.getSrcPhoto=function(n){return"NOTIFICATION"==n.type?"NEW_GLOBAL_MISSION"==n.verb||"CLOSE_SCENARIO"==n.verb||"OPEN_SCENARIO"==n.verb||"NEW_ATTENDEE"==n.verb||"DEL_ATTENDEE"==n.verb?CONSTANTS.urlScenarioCover(n.scenarioId):"METACOMMENT_TO_POST"==n.verb||"NEW_MOD"==n.verb||"NEW_MOD_TO_CREATOR"==n.verb||"DEL_MOD"==n.verb||"MODIFIED_POST_BY_MOD"==n.verb||"DELETED_POST_BY_MOD"==n.verb||"NEW_FILE"==n.verb?CONSTANTS.urlUserCover(n.actorId):"MODIFIED"==n.verb?n.actorId?CONSTANTS.urlCharacterCover(n.scenarioId,n.actorId):"assets/public/img/narr.png":"TAG_ON_CREATE"==n.verb||"TAG_ON_MOD"==n.verb?n.actorId?CONSTANTS.urlCharacterCover(n.scenarioId,n.actorId):"assets/public/img/narr.png":CONSTANTS.urlCharacterCover(n.scenarioId,n.actorId):("USER_MESSAGE"==n.type&&console.log("message!!!!!!!!!!!!"),"assets/public/img/icon/pg.png")},self.getErrPhoto=function(n){return"NOTIFICATION"==n.type?"NEW_GLOBAL_MISSION"==n.verb||"CLOSE_SCENARIO"==n.verb||"OPEN_SCENARIO"==n.verb||"NEW_ATTENDEE"==n.verb||"DEL_ATTENDEE"==n.verb?"assets/public/img/icon/ic_scen.png":"NEW_MOD"==n.verb||"NEW_MOD_TO_CREATOR"==n.verb||"MODIFIED_POST_BY_MOD"==n.verb||"DEL_MOD"==n.verb||"DELETED_POST_BY_MOD"==n.verb||"NEW_FILE"==n.verb?"assets/public/img/ic_teacher.png":"METACOMMENT_TO_POST"==n.verb?isTeacher(n.actorId)?"assets/public/img/ic_teacher.png":"assets/public/img/ic_student.png":"MODIFIED"==n.verb?n.actorId?"assets/public/img/icon/pg.png":"assets/public/img/narr.png":"assets/public/img/icon/pg.png":"USER_MESSAGE"==n.type?"assets/public/img/ic_student.png":void 0};var isTeacher=function(id){if("ROLE_TEACHER"==self.user.role.authority){if(self.user.colleagues)for(var i=0;i<self.user.colleagues.length;i++)if(self.user.colleagues[i].id==id)return!0}else if("ROLE_USER"==self.user.role.authority&&self.user.teachers)for(var i=0;i<self.user.teachers.length;i++)if(self.user.teachers[i].id==id)return!0;return!1};self.logout=logout,updateCover(),userService.registerObserverPersonalCover(updateCover);var setViewedNotifify=function(id){if(self.newNotifications)for(var i=0;i<self.newNotifications.length;i++)if(self.newNotifications[i].id==id)return void(self.newNotifications[i].viewed=!0);if(self.oldNotifications)for(var i=0;i<self.oldNotifications.length;i++)self.oldNotifications[i].id==id&&(self.oldNotifications[i].viewed=!0)},newNotificationListener=$scope.$on("notification.newNotificationEvent",function(event,data){getNewNotification(data.notification),$scope.$applyAsync()}),setViewedListener=$scope.$on("notification.setViewedEvent",function(event,data){setViewedNotifify(data.id)});$scope.$on("$destroy",function(){newNotificationListener(),setViewedListener(),notifyService.resetObserverAssociation()})}]),angular.module("smiled.application").controller("notificationCtrl",["$rootScope","$state","userService","apiService","CONSTANTS","$timeout","webSocketService",function($rootScope,$state,userService,apiService,CONSTANTS,$timeout,webSocketService){var self=this;self.notifications=[],self.dateFormat=CONSTANTS.realDateFormatWithMinute,self.user={},self.user.id="",self.basicCover={},self.busy=!1;var stopScroll=!1;self.user=userService.getLastMe();var getMoreRecentNotifications=function(){apiService.getLastUserNotifications("",10).then(function(data){0==data.length?stopScroll=!0:(formatVerb(data),self.notifications=data),self.busy=!1},function(reason){console.log("problem in getLastUserNotifications"),self.busy=!1})},downloadMoreNotifications=function(){apiService.getLastUserNotifications(self.notifications[self.notifications.length-1].id,10).then(function(data){0==data.length?stopScroll=!0:(formatVerb(data),self.notifications=self.notifications.concat(data)),self.busy=!1},function(reason){console.log(reason),self.busy=!1})};self.nextNotification=function(){self.busy||stopScroll||(self.busy=!0,0==self.notifications.length?getMoreRecentNotifications():downloadMoreNotifications())};var onStartup=function(){getMoreRecentNotifications()};onStartup(),self.clickOnNotify=function(n){$rootScope.$broadcast("notification.setViewedEvent",{id:n.id}),n.viewed=!0;var view={};if(view.ids=[],view.ids.push(n.id),view.type="VIEW_N",$timeout(webSocketService.send(view),1e3),"MODIFIED"==n.verb||"MODIFIED_POST_BY_MOD"==n.verb||"LIKE_TO_POST"==n.verb||"TAG_ON_CREATE"==n.verb||"TAG_ON_MOD"==n.verb)$state.go("logged.scenario.post",{id:n.scenarioId,idPost:n.objectId});else if("COMMENT_TO_POST"==n.verb||"METACOMMENT_TO_POST"==n.verb){var idPost=n.objectId.substring(0,n.objectId.indexOf("/"));$state.go("logged.scenario.post",{id:n.scenarioId,idPost:idPost})}else"NEW_PERSONAL_MISSION"==n.verb||"NEW_GLOBAL_MISSION"==n.verb?$state.go("logged.scenario.missions",{id:n.scenarioId}):"DEL_ASSOCIATION"==n.verb||"OPEN_SCENARIO"==n.verb||"NEW_ATTENDEE"==n.verb||"NEW_MOD_TOCREATOR"==n.verb||"NEW_MOD"==n.verb?$state.go("logged.scenario.characters",{
id:n.scenarioId}):"NEW_ASSOCIATION"==n.verb?$state.go("logged.scenario.charprofile",{id:n.scenarioId,idCharacter:n.actorId}):"NEW_FILE"==n.verb?$state.go("logged.scenario.resources",{id:n.scenarioId}):"DEL_MOD"!=n.verb&&"DEL_ATTENDEE"!=n.verb||$state.go("logged.dashboard")},self.getSrcPhoto=function(n){return"NOTIFICATION"==n.type?"NEW_GLOBAL_MISSION"==n.verb||"CLOSE_SCENARIO"==n.verb||"OPEN_SCENARIO"==n.verb||"NEW_ATTENDEE"==n.verb||"DEL_ATTENDEE"==n.verb?CONSTANTS.urlScenarioCover(n.scenarioId):"METACOMMENT_TO_POST"==n.verb||"NEW_MOD"==n.verb||"NEW_MOD_TO_CREATOR"==n.verb||"DEL_MOD"==n.verb||"MODIFIED_POST_BY_MOD"==n.verb||"DELETED_POST_BY_MOD"==n.verb||"NEW_FILE"==n.verb?CONSTANTS.urlUserCover(n.actorId):"MODIFIED"==n.verb?n.actorId?CONSTANTS.urlCharacterCover(n.scenarioId,n.actorId):"assets/public/img/narr.png":"TAG_ON_CREATE"==n.verb||"TAG_ON_MOD"==n.verb?n.actorId?CONSTANTS.urlCharacterCover(n.scenarioId,n.actorId):"assets/public/img/narr.png":CONSTANTS.urlCharacterCover(n.scenarioId,n.actorId):("USER_MESSAGE"==n.type&&console.log("message!!!!!!!!!!!!"),"assets/public/img/icon/pg.png")},self.getErrPhoto=function(n){return"NOTIFICATION"==n.type?"NEW_GLOBAL_MISSION"==n.verb||"CLOSE_SCENARIO"==n.verb||"OPEN_SCENARIO"==n.verb||"NEW_ATTENDEE"==n.verb||"DEL_ATTENDEE"==n.verb?"assets/public/img/icon/ic_scen.png":"NEW_MOD"==n.verb||"NEW_MOD_TO_CREATOR"==n.verb||"MODIFIED_POST_BY_MOD"==n.verb||"DEL_MOD"==n.verb||"DELETED_POST_BY_MOD"==n.verb||"NEW_FILE"==n.verb?"assets/public/img/ic_teacher.png":"METACOMMENT_TO_POST"==n.verb?isTeacher(n.actorId)?"assets/public/img/ic_teacher.png":"assets/public/img/ic_student.png":"MODIFIED"==n.verb?n.actorId?"assets/public/img/icon/pg.png":"assets/public/img/narr.png":"assets/public/img/icon/pg.png":"USER_MESSAGE"==n.type?"assets/public/img/ic_student.png":void 0};var formatVerb=function(notifications){if(null!=notifications&&notifications.length>0)for(var i=0;i<notifications.length;i++)if("COMMENT_TO_POST"==notifications[i].verb)self.user.id==notifications[i].mainReceiver?notifications[i].text=notifications[i].actorName+" ha commentato un tuo post":notifications[i].text=notifications[i].actorName+" ha commentato un post che segui";else if("LIKE_TO_POST"==notifications[i].verb)self.user.id==notifications[i].mainReceiver?notifications[i].text="A "+notifications[i].actorName+" piace un tuo post":notifications[i].text="A "+notifications[i].actorName+" piace un post in cui sei taggato";else if("TAG_ON_CREATE"==notifications[i].verb)notifications[i].text=notifications[i].actorName+" ti ha taggato in un post";else if("TAG_ON_MOD"==notifications[i].verb){if(notifications[i].tagged){for(var stringTags="",j=0;j<notifications[i].tagged.length;j++)stringTags+=j<notifications[i].tagged.length-2?notifications[i].tagged[j].firstname+", ":j<notifications[i].tagged.length-1?notifications[i].tagged[j].firstname+" e ":notifications[i].tagged[j].firstname;notifications[i].text=notifications[i].actorName+" ha taggato "+stringTags+" in un post"}}else"METACOMMENT_TO_POST"==notifications[i].verb?self.user.id==notifications[i].mainReceiver?notifications[i].text=notifications[i].actorName+" ha inserito un suggerimento ad un tuo post":notifications[i].text=notifications[i].actorName+" ha inserito un suggerimento ad un post che segui":"NEW_ASSOCIATION"==notifications[i].verb?self.user.id==notifications[i].objectId?notifications[i].text="Ti e' stato assegnato il personaggio "+notifications[i].actorName:notifications[i].text="Il personaggio "+notifications[i].actorName+" e' stato assegnato a "+notifications[i].objectContent:"DEL_ASSOCIATION"==notifications[i].verb?self.user.id==notifications[i].objectId?notifications[i].text="Non stai piu' interpretando il personaggio "+notifications[i].actorName:notifications[i].text=notifications[i].objectContent+" non sta piu' interpretando il personaggio "+notifications[i].actorName:"OPEN_SCENARIO"==notifications[i].verb?notifications[i].text="Entra nel nuovo scenario "+notifications[i].scenarioName+" creato da "+notifications[i].actorName:"CLOSE_SCENARIO"==notifications[i].verb?notifications[i].text="Lo scenario "+notifications[i].scenarioName+" e' stato chiuso da "+notifications[i].actorName:"MODIFIED"==notifications[i].verb?self.user.id!=notifications[i].mainReceiver&&(notifications[i].text=notifications[i].actorName+" ha modificato un post che segui"):"NEW_PERSONAL_MISSION"==notifications[i].verb?notifications[i].text=notifications[i].actorName+", ti e' stata assegnata una nuova missione":"NEW_GLOBAL_MISSION"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ha assegnato una nuova missione ai partecipanti dello scenario":"NEW_MOD"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ti ha aggiunto come collaboratore":"NEW_FILE"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ha aggiunto il file "+notifications[i].objectContent+" nella sezione materiali":"NEW_ATTENDEE"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ti ha iscritto allo scenario":"DEL_ATTENDEE"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ti ha rimosso dallo scenario":"DELETED_POST_BY_MOD"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ha cancellato un tuo post":"MODIFIED_POST_BY_MOD"==notifications[i].verb?self.user.id==notifications[i].mainReceiver?notifications[i].text=notifications[i].actorName+" ha modificato un tuo post":notifications[i].text=notifications[i].actorName+" ha modificato un post che segui":"NEW_MOD_TO_CREATOR"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ha aggiunto "+notifications[i].objectContent+" come collaboratore":"DEL_MOD"==notifications[i].verb?notifications[i].text=notifications[i].actorName+" ti ha rimosso dallo scenario ":notifications[i].text="Nuova notifica!"},isTeacher=function(id){if("ROLE_TEACHER"==self.user.role.authority){if(self.user.colleagues)for(var i=0;i<self.user.colleagues.length;i++)if(self.user.colleagues[i].id==id)return!0}else if("ROLE_USER"==self.user.role.authority&&self.user.teachers)for(var i=0;i<self.user.teachers.length;i++)if(self.user.teachers[i].id==id)return!0;return!1}}]),angular.module("smiled.application").controller("oldCharacterChangeOnCommentCtrl",["charName","modalService","$window",function(charName,modalService,$window){var self=this;self.charName=charName,self.ok=function(){modalService.closeModalOldCharacterChangeOnComment(),$window.location.reload()}}]),angular.module("smiled.application").controller("openMapCtrl",["post","scenarioMap","modalService",function(post,scenarioMap,modalService){var self=this;self.post=post;var oldPlace=angular.copy(post.place);scenarioMap?self.map=scenarioMap.url:self.map=null,self.stylePin={visibility:"hidden"},self.pinPoint=function(event){var pin={};pin.x=event.offsetX/event.target.width,pin.y=event.offsetY/event.target.height,post.place=pin;var x=event.offsetX-20,y=event.offsetY-40;self.stylePin={visibility:"visible",top:y+"px",left:x+"px"}},self.removePoint=function(){console.log("removePoint")},self.ok=function(){modalService.closeModalOpenMap()},self.cancel=function(){modalService.closeModalOpenMap(),post.place=oldPlace}}]),angular.module("smiled.application").controller("openMapForPostCtrl",["post","scenarioMap","modalService",function(post,scenarioMap,modalService){var self=this;self.post=post,scenarioMap?self.map=scenarioMap.url:self.map=null,console.log("OPENMAPFORPOSTCTRL: "+self.map),self.ok=function(){modalService.closeModalOpenMapForPost()},self.cancel=function(){modalService.closeModalOpenMapForPost()}}]),angular.module("smiled.application").controller("personalMissionCtrl",["apiService","CONSTANTS","$scope","$stateParams",function(apiService,CONSTANTS,$scope,$stateParams){var self=this;console.log($stateParams.missions),null!=$stateParams.missions&&$stateParams.missions.length>0?self.myMissions=$stateParams.missions:(console.log("download missions"),apiService.getMyMissions().then(function(data){self.myMissions=data},function(reason){console.log("Error retrieve missions"),console.log(reason)})),self.missionDateFormatDay=CONSTANTS.realDateFormatOnlyDay,self.missionDateFormatMonth=CONSTANTS.realDateFormatOnlyMonth}]),angular.module("smiled.application").controller("personalProfileCtrl",["Upload","userService","$stateParams","CONSTANTS","$cookies","$filter","$anchorScroll","$location",function(Upload,userService,$stateParams,CONSTANTS,$cookies,$filter,$anchorScroll,$location){var self=this,id=null,role=null;self.ruolo=null,self.editProfile=!1,self.editPassword=!1,self.updateUserDTO={},self.dateFormat=CONSTANTS.realDateFormatWithoutHour,self.isModifiable=!1,self.user={},self.oldPassword="",self.newPassword="",self.newPassword2="",self.messageErrorModifyPassword="",self.dateOptions={regional:"it",changeYear:!0,maxDate:"0",minDate:new Date(1900,0,1,0,0,0,0),yearRange:"1900:c"};var myIdentity=$cookies.get("myMescholaId"),onSuccessGetUser=function(data){self.user=data,role=self.user.role,self.user.profile&&(self.updateUserDTO.gender=angular.copy(self.user.profile.gender),self.bornDateString=$filter("date")(angular.copy(self.user.profile.bornDate),self.dateFormat),self.updateUserDTO.bornCity=angular.copy(self.user.profile.bornCity),self.updateUserDTO.schoolCity=angular.copy(self.user.profile.schoolCity),self.updateUserDTO.school=angular.copy(self.user.profile.school),self.updateUserDTO.quote=angular.copy(self.user.profile.quote)),"ROLE_TEACHER"==role.authority?self.ruolo="DOCENTE":"ROLE_USER"==role.authority?self.ruolo="STUDENTE":self.ruolo="AMMINISTRATORE"},onErrorGetUser=function(reason){console.log("Error getting user personalProfile: "+reason)},onErrorUpdateUser=function(reason){console.log("Error updating user personalProfile: "+reason)};if($stateParams.id&&(id=$stateParams.id),id)if(userService.getUser(id).then(onSuccessGetUser,onErrorGetUser),id==myIdentity){var d=new Date;self.url=CONSTANTS.urlMeCover+"?"+d.toString(),self.coverLarge=CONSTANTS.urlMeCoverLarge+"?"+d.toString(),self.isModifiable=!0}else{var d=new Date;self.url=CONSTANTS.urlUserCover(id)+"?"+d.toString(),self.coverLarge=CONSTANTS.urlUserCoverLarge(id)+"?"+d.toString()}else{userService.getMe().then(onSuccessGetUser,onErrorGetUser);var d=new Date;self.url=CONSTANTS.urlMeCover+"?"+d.toString(),self.coverLarge=CONSTANTS.urlMeCoverLarge+"?"+d.toString(),self.isModifiable=!0}self.updateMe=function(){if(self.bornDateString){var s=self.bornDateString.split("-"),d=new Date(s[2],s[1]-1,s[0],0,0,0,0);self.updateUserDTO.bornDate=d}userService.updateMe(self.updateUserDTO).then(onSuccessGetUser,onErrorUpdateUser)},self.uploadCover=function(file){file&&file.length&&Upload.upload({url:"api/v1/me/cover/",headers:{"Content-Type":file.type},file:file}).success(function(data,status,headers,config){var date=new Date;self.url=CONSTANTS.urlMeCover+"?"+date.toString(),userService.notifyPersonalCoverObservers()})},self.uploadCoverLarge=function(file){file&&file.length&&Upload.upload({url:"api/v1/me/coverLarge",headers:{"Content-Type":file.type},file:file}).success(function(data,status,headers,config){var date=new Date;self.coverLarge=CONSTANTS.urlMeCoverLarge+"?"+date.toString()})},self.switchEditPassword=function(){self.editPassword=!self.editPassword,1==self.editPassword&&($location.hash("changePwd"),$anchorScroll(),$location.url($location.path()))},self.switchEditProfile=function(){self.editProfile=!self.editProfile,self.editPassword=!1},self.showEditProfile=function(){self.editPassword=!1,self.editProfile=!0},self.closeEditProfile=function(){self.editProfile=!1,self.deleteModifyPassword()},self.deleteUpdateMe=function(){self.updateUserDTO={},self.user.profile&&(self.updateUserDTO.gender=angular.copy(self.user.profile.gender),self.bornDateString=$filter("date")(angular.copy(self.user.profile.bornDate),self.dateFormat),self.updateUserDTO.bornCity=angular.copy(self.user.profile.bornCity),self.updateUserDTO.schoolCity=angular.copy(self.user.profile.schoolCity),self.updateUserDTO.school=angular.copy(self.user.profile.school),self.updateUserDTO.quote=angular.copy(self.user.profile.quote))},self.deleteModifyPassword=function(){self.oldPassword="",self.newPassword="",self.newPassword2="",self.editPassword=!1,self.messageErrorModifyPassword=""},self.modifyPassword=function(){if(self.messageErrorModifyPassword="",self.oldPassword&&self.newPassword)if(self.newPassword.length<8)self.messageErrorModifyPassword="Inserire una password lunga almeno 8 caratteri!",self.oldPassword="",self.newPassword="",self.newPassword2="";else if(self.newPassword==self.newPassword2){var passwordDTO={};passwordDTO.oldPassword=self.oldPassword,passwordDTO.newPassword=self.newPassword,userService.changePassword(passwordDTO).then(function(data){self.oldPassword="",self.newPassword="",self.newPassword2="",self.editPassword=!1,alert("Password modificata correttamente")},function(reason){self.messageErrorModifyPassword="Errore nel cambio password!",self.oldPassword="",self.newPassword="",self.newPassword2=""})}else self.messageErrorModifyPassword="Errore - le due password non corrispondono!",self.oldPassword="",self.newPassword="",self.newPassword2="";else self.messageErrorModifyPassword="Inserire tutti i campi richiesti!",self.oldPassword="",self.newPassword="",self.newPassword2=""}}]),angular.module("smiled.application").controller("registerCtrl",["apiService","$state","alertingRegistration",function(apiService,$state,alertingRegistration){var self=this;self.user={},self.user.agree=!1,self.dateOptions={regional:"it",changeYear:!0,maxDate:"0",minDate:new Date(1900,0,1,0,0,0,0),yearRange:"1900:c"},self.postRegister=function(){validateRegister()?apiService.postRegister(self.user).then(function(data){console.log("success register"),self.user.email="",self.user.firstName="",self.user.lastName="",self.user.bornDate="",self.user.schoolCity="",self.user.bornCity="",self.user.nameOfSchool="",self.user.password="",self.user.confirmPassword="",self.user.agree=!1,alertingRegistration.addSuccess("La tua richiesta e' stata accettata. A breve riceverai una mail per confermare la tua registrazione")},function(reason){throw self.user.email="",self.user.firstName="",self.user.lastName="",self.user.bornDate="",self.user.schoolCity="",self.user.bornCity="",self.user.nameOfSchool="",self.user.password="",self.user.confirmPassword="",self.user.agree=!1,alertingRegistration.addDanger("Non e' stato possibile completare la registrazione, ti preghiamo di riprovare!"),new Error("Non e' stato possibile completare la registrazione, ti preghiamo di riprovare!")}):(self.user.password="",self.user.confirmPassword="")};var validateRegister=function(){return null==self.user.email||""==self.user.email||null==self.user.firstName||""==self.user.firstName||null==self.user.lastName||""==self.user.lastName||null==self.user.bornDate||""==self.user.bornDate||null==self.user.bornCity||""==self.user.bornCity||null==self.user.schoolCity||""==self.user.schoolCity||null==self.user.nameOfSchool||""==self.user.nameOfSchool||null==self.user.password||""==self.user.password||null==self.user.confirmPassword||""==self.user.confirmPassword?(alertingRegistration.addWarning("Compilare tutti i campi!"),!1):self.user.agree?validateEmail(self.user.email)?self.user.password!=self.user.confirmPassword?(alertingRegistration.addWarning("Attenzione le due password digitate non corrispondono!"),!1):self.user.password.length<8?(alertingRegistration.addWarning("Password troppo corta!"),!1):!0:(alertingRegistration.addWarning("Email non valida!"),!1):(alertingRegistration.addWarning("Acconsenti al trattamento dei tuoi dati personali!"),!1)},validateEmail=function(email){var re=/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{1,6}(?:\.[a-z]{1})?)$/i;return re.test(email)},scen1={img:"assets/public/img/green.jpg"},scen2={img:"assets/public/img/landing page/Personalizzabile.png"},scen3={img:"assets/public/img/landing page/Sicura.png"},scen4={img:"assets/public/img/landing page/Collaborativa.png"},scen5={img:"assets/public/img/cover_default.jpg"},scen6={img:"assets/public/img/calderone1.png"},scen7={img:"assets/public/img/icon/pg.png"},scen8={img:"assets/public/img/wizard/wiz_att.png"},scen9={img:"assets/public/img/wizard/wiz_char.png"},scen10={img:"assets/public/img/wizard/wiz_coll.png"},scen11={img:"assets/public/img/ic_creatingscenario.png"},scen12={img:"assets/public/img/ic_openscenario.png"},scen13={img:"assets/public/img/wizard/wiz_info.png"},scenarios=[scen1,scen2,scen3,scen4,scen5,scen6,scen7,scen8,scen9,scen10,scen11,scen12,scen13],scenarioIndex=0;self.hideArrowsL=!1,self.scenariosToShowL=scenarios.slice(0,5),scenarios.length<=5&&(self.hideArrowsL=!0),self.shiftScenariosAfterL=function(){scenarioIndex+=5,(scenarioIndex>11||scenarioIndex>=scenarios.length)&&(scenarioIndex=0),scenarios.length-scenarioIndex<=5&&(scenarioIndex=scenarios.length-5),self.scenariosToShowL=scenarios.slice(scenarioIndex,scenarioIndex+5)},self.shiftScenariosBeforeL=function(){0==scenarioIndex?scenarioIndex=scenarios.length-5:scenarioIndex-=5,0>scenarioIndex&&(scenarioIndex=0),self.scenariosToShowL=scenarios.slice(scenarioIndex,scenarioIndex+5)},self.hideArrowsM=!1,self.scenariosToShowM=scenarios.slice(0,3),scenarios.length<=3&&(hideArrowsM=!0),self.shiftScenariosAfterM=function(){scenarioIndex+=3,(scenarioIndex>12||scenarioIndex>=scenarios.length)&&(scenarioIndex=0),scenarios.length-scenarioIndex<=3&&(scenarioIndex=scenarios.length-3),self.scenariosToShowM=scenarios.slice(scenarioIndex,scenarioIndex+3)},self.shiftScenariosBeforeM=function(){0==scenarioIndex?scenarioIndex=scenarios.length-3:(scenarioIndex-=3,0>scenarioIndex&&(scenarioIndex=0)),self.scenariosToShowM=scenarios.slice(scenarioIndex,scenarioIndex+3)},self.hideArrowsS=!1,self.scenariosToShowS=scenarios.slice(0,1),scenarios.length<=1&&(hideArrowsM=!0),self.shiftScenariosAfterS=function(){scenarioIndex+=1,scenarioIndex>=scenarios.length&&(scenarioIndex=0),self.scenariosToShowS=scenarios.slice(scenarioIndex,scenarioIndex+1)},self.shiftScenariosBeforeS=function(){0==scenarioIndex?scenarioIndex=scenarios.length-1:(scenarioIndex-=1,0>scenarioIndex&&(scenarioIndex=0)),self.scenariosToShowS=scenarios.slice(scenarioIndex,scenarioIndex+1)}}]),angular.module("smiled.application").controller("registrationConfirmCtrl",["$state",function($state){$state.go("login")}]),angular.module("smiled.application").controller("scenarioCharactersCtrl",["CONSTANTS","$scope",function(CONSTANTS,$scope){var self=this;self.scen=$scope.scenario.scen;var onStartup=function(){if(self.associations=self.scen.characters,self.associations)for(var i=0;i<self.associations.length;i++)if(self.associations[i].cover=CONSTANTS.urlCharacterCover(self.scen.id,self.associations[i].id),console.log(self.associations[i].cover),self.associations[i].userId&&self.scen.attendees)for(var j=0;j<self.scen.attendees.length;j++)if(self.scen.attendees[j].id==self.associations[i].id){self.associations[i].userFirstName=self.scen.attendees[j].firstname,self.associations[i].userLastName=self.scen.attendees[j].lasstname,self.associations[i].userCover=CONSTANTS.urlUserCover(self.scen.attendees[j].id);break}};onStartup()}]),angular.module("smiled.application").controller("scenarioCtrl",["scenario","loggedUser","CONSTANTS","apiService","userService","modalService","$location","$anchorScroll","Upload","notifyService","$scope","$interval",function(scenario,loggedUser,CONSTANTS,apiService,userService,modalService,$location,$anchorScroll,Upload,notifyService,$scope,$interval){var self=this;self.scen=scenario,self.loggedUser=loggedUser;var date=new Date;self.scen.cover=CONSTANTS.urlScenarioCover(self.scen.id)+"?"+date.toString(),self.isModerator=!1,self.isCreator=!1,self.hasCharacter=!1,self.currentCharacter={},self.showBoxEvent=!1,self.showBoxCharacters=!1,self.showBoxAttendees=!1,self.showBoxCollaborators=!1,self.showBoxInfo=!0,self.numNewPost=0,self.dateFormat=CONSTANTS.realDateFormatWithMinute,self.firstNameAndSecondName=function(first,second){return first+" "+second},self.openBoxEvent=function(){self.showBoxEvent=!self.showBoxEvent},self.openBoxCharacters=function(){self.showBoxCharacters=!0},self.openBoxAttendees=function(){self.showBoxAttendees=!0},self.openBoxCollaborators=function(){self.showBoxCollaborators=!0},self.openBoxInfo=function(){self.showBoxInfo=!0},self.closeBoxInfo=function(){self.showBoxInfo=!1},self.closeBoxCharacters=function(){self.showBoxCharacters=!1},self.closeBoxAttendees=function(){self.showBoxAttendees=!1},self.closeBoxCollaborators=function(){self.showBoxCollaborators=!1},self.incrementNumNewPost=function(){self.numNewPost++};var resetNumNewPost=function(){self.numNewPost=0};self.showNewPosts=function(){notifyService.reloadList(),resetNumNewPost(),$location.hash("top"),$anchorScroll(),$location.url($location.path())};var reloadMe=function(){userService.getMe().then(function(data){self.loggedUser=data,onStartup()},function(reason){consolelog("error")})},onStartup=function(){if(self.scen.teacherCreator.id==self.loggedUser.id&&(self.isCreator=!0,self.isModerator=!0),userService.setScenarioId(self.scen.id),!self.isModerator&&self.scen.collaborators)for(var i=0;i<self.scen.collaborators.length;i++)if(self.scen.collaborators[i].id==self.loggedUser.id){self.isModerator=!0;break}if("ACTIVE"==self.scen.status&&null!=self.loggedUser.openScenarios)for(var i=0;i<self.loggedUser.openScenarios.length;i++)if(self.loggedUser.openScenarios[i].id==self.scen.id)if(self.loggedUser.openScenarios[i].myCharacterId){var date=new Date;self.hasCharacter=!0,self.currentCharacter.id=self.loggedUser.openScenarios[i].myCharacterId,self.currentCharacter.name=self.loggedUser.openScenarios[i].myCharacterName,self.currentCharacter.cover=CONSTANTS.urlCharacterCover(self.scen.id,self.currentCharacter.id)+"?"+date.toString()}else self.hasCharacter=!1,self.currentCharacter={}};self.uploadCover=function(file){file&&file.length&&Upload.upload({url:CONSTANTS.urlScenarioCover(self.scen.id),headers:{"Content-Type":file.type},file:file}).success(function(data,status,headers,config){var date=new Date;self.scen.cover=CONSTANTS.urlScenarioCover(self.scen.id)+"?"+date.toString()})},self.goToBody=function(){$location.hash("body-content"),$anchorScroll(),$location.url($location.path())};var newPostListener=$scope.$on("notification.newPostEvent",function(){self.incrementNumNewPost(),$scope.$applyAsync()});$scope.$on("$destroy",function(){notifyService.resetObserverAssociation(),newPostListener()}),notifyService.registerObserverAssociation(reloadMe),onStartup()}]),angular.module("smiled.application").controller("scenarioMapCtrl",["CONSTANTS","$scope","apiService","Fullscreen",function(CONSTANTS,$scope,apiService,Fullscreen){var self=this;self.isFullScreen=!1,self.scen=$scope.scenario.scen,self.scen.history.mapId&&(self.map=CONSTANTS.urlMedia(self.scen.history.mapId)),self.posts=apiService.getPagedPosts(self.scen.id,0,300,!1),self.slide=0,self.startDateString="",self.endDateString="",self.actualDate="",self.bars={},self.getHeight=function(i){if(self.bars&&self.bars[i]){var max=Math.max.apply(Math,self.bars);return 0==max?"0%":parseInt(100*self.bars[i]/max)+"%"}return"0%"},self.getDisplace=function(){var widthDiv=angular.element(document.querySelector("#slider")).width(),displace=parseInt(widthDiv/100*self.slide);return displace-=displace>.75*widthDiv?widthDiv/4:widthDiv/8,displace+"px"},self.options={orientation:"horizontal",min:0,max:100,range:"min"},self.toggleFullScreen=function(){self.isFullScreen=!self.isFullScreen,self.isFullScreen?Fullscreen.all():Fullscreen.cancel()}}]),angular.module("smiled.application").controller("scenarioMissionsCtrl",["$stateParams","apiService","$scope","CONSTANTS",function($stateParams,apiService,$scope,CONSTANTS){var self=this,myId=$scope.scenario.loggedUser.id;self.myCharacter=null,self.characters=[];var onStartUp=function(){if(apiService.getScenario($stateParams.id).then(function(data){$scope.scenario.scen=data;var date=new Date;$scope.scenario.scen.cover=CONSTANTS.urlScenarioCover($scope.scenario.scen.id)+"?"+date.toString()},function(reason){console.log("error in find scenario")}),$scope.scenario.isModerator||$scope.scenario.isCreator||"ROLE_ADMIN"==$scope.scenario.loggedUser.role.authority)apiService.getAllCharactersFromScen($stateParams.id).then(function(data){self.characters=data},function(reason){console.log("error in find all characters")});else{if($scope.scenario.scen.characters)for(var i=0;i<$scope.scenario.scen.characters.length;i++)if($scope.scenario.scen.characters[i].userId==myId){self.myCharacter=$scope.scenario.scen.characters[i];break}self.myCharacter&&apiService.getCharacter($stateParams.id,self.myCharacter.id).then(function(data){self.characters.push(data)},function(reason){console.log("error in find my character")})}},reloadCharacterMission=function(idS,idC){apiService.getCharacter(idS,idC).then(function(data){if(self.characters)for(var i=0;i<self.characters.length;i++)self.characters[i].id==data.id&&(self.characters[i]=data)},function(reason){console.log("error in reload character mission")})},reloadGlobalMission=function(idS){apiService.getScenario(idS).then(function(data){$scope.scenario.scen=data;var date=new Date;$scope.scenario.scen.cover=CONSTANTS.urlScenarioCover(idS)+"?"+date.toString()},function(reason){console.log("error in reload global mission")})};onStartUp();var updateGlobalMission=$scope.$on("notification.updateGlobalMission",function(event,data){console.log("event!!!!!!!!!"),reloadGlobalMission(data.idS)}),updateCharacterMission=$scope.$on("notification.updateCharacterMission",function(event,data){reloadCharacterMission(data.idS,data.idC)});$scope.$on("$destroy",function(){updateCharacterMission(),updateGlobalMission()})}]),angular.module("smiled.application").controller("scenarioPostCtrl",["CONSTANTS","$scope","apiService","Upload","$interval","notifyService",function(CONSTANTS,$scope,apiService,Upload,$interval,notifyService){var self=this;self.scen=$scope.scenario.scen,self.currentCharacter=$scope.scenario.currentCharacter,self.posts=[],$scope.scenario.labelNewPosts=!0;var scrollable=CONSTANTS.numberOfPostForScroll;self.newEvent={},self.newEvent.date={afterChrist:!0},self.newEvent.date.formatted=CONSTANTS.insertHistoricalDateEvent,self.showDatePicker=!1,self.showDatePickerEvent=!1,$scope.scenario.hasCharacter?self.commentTab=!0:self.commentTab=!1,self.realDateFormat=CONSTANTS.realDateFormatWithHour,self.getUrlCoverCharacter=function(id){return CONSTANTS.urlCharacterCover(self.scen.id,id)},self.getUrlMedia=function(id){return CONSTANTS.urlMedia(id)},self.formatDate=function(date){return date.afterChrist?era="D.C.":era="A.C.",date.day+" / "+date.month+" / "+date.year+" "+era};var postAlreadyPresent=function(postId){for(var i=0;i<self.posts.length;i++)if(self.posts[i].id==postId)return!0;return!1};self.switchCommentTab=function(c){$scope.scenario.hasCharacter?self.commentTab=c:self.commentTab=!1};var stopScroll=!1;self.nextPost=function(){self.busy||stopScroll||(self.busy=!0,0==self.posts.length?self.getPost("",scrollable):self.getPost(self.posts[self.posts.length-1].id,scrollable))},self.busy=!1,self.getPost=function(lastId,n){apiService.getLastPosts(self.scen.id,lastId,n).then(function(data){var newPosts=[];newPosts=data,0==data.length&&(stopScroll=!0);for(var i=0;newPosts&&i<newPosts.length;i++){if(newPosts[i].character){newPosts[i].character.cover=CONSTANTS.urlCharacterCover(self.scen.id,newPosts[i].character.id);for(var j=0;j<newPosts[i].likes.length;j++)if(newPosts[i].likes[j].id==self.currentCharacter.id){newPosts[i].youLike=!0;break}}self.posts.push(angular.copy(newPosts[i]))}self.busy=!1},function(reason){console.log("errore"),self.busy=!1})};var updateScenarioWithNewPosts=function(listOfNewPosts){apiService.getListOfNewPosts(self.scen.id,listOfNewPosts).then(function(data){for(var newPosts=data.content,i=0;i<newPosts.length;i++)if(newPosts[i].character){newPosts[i].character.cover=CONSTANTS.urlCharacterCover(self.scen.id,newPosts[i].character.id);for(var j=0;j<newPosts[i].likes.length;j++)if(newPosts[i].likes[j].id==self.currentCharacter.id){newPosts[i].youLike=!0;break}}for(var i=0;i<self.posts.length;i++)newPosts.push(self.posts[i]);self.posts=newPosts},function(reason){console.log("errore")})},updateScenarioWithModPosts=function(listOfUpdPosts){if(null!=listOfUpdPosts&&listOfUpdPosts.length>0){for(var i=0;i<listOfUpdPosts.length;i++)postAlreadyPresent(listOfUpdPosts[i])||listOfUpPosts.splice(i,1);listOfUpdPosts.length>0&&apiService.getListOfNewPosts(self.scen.id,listOfUpdPosts).then(function(data){if(data.content)for(var i=0;i<data.content.length;i++)for(var j=0;j<self.posts.length;j++)self.posts[j].id==data.content[i].id&&(self.posts[j]=angular.copy(data.content[i]))},function(reason){console.log("errore")})}};self.addCommentToPost=function(s){if(s.newComment){var comment={};comment.text=s.newComment,apiService.sendCommentToPost(self.scen.id,s.id,comment).then(function(data){apiService.getSingleStatus(self.scen.id,s.id).then(function(data){for(var i=0;i<self.posts.length;i++)self.posts[i].id==data.id&&(data.newComment="",data.imageId&&(data.imageUrl=CONSTANTS.urlMedia(data.imageId)),data.character.cover=CONSTANTS.urlCharacterCover(self.scen.id,data.character.id),self.posts.splice(i,1,data))},function(reason){console.log("error in insert new post in array")})},function(reason){console.log("fail to send comment: "+reason)})}},self.addMetaCommentToPost=function(s){if(s.newMetaComment){var comment={};comment.text=s.newMetaComment,apiService.sendMetaCommentToPost(self.scen.id,s.id,comment).then(function(data){apiService.getSingleStatus(self.scen.id,s.id).then(function(data){s.newMetaComment="";for(var i=0;i<self.posts.length;i++)self.posts[i].id==data.id&&(data.newComment="",data.imageId&&(data.imageUrl=CONSTANTS.urlMedia(data.imageId)),data.character.cover=CONSTANTS.urlCharacterCover(self.scen.id,data.character.id),self.posts.splice(i,1,data))},function(reason){console.log("error in insert new post in array")})},function(reason){console.log("fail to send comment: "+reason)})}},notifyService.setActualScenarioId(self.scen.id),notifyService.registerObserverReloadList(updateScenarioWithNewPosts);var updPostEvent=$scope.$on("notification.updPostEvent",function(event,data){console.log("notification.updPostEvent");var listOfUpdPost=[];listOfUpdPost.push(data.id),updateScenarioWithModPosts(listOfUpdPost)}),updNewCommentEvent=$scope.$on("notification.updNewComment",function(event,data){for(var n=data.notification,founded=!1,i=0;i<self.posts.length;i++)if(self.posts[i].id==n.objectId){for(var j=0;self.posts[i].comments&&j<self.posts[i].comments.length;j++)if(self.posts[i].comments[j].id==n.comment.id){self.posts[i].comments[j]=angular.copy(n.comment),founded=!0;break}founded||self.posts[i].comments.splice(0,0,angular.copy(n.comment));break}}),updNewMetaCommentEvent=$scope.$on("notification.updNewMetaComment",function(event,data){for(var n=data.notification,founded=!1,i=0;i<self.posts.length;i++)if(self.posts[i].id==n.objectId){for(var j=0;self.posts[i].metaComments&&j<self.posts[i].metaComments.length;j++)if(self.posts[i].metaComments[j].id==n.metaComment.id){self.posts[i].metaComments[j]=angular.copy(n.metaComment),founded=!0;break}founded||self.posts[i].metaComments.splice(0,0,angular.copy(n.metaComment));break}});$scope.$on("$destroy",function(){updNewMetaCommentEvent(),updNewCommentEvent(),updPostEvent(),notifyService.resetActualScenarioId(),notifyService.resetObserverReloadList(),$scope.scenario.labelNewPosts=!1,self.post=[],$scope.scenario.numNewPost=0})}]),angular.module("smiled.application").controller("scenarioResourcesCtrl",["CONSTANTS","$scope","apiService","Upload","$location","$anchorScroll","modalService",function(CONSTANTS,$scope,apiService,Upload,$location,$anchorScroll,modalService){var self=this;self.scen=$scope.scenario.scen,self.uploadable=$scope.scenario.isCreator||$scope.scenario.isModerator,
self.showMetaBox=!1,self.showProgressBar=!1,self.newFile={},self.newFile.progress=0,self.showCancelButton=!1,self.error="",self.files=[],self.realDateFormat=CONSTANTS.realDateFormatWithHour;var up,getResourceType=function(format){return"jpg"==format||"png"==format||"gif"==format?"img":"pdf"==format?"pdf":"doc"==format||"docx"==format||"odt"==format||"txt"==format?"doc":"ppt"==format||"pptx"==format||"odp"==format?"ppt":(format="xls")?"excel":"doc"},uploadMediaList=function(){apiService.getTrustedMediaMetadata(self.scen.id).then(function(response){if(self.files=response,self.files)for(var i=0;i<self.files.length;i++)if(self.files[i].type=getResourceType(self.files[i].format),self.files[i].teacherId!=self.scen.teacherCreator.id){if(self.scen.collaborators)for(var j=0;j<self.scen.collaborators.length;j++)if(self.files[i].teacherId==self.scen.collaborators[j].id){self.files[i].user=self.scen.collaborators[j].firstname+" "+self.scen.collaborators[j].lastname;break}}else self.files[i].user=self.scen.teacherCreator.firstname+" "+self.scen.teacherCreator.lastname},function(reason){console.log("ERRORE DOWNLOAD METADATA")})};uploadMediaList(),self.uploadFiles=function(file){self.error="",up=Upload.upload({url:CONSTANTS.urlTrustedMediaScenarioPost(self.scen.id),headers:{"Content-Type":file.type},file:file}),up.then(function(resp){self.showCancelButton=!1,self.showMetaBox=!0,self.newFile.name=resp.config.file[0].name,self.newFile.id=resp.data.id,uploadMediaList()},function(reason){console.log("UPLOAD FAILED"),self.newFile.progress=0,self.error="Upload fallito ("+reason.data.message+"). Si prega di riprovare.",self.showCancelButton=!1},function(evt){self.showCancelButton=!0,self.showProgressBar=!0,self.newFile.progress=parseInt(100*evt.loaded/evt.total),self.widthProgressBar=self.newFile.progress+"%"})},self.abortUpload=function(){up.abort()},self.saveMeta=function(){var metaDTO={};metaDTO.description=self.newFile.description,apiService.postTrustedMediaMetadata(self.scen.id,self.newFile.id,metaDTO).then(function(data){self.showMetaBox=!1,self.showProgressBar=!1;for(var i=0;i<self.files.length;i++)self.files[i].name==self.newFile.id&&(self.files[i].description=self.newFile.description);self.newFile={},self.newFile.progress=0},function(reason){console.log("ERRORE UPLOAD METADATA!"),console.log(reason)})},self.hideMetaBox=function(){self.showMetaBox=!1,self.showProgressBar=!1,self.newFile={},self.newFile.progress=0},self.getMediaUrl=function(id){return CONSTANTS.urlMedia(id)},self.updateFile=function(index){$location.hash("update-description"),$anchorScroll(),$location.url($location.path()),self.showMetaBox=!0,self.newFile.name=self.files[index].originalName,self.newFile.id=self.files[index].name,self.newFile.description=self.files[index].description},self.removeFile=function(index){modalService.showModalDeleteResource(self.files[index]).then(function(response){apiService.deleteTrustedMedia(self.scen.id,self.files[index].name).then(function(response){self.files.splice(index,1)},function(reason){})},function(reason){console.log("errore")})}}]),angular.module("smiled.application").controller("scenarioSocialGraphCtrl",[function(){}]),angular.module("smiled.application").controller("scenarioStorylineCtrl",["apiService","$scope","CONSTANTS","Lightbox",function(apiService,$scope,CONSTANTS,Lightbox){var self=this;self.posts=[],self.date={};var numMediaPerRow=3,order=!0;self.showFromEnd=!0;var scrollable=CONSTANTS.numberOfPostForScroll;self.busy=!1;var stopScroll=!1;self.nextPost=function(){self.busy||stopScroll||(self.busy=!0,0==self.posts.length?getPost():getPost(self.posts[self.posts.length-1].julianDayNumber,self.posts[self.posts.length-1].timeNumber))};var getPost=function(date,time){apiService.getLastHistoricPosts($scope.scenario.scen.id,scrollable,order,date,time).then(function(data){var arrivedPosts=data;if(0==arrivedPosts.length)return void(stopScroll=!0);for(var i=0;i<arrivedPosts.length;i++){if(arrivedPosts[i].character&&arrivedPosts[i].character.id){arrivedPosts[i].character.cover=CONSTANTS.urlCharacterCover($scope.scenario.scen.id,arrivedPosts[i].character.id);for(var j=0;j<arrivedPosts[i].likes.length;j++)if(arrivedPosts[i].likes[j].id==arrivedPosts[i].character.id){arrivedPosts[i].youLike=!0;break}}else arrivedPosts[i].character={},arrivedPosts[i].character.name="Narratore",arrivedPosts[i].character.cover="assets/public/img/narr.png",arrivedPosts[i].isEvent=!0;if(arrivedPosts[i].comments)for(var j=0;j<arrivedPosts[i].comments.length;j++)arrivedPosts[i].comments[j].character.cover=CONSTANTS.urlCharacterCover($scope.scenario.scen.id,arrivedPosts[i].comments[j].character.id);if(arrivedPosts[i].imagesMetadata){arrivedPosts[i].media=new Array,arrivedPosts[i].media[0]=new Array;for(var col=-1,row=0,j=0;j<arrivedPosts[i].imagesMetadata.length;j++)0!=j&&j%numMediaPerRow==0?(col=0,row++,arrivedPosts[i].media[row]=new Array):col++,arrivedPosts[i].media[row][col]=CONSTANTS.urlMediaThumb(arrivedPosts[i].imagesMetadata[j].id),arrivedPosts[i].imagesMetadata[j].url=CONSTANTS.urlMedia(arrivedPosts[i].imagesMetadata[j].id)}self.posts.push(angular.copy(arrivedPosts[i]))}self.busy=!1},function(reason){console.log("errore"),self.busy=!1})};self.switchOrder=function(o){order=!order,self.posts=[],self.busy=!1,stopScroll=!1,self.nextPost()},self.getPosition=function(index){return index%2==0?"timeline-inverted":""};var getMonthString=function(month){return CONSTANTS.monthString(month)},julianNumberToDate=function(jd,date){var l=jd+68569,n=parseInt(4*l/146097);l-=parseInt((146097*n+3)/4);var i=parseInt(4e3*(l+1)/1461001);l=l-parseInt(1461*i/4)+31;var j=parseInt(80*l/2447);date.day=l-parseInt(2447*j/80),l=parseInt(j/11),date.month=j+2-12*l,date.year=100*(n-49)+i+l,date.dow=jd%7},getTimeToSeconds=function(timeNumber,t){t.hours=parseInt(timeNumber/3600),timeNumber%=3600,t.minutes=parseInt(timeNumber/60),timeNumber%=60,t.seconds=timeNumber};self.formatDate=function(jd,timeNumber){julianNumberToDate(jd,self.date);var era=self.date.year>0?"":" A.C.",s=getMonthString(self.date.month)+" "+Math.abs(self.date.year)+era;s=self.date.day+" "+s;var time={};return getTimeToSeconds(timeNumber,time),s+=" "+time.hours+":",s+=time.minutes<10?"0"+time.minutes:time.minutes},self.realDateFormatWithHour=CONSTANTS.realDateFormatWithHour,self.getMediaUrl=function(id){return CONSNTANTS.urlMedia(id)},self.openPostGallery=function(post,row,col){var index=row*numMediaPerRow+col;post.media&&Lightbox.openModal(post.imagesMetadata,index)}}]),angular.module("smiled.application").controller("scenarioWizardCtrl",["apiService","$stateParams","$state","$location","$scope","$element","userService","Upload","CONSTANTS","$q","modalService","$timeout","alertingGeneric",function(apiService,$stateParams,$state,$location,$scope,$element,userService,Upload,CONSTANTS,$q,modalService,$timeout,alertingGeneric){var self=this;self.scenario={};var tab;self.scenarioServer={},self.associated=[],self.notAssociatedAttendees=[],self.notAssociatedCharacters=[],self.emailList,self.accordionIsDisabled=!0,self.user,self.selectableStudents=[],self.currentCharacters=[],self.charactersServer=[],self.map,self.lastUserClicked=null,self.lastCharacterClicked=null;var currentCharacterIndex=-1,getMePromise=$q.defer(),id=$stateParams.id;userService.getMe().then(function(data){self.user=data;var userCopy=angular.copy(self.user);self.selectableStudents=userCopy.students,getMePromise.resolve(),getScenario()}),self.concatNameAndSurname=function(name,surname){return name+" "+surname},self.isClickedUser=function(id){return!(!self.lastUserClicked||id!=self.lastUserClicked.id)},self.isClickedCharacter=function(id){return!(!self.lastCharacterClicked||id!=self.lastCharacterClicked.id)},self.userClicked=function(user){self.lastUserClicked&&user.id==self.lastUserClicked.id?self.lastUserClicked=null:(self.lastUserClicked=user,null!=self.lastCharacterClicked&&(self.createAssociationWithoutDrag(),self.lastUserClicked=null,self.lastCharacterClicked=null))},self.characterClicked=function(character){self.lastCharacterClicked&&character.id==self.lastCharacterClicked.id?self.lastCharacterClicked=null:(self.lastCharacterClicked=character,null!=self.lastUserClicked&&(self.createAssociationWithoutDrag(),self.lastUserClicked=null,self.lastCharacterClicked=null))};var getScenario=function(){null==id?self.title="Crea nuovo scenario":(self.charging=!0,apiService.getScenario(id).then(function(data){self.scenarioServer=data,self.scenario=angular.copy(data),self.title=data.name,updateSelectableAttendees(),updateCover(),updateAssociated(),retrieveCharacterAndOrder()},function(reason){console.log("errore"),$state.go("logged.dashboard")}),self.scenarioCover=CONSTANTS.urlScenarioCover(id))};self.isScenarioActive=function(){return"ACTIVE"==self.scenario.status};var retrieveCharacterAndOrder=function(){apiService.getAllCharactersFromScen(id).then(function(data){if(self.scenario.characters)for(var i=0;i<self.scenario.characters.length;i++)for(var j=0;j<data.length;j++)if(data[j].id==self.scenario.characters[i].id){data[j].bornDate||(data[j].bornDate={},data[j].bornDate.afterChrist=!0),data[j].deadDate||(data[j].deadDate={},data[j].deadDate.afterChrist=!0),self.charactersServer[i]=data[j],self.currentCharacters[i]=angular.copy(data[j]),data.splice(j,1);break}self.accordionIsDisabled=!1},function(reason){console.log("errore")})},updateCover=function(){if(self.scenario.characters)for(var i=0;i<self.scenario.characters.length;i++)self.scenario.characters[i].cover=CONSTANTS.urlCharacterCover(id,self.scenario.characters[i].id),self.scenarioServer.characters[i].cover=CONSTANTS.urlCharacterCover(id,self.scenario.characters[i].id);if(self.scenario.attendees)for(var i=0;i<self.scenario.attendees.length;i++)self.scenario.attendees[i].cover=CONSTANTS.urlUserCover(self.scenario.attendees[i].id),self.scenarioServer.attendees[i].cover=CONSTANTS.urlUserCover(self.scenario.attendees[i].id);if(self.scenario.collaborators)for(var i=0;i<self.scenario.collaborators.length;i++)self.scenario.collaborators[i].cover=CONSTANTS.urlUserCover(self.scenario.collaborators[i].id),self.scenarioServer.collaborators[i].cover=CONSTANTS.urlUserCover(self.scenario.collaborators[i].id);self.scenario.teacherCreator.cover=CONSTANTS.urlUserCover(self.scenario.teacherCreator.id),self.scenarioServer.teacherCreator.cover=CONSTANTS.urlUserCover(self.scenario.teacherCreator.id),self.map=CONSTANTS.urlMedia(self.scenario.history.mapId)},updateAssociated=function(){var teacherPlay=!1,attendees=new Array;if(self.scenario.attendees&&(attendees=angular.copy(self.scenario.attendees)),self.scenario.collaborators&&(attendees=attendees.concat(self.scenario.collaborators)),self.scenario.characters)for(var i=0;i<self.scenario.characters.length;i++)if(null==self.scenario.characters[i].userId)self.notAssociatedCharacters.push(self.scenario.characters[i]);else if(self.scenario.characters[i].userId==self.scenario.teacherCreator.id){var association={};association.character=self.scenario.characters[i],association.attendee=self.scenario.teacherCreator,self.associations.push(association),teacherPlay=!0}else if(attendees)for(var j=0;j<attendees.length;j++)if(attendees[j].id==self.scenario.characters[i].userId){var association={};association.character=self.scenario.characters[i],association.attendee=attendees[j],self.associations.push(association),attendees.splice(j,1);break}self.notAssociatedAttendees=attendees,teacherPlay||self.notAssociatedAttendees.push(self.scenario.teacherCreator)};self.showPopUpDeleteScenario=function(){null!=self.scenario&&modalService.showModalDeleteScen(self.scenario)},self.showPopUpDeleteAttendee=function(a){modalService.showModalDeleteAttendee(a).then(function(response){response.firstname?self.deleteAttendee(response):self.deleteInvited(response),alertingGeneric.addSuccess("Partecipante rimosso")},function(reason){console.log("Errore - Rimozione partecipante annullata")})},self.showPopUpDeleteCollaborator=function(c){modalService.showModalDeleteCollaborator(c).then(function(response){self.deleteCollaborator(response),alertingGeneric.addSuccess("Collaboratore rimosso")},function(reason){console.log("Rimozione collaboratore annullata")})},self.showPopUpDeleteCharacter=function(c){modalService.showModalDeleteCharacter(c).then(function(response){self.deleteCharacter(c),alertingGeneric.addSuccess("Personaggio rimosso")},function(reason){console.log("Rimozione personaggio annullata")})};var reInsertInSelectable=function(s){self.selectableStudents.push(s)},updateSelectableAttendees=function(){if(self.scenarioServer&&self.scenarioServer.attendees&&self.selectableStudents)for(var i=0;i<self.scenarioServer.attendees.length;i++)for(var j=0;j<self.selectableStudents.length;j++)self.scenarioServer.attendees[i].id==self.selectableStudents[j].id&&self.selectableStudents.splice(j,1)};self.getPagedTeacherByRegex=function(regex){return apiService.getPagedTeacherByRegex(0,10,regex).then(function(data){return filterListSelectableCollaborators(data.content)},function(reason){console.log("failed to get paged teacher by regex"),console.log(reason)})};var filterListSelectableCollaborators=function(l){var found=!1;if(l)for(var i=0;i<l.length;i++)if(found=!1,l[i].id!=self.user.id){if(null!=self.scenario.collaborators)for(var j=0;j<self.scenario.collaborators.length;j++)if(l[i].id==self.scenario.collaborators[j].id){l.splice(i,1),found=!0;break}}else l.splice(i,1);return l};self.exitWizard=function(){self.saveInfo(),self.checkOpenAccordion()},self.saveInfo=function(){var scenarioDTO={};scenarioDTO.name=self.scenario.name,scenarioDTO.description=self.scenario.description,scenarioDTO.history=self.scenario.history,scenarioDTO.showRelationsToAll=self.scenario.showRelationsToAll,null==id?(scenarioDTO.showRelationsToAll=!0,infoValidate()?apiService.createScenario(scenarioDTO).then(function(data){id=data.id},function(reason){console.log("Errore creazione scenario")}):console.log("fail infoValidate")):!isEquivalent(self.scenario,self.scenarioServer)&&infoValidate()&&apiService.updateScenario(scenarioDTO,id).then(function(data){self.scenarioServer=data,self.scenario=angular.copy(data),updateCover(),alertingGeneric.addSuccess("Scenario modificato")},function(reason){alertingGeneric.addWarning("Modifica scenario fallita")})},self.inviteStudents=function(){var emails=extractEmails(self.emailList);console.log(emails);var emailsDTO=[];if(emails)for(var i=0;i<emails.length;i++)emailsDTO.push({email:emails[i]});emailsDTO&&emailsDTO.length>0&&null!=id?apiService.addUsersToScenario(emailsDTO,id).then(function(data){var diff=emailsDTO.length-data.length;1==data.length?1==emailsDTO.length?alertingGeneric.addSuccess("Studente invitato correttamente"):1==diff?alertingGeneric.addSuccess(data.length+" studente invitato correttamente. (Non e'stato possibile invitare "+diff+" studente)"):alertingGeneric.addSuccess(data.length+" studente invitato correttamente. (Non e'stato possibile invitare "+diff+" studenti)"):data.length>1&&(0==diff?alertingGeneric.addSuccess("Tutti gli studenti sono stati invitati correttamente"):1==diff?alertingGeneric.addSuccess(data.length+" studenti invitati correttamente. (Non e'stato possibile invitare "+diff+" studente)"):alertingGeneric.addSuccess(data.length+" studenti invitati correttamente. (Non e'stato possibile invitare "+diff+" studenti)"));for(var i=0;i<data.length;i++)null!=data[i].firstname?(data[i].cover=CONSTANTS.urlUserCover(data[i].id),null!=self.scenarioServer.attendees&&""!=self.scenarioServer.attendees||(self.scenarioServer.attendees=new Array),self.scenarioServer.attendees.push(data[i]),self.notAssociatedAttendees.push(angular.copy(data[i]))):(null!=self.scenarioServer.invited&&""!=self.scenarioServer.invited||(self.scenarioServer.invited=new Array),self.scenarioServer.invited.push(data[i]));self.emailList=null,data.length>0?updateSelectableAttendees():1==emailsDTO.length?alertingGeneric.addWarning("Non e' stato possibile invitare l'utente associato alla mail inserita"):alertingGeneric.addWarning("Non e' stato possibile invitare nessuno degli utenti associati alle mail inserite")},function(reason){console.log(reason)}):(alertingGeneric.addWarning("Inserire almeno una email valida"),self.emailList=null)},self.uploadCover=function(file){file&&file.length&&Upload.upload({url:CONSTANTS.urlScenarioCover(id),headers:{"Content-Type":file.type},file:file}).success(function(data,status,headers,config){var date=new Date;self.scenarioCover=CONSTANTS.urlScenarioCover(id)+"?"+date.toString()})},self.uploadCharacterCover=function(file,event,idCharacter){file&&file.length&&idCharacter&&Upload.upload({url:CONSTANTS.urlCharacterCover(id,idCharacter),headers:{"Content-Type":file.type},file:file}).success(function(data,status,headers,config){for(var i=0;i<self.scenario.characters.length;i++)if(self.scenario.characters[i].id==idCharacter){var d=new Date;self.scenario.characters[i].cover=CONSTANTS.urlCharacterCover(id,idCharacter)+"?"+d.toString()}})},self.addCharacter=function(){self.newCharacter&&self.newCharacter.name.length>2&&apiService.addCharacterToScenario(self.newCharacter,id).then(function(data){var name=angular.copy(self.newCharacter.name);self.newCharacter.id=data.id,null!=self.scenario.characters&&""!=self.scenario.characters||(self.scenario.characters=new Array),self.newCharacter.cover=CONSTANTS.urlCharacterCover(id,self.newCharacter.id),self.newCharacter.isOpen=!1,self.newCharacter.isSync=!1,self.scenario.characters.push(angular.copy(self.newCharacter)),self.newCharacter.isOpen=null,self.newCharacter.isSync=null,self.newCharacter.bornDate={},self.newCharacter.bornDate.afterChrist=!0,self.newCharacter.deadDate={},self.newCharacter.deadDate.afterChrist=!0,self.charactersServer.push(angular.copy(self.newCharacter)),self.currentCharacters.push(angular.copy(self.newCharacter)),self.notAssociatedCharacters.push(angular.copy(self.newCharacter)),self.newCharacter.cover=null,self.newCharacter.name="",self.newCharacter.id=null,alertingGeneric.addSuccess("Il personaggio "+name+" e' stato creato correttamente")},function(reason){alertingGeneric.addWarning("Non è stato possibile creare il personaggio "+self.newCharacter.name)})};var syncCurrentCharacter=function(i,c){current=angular.copy(c),self.currentCharacters[i].name=current.name,self.currentCharacters[i].nickname=current.nickname,self.currentCharacters[i].bornDate=current.bornDate,self.currentCharacters[i].deadDate=current.deadDate,self.currentCharacters[i].bornTown=current.bornTown,self.currentCharacters[i].deadTown=current.deadTown,self.currentCharacters[i].description=current.description,self.currentCharacters[i].quote=current.quote,self.currentCharacters[i].gender=current.gender,self.currentCharacters[i].role=current.role};self.openAccordion=function(i){if(!self.accordionIsDisabled)if(-1!=currentCharacterIndex)if(isUpdatedCharacter(self.currentCharacters[currentCharacterIndex],self.charactersServer[currentCharacterIndex]))if(isCurrentCharacterValid(self.currentCharacters[currentCharacterIndex])){i!=currentCharacterIndex&&syncCurrentCharacter(i,self.charactersServer[i]);var charDTO=angular.copy(self.currentCharacters[currentCharacterIndex]);checkHistoricalDate(charDTO),apiService.updateCharacter(id,charDTO,self.charactersServer[currentCharacterIndex].id).then(function(data){self.charactersServer[currentCharacterIndex]=data;var cover=angular.copy(self.scenario.characters[currentCharacterIndex].cover);if(self.scenario.characters[currentCharacterIndex]=angular.copy(self.charactersServer[currentCharacterIndex]),self.scenario.characters[currentCharacterIndex].cover=cover,data.bornDate||(self.scenario.characters[currentCharacterIndex].bornDate={},self.scenario.characters[currentCharacterIndex].bornDate.afterChrist=!0),data.deadDate||(self.scenario.characters[currentCharacterIndex].deadDate={},self.scenario.characters[currentCharacterIndex].deadDate.afterChrist=!0),null!=self.scenario.characters[currentCharacterIndex].userId){for(var k=0;i<self.associations.length;k++)if(self.associations[k].character.id==self.scenario.characters[currentCharacterIndex].id){self.associations[k].character.name=self.scenario.characters[currentCharacterIndex].name;break}}else for(var j=0;j<self.notAssociatedCharacters.length;j++)if(self.notAssociatedCharacters[j].id==self.scenario.characters[currentCharacterIndex].id){self.notAssociatedCharacters[j].name=self.scenario.characters[currentCharacterIndex].name;break}currentCharacterIndex=currentCharacterIndex!=i?i:-1,alertingGeneric.addSuccess("Il personaggio "+data.name+" e' stato modificato correttamente")},function(reason){alertingGeneric.addWarning("Non e' stato possibile modificare il personaggio ");var cover=angular.copy(self.currentCharacters[currentCharacterIndex].cover);self.currentCharacters[currentCharacterIndex]=angular.copy(self.charactersServer[currentCharacterIndex]);self.currentCharacters[currentCharacterIndex].cover=cover})}else{alertingGeneric.addWarning("Non e' stato possibile modificare il personaggio");var cover=angular.copy(self.currentCharacters[currentCharacterIndex].cover);self.currentCharacters[currentCharacterIndex]=angular.copy(self.charactersServer[currentCharacterIndex]),self.currentCharacters[currentCharacterIndex].cover=cover,currentCharacterIndex=currentCharacterIndex!=i?i:-1}else currentCharacterIndex=currentCharacterIndex!=i?i:-1;else currentCharacterIndex=i};var checkHistoricalDate=function(charDTO){!charDTO.bornDate||charDTO.bornDate.year||charDTO.bornDate.month||charDTO.bornDate.day||(charDTO.bornDate=null),!charDTO.deadDate||charDTO.deadDate.year||charDTO.deadDate.month||charDTO.deadDate.day||(charDTO.deadDate=null)};self.addCollaborator=function(collaborator){apiService.addCollaboratorToScenario(collaborator.id,id).then(function(data){null==self.scenarioServer.collaborators&&(self.scenarioServer.collaborators=new Array),self.scenarioServer.collaborators.push(data),self.selectedCollaborator="",null==self.scenario.collaborators&&(self.scenario.collaborators=new Array),self.scenario.collaborators.push(angular.copy(data)),null==self.notAssociatedAttendees&&(self.notAssociatedAttendees=new Array);var newCollaborator=angular.copy(data);alertingGeneric.addSuccess(newCollaborator.firstname+" "+newCollaborator.lastname+" aggiunto correttamente"),newCollaborator.cover=CONSTANTS.urlUserCover(data.id),self.notAssociatedAttendees.push(newCollaborator)},function(reason){alertingGeneric.addWarning("Errore nell'aggiunta del collaboratore. Operazione consentita solo al creatore dello scenario.")})},self.addAttendee=function(attendee){var emailsDTO=[];emailsDTO.push({email:attendee.email}),apiService.addUsersToScenario(emailsDTO,id).then(function(data){for(var i=0;i<data.length;i++)null!=data[i].firstname?(data[i].cover=CONSTANTS.urlUserCover(data[i].id),null!=self.scenarioServer.attendees&&""!=self.scenarioServer.attendees||(self.scenarioServer.attendees=new Array),self.scenarioServer.attendees.push(data[i]),self.notAssociatedAttendees.push(angular.copy(data[i]))):(null!=self.scenarioServer.invited&&""!=self.scenarioServer.invited||(self.scenarioServer.invited=new Array),self.scenarioServer.invited.push(data[i]));self.emailList=null,self.selectedUser="",alertingGeneric.addSuccess(attendee.firstname+" "+attendee.lastname+" aggiunto correttamente");for(var j=0;j<self.selectableStudents.length;j++)self.selectableStudents[j].id==attendee.id&&self.selectableStudents.splice(j,1)},function(reason){1==emailsDTO.length&&alertingGeneric.addWarning("Errore nell'aggiunta del partecipante")})},self.enterInScenario=function(){self.exitWizard(),$state.go("logged.scenario.posts",{id:id})},self.deleteAttendee=function(s){apiService.removeUserFromScenario(id,s.id).then(function(data){for(var i=0;i<self.scenarioServer.attendees.length;i++)self.scenarioServer.attendees[i].id==s.id&&(self.scenarioServer.attendees.splice(i,1),self.scenario.attendees.splice(i,1));reInsertInSelectable(s),manageAssociationOnAttendeeDeletion(s)},function(reason){alertingGeneric.addWarning("Errore nella rimozione del partecipante."),console.log("Delete attendee failed: "+reason)})},self.deleteCollaborator=function(c){apiService.removeCollaboratorFromScenario(id,c.id,!1).then(function(data){for(var i=0;i<self.scenarioServer.collaborators.length;i++)self.scenarioServer.collaborators[i].id==c.id&&self.scenarioServer.collaborators.splice(i,1),self.scenario.collaborators[i].id==c.id&&self.scenario.collaborators.splice(i,1);manageAssociationOnAttendeeDeletion(c)},function(reason){alertingGeneric.addWarning("Errore nella rimozione del collaboratore. Operazione consentita solo al creatore dello scenario."),console.log("Delete collaborator failed: "+reason)})},self.deleteInvited=function(s){apiService.removeUserFromScenario(id,s.id).then(function(data){for(var i=0;i<self.scenarioServer.invited.length;i++)self.scenarioServer.invited[i].id==s.id&&self.scenarioServer.invited.splice(i,1)},function(reason){console.log("Delete invited user failed: "+reason)})},self.deleteCharacter=function(c){apiService.removeCharacterFromScenario(id,c.id).then(function(data){for(var i=0;i<self.scenario.characters.length;i++)self.scenario.characters[i].id==c.id&&(self.scenario.characters.splice(i,1),self.charactersServer.splice(i,1),self.currentCharacters.splice(i,1),self.scenarioServer.characters.splice(i,1),manageAssociationOnCharacterDeletion(c),currentCharacterIndex=-1)},function(reason){console.log("Delete character failed: "+reason)})};var dragged,manageAssociationOnAttendeeDeletion=function(a){if(self.notAssociatedAttendees)for(var j=0;j<self.notAssociatedAttendees.length;j++)if(self.notAssociatedAttendees[j].id==a.id)return void self.notAssociatedAttendees.splice(j,1);if(self.associations)for(var i=0;i<self.associations.length;i++)if(self.associations[i].attendee.id==a.id){self.notAssociatedCharacters.push(self.associations[i].character),self.associations.splice(i,1);break}},manageAssociationOnCharacterDeletion=function(c){if(self.notAssociatedCharacters)for(var j=0;j<self.notAssociatedCharacters.length;j++)if(self.notAssociatedCharacters[j].id==c.id)return void self.notAssociatedCharacters.splice(j,1);if(self.associations)for(var i=0;i<self.associations.length;i++)if(self.associations[i].character.id==c.id){self.notAssociatedAttendees.push(self.associations[i].attendee),self.associations.splice(i,1);break}};self.associations=new Array,self.createAssociationWithoutDrag=function(){var association={};association.attendee=self.lastUserClicked,association.character=self.lastCharacterClicked,apiService.addUserToCharacter(id,association.attendee.id,association.character.id).then(function(data){if(self.associations.push(angular.copy(association)),self.notAssociatedAttendees)for(var i=0;i<self.notAssociatedAttendees.length;i++)if(self.notAssociatedAttendees[i].id==association.attendee.id){self.notAssociatedAttendees.splice(i,1);break}if(self.notAssociatedCharacters)for(var i=0;i<self.notAssociatedCharacters.length;i++)if(self.notAssociatedCharacters[i].id==association.character.id){self.notAssociatedCharacters.splice(i,1);break}},function(reason){console.log("Association failed: "+reason)})},self.dropSuccessHandlerCharacter=function($event,indexAttendee){var association={};association.attendee=self.notAssociatedAttendees[indexAttendee],association.character=self.notAssociatedCharacters[dragged],apiService.addUserToCharacter(id,association.attendee.id,association.character.id).then(function(data){self.associations.push(angular.copy(association)),self.notAssociatedAttendees.splice(indexAttendee,1),self.notAssociatedCharacters.splice(dragged,1)},function(reason){console.log("Association failed: "+reason)})},self.dropSuccessHandlerAttendee=function($event,indexCharacter){var association={};association.attendee=self.notAssociatedAttendees[dragged],association.character=self.notAssociatedCharacters[indexCharacter],apiService.addUserToCharacter(id,association.attendee.id,association.character.id).then(function(data){self.associations.push(angular.copy(association)),self.notAssociatedAttendees.splice(dragged,1),self.notAssociatedCharacters.splice(indexCharacter,1)},function(reason){console.log("Association failed: "+reason)})},self.onDrop=function($event,$data,index){dragged=index},self.removeAssociation=function(a){for(var character=a.character,attendee=a.attendee,i=0;i<self.associations.length;i++)if(self.associations[i].attendee.id==a.attendee.id){apiService.removeUserFromCharacter(id,attendee.id,character.id).then(function(data){self.notAssociatedAttendees.push(attendee),self.notAssociatedCharacters.push(character),self.associations.splice(i,1)},function(reason){console.log("Removing asssociation failed:"+reason)});break}},self.openScenario=function(){self.exitWizard();var scenarioDTO={status:"ACTIVE"};apiService.updateScenario(scenarioDTO,id).then(function(data){self.scenarioServer=data,$state.go("logged.scenario.posts",{id:id})},function(reason){console.log("C'è stato un problema, impossibile attivare lo scenario")})},self.closeScenario=function(){self.exitWizard()},self.suspendScenario=function(){console.log("sospensione scenario da implementare")},self.showPopUpSetDate=function(flagFirst){modalService.showPopUpSetDate(self.scenario,flagFirst)},self.isStudent=function(s){return"Student"==s.type},self.uploadMap=function(file){file&&file.length&&Upload.upload({url:CONSTANTS.urlPostMedia(self.scenario.id),headers:{"Content-Type":file.type},file:file}).success(function(data,status,headers,config){self.scenario.history.mapId=data.id;var scenarioDTO={};scenarioDTO.history={},scenarioDTO.history.mapId=data.id,apiService.updateScenario(scenarioDTO,self.scenario.id).then(function(data){self.scenarioServer=data},function(reason){console.log("ERROR UPLOAD MAP")});var date=new Date;self.map=CONSTANTS.urlMedia(data.id)+"?"+date.toString()})},self.showDeadDatePicker=!1,self.switchShowDeadDate=function(){!self.showDeadDatePicker&&self.showBornDatePicker&&(self.showBornDatePicker=!1),self.showDeadDatePicker=!self.showDeadDatePicker},self.showBornDatePicker=!1,self.switchShowBornDate=function(){!self.showBornDatePicker&&self.showDeadDatePicker&&(self.showDeadDatePicker=!1),self.showBornDatePicker=!self.showBornDatePicker},self.hideDatePicker=function(){self.showDeadDatePicker=!1,self.showBornDatePicker=!1};var onStartup=function(){var path=$location.path(),tabString=path.substr(path.lastIndexOf("/")+1);"info"==tabString?tab=0:"attendees"==tabString?tab=1:"characters"==tabString?tab=2:"associations"==tabString?tab=3:"collaborators"==tabString&&(tab=4)};self.checkOpenAccordion=function(){if(self.scenario.characters)for(var i=0;i<self.scenario.characters.length;i++)if(self.scenario.characters[i].isOpen){self.openAccordion(i);break}},self.changeStateTab=function(newDestination){switch(tab){case 0:tab=newDestination,self.saveInfo();break;case 1:tab=newDestination;break;case 2:self.checkOpenAccordion(),tab=newDestination;break;case 3:tab=newDestination;break;case 4:tab=newDestination}};var isEquivalent=function(a,b){return a.name!=b.name?!1:a.description!=b.description?!1:(r=angular.equals(a.history.startDate,b.history.startDate),0==r?!1:(r=angular.equals(a.history.endDate,b.history.endDate),0==r?!1:a.showRelationsToAll==b.showRelationsToAll))},dateValidate=function(){return self.scenario.history&&self.scenario.history.startDate.year&&!checkDate(self.scenario.history.startDate.year)?(alertingGeneric.addWarning("Data non valida"),self.scenario=angular.copy(self.scenarioServer),!1):self.scenario.history&&self.scenario.history.endDate.year&&!checkDate(self.scenario.history.endDate.year)?(alertingGeneric.addWarning("Data non valida"),self.scenario=angular.copy(self.scenarioServer),!1):self.scenario.history&&self.scenario.history.startDate&&self.scenario.history.endDate&&!checkIfEndIsAfterStart(self.scenario.history.startDate,self.scenario.history.endDate)?(self.scenario=angular.copy(self.scenarioServer),!1):!0},infoValidate=function(){if(!dateValidate())return!1;var ret=!0;return(!self.scenario.name||self.scenario.name.length<2)&&(alertingGeneric.addWarning("Il nome dello scenario deve essere di almeno 2 caratteri"),
ret=!1,self.scenario=angular.copy(self.scenarioServer)),self.scenario.history&&self.scenario.history.startDate&&!self.scenario.history.startDate.afterChrist&&parseInt(self.scenario.history.startDate.year)>4712?(alertingGeneric.addWarning("La minima data rappresentabile e': 1 gennaio 4712 AC"),!1):(self.scenario.history&&self.scenario.history.startDate||(ret=!1,self.scenarioServer.history&&self.scenarioServer.history.startDate?self.scenario.history.startDate=angular.copy(self.scenarioServer.history.startDate):self.scenario.history.startDate=""),self.scenario.history&&self.scenario.history.endDate||(ret=!1,self.scenarioServer.history&&self.scenarioServer.history.endDate?self.scenario.history.endDate=angular.copy(self.scenarioServer.history.endDate):self.scenario.history.endDate=""),self.scenario.history&&self.scenario.history.startDate&&self.scenario.history.endDate&&self.scenario.history.startDate>self.scenario.history.endDate&&(ret=!1,self.scenarioServer.history&&self.scenarioServer.history.endDate?self.scenario.history.endDate=angular.copy(self.scenarioServer.history.endDate):self.scenario.history.endDate="",self.scenarioServer.history&&self.scenarioServer.history.startDate?self.scenario.history.startDate=angular.copy(self.scenarioServer.history.startDate):self.scenario.history.startDate=""),ret)},checkIfEndIsAfterStart=function(startDate,endDate){return startDate.afterChrist&&endDate.afterChrist?startDate.year>endDate.year?(alertingGeneric.addWarning("La data di inizio deve precedere quella di fine"),!1):startDate.year<endDate.year?!0:startDate.month>endDate.month?(alertingGeneric.addWarning("La data di inizio deve precedere quella di fine"),!1):startDate.month<endDate.month?!0:startDate.day>endDate.day?(alertingGeneric.addWarning("La data di inizio deve precedere quella di fine"),!1):(startDate.day<endDate.day,!0):startDate.afterChrist||endDate.afterChrist?!startDate.afterChrist&&endDate.afterChrist?!0:(alertingGeneric.addWarning("La data di inizio deve precedere quella di fine"),!1):startDate.year<endDate.year?(alertingGeneric.addWarning("La data di inizio deve precedere quella di fine"),!1):startDate.year>endDate.year?!0:startDate.month>endDate.month?(alertingGeneric.addWarning("La data di inizio deve precedere quella di fine"),!1):startDate.month<endDate.month?!0:startDate.day>endDate.day?(alertingGeneric.addWarning("La data di inizio deve precedere quella di fine"),!1):(startDate.day<endDate.day,!0)},extractEmails=function(text){return text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9._-]+)/gi)},isUpdatedCharacter=function(newChar,oldChar){if(newChar.name!=oldChar.name)return!0;if(newChar.nickname!=oldChar.nickname)return!0;if(newChar.bornDate&&oldChar.bornDate){if(newChar.bornDate.day!=oldChar.bornDate.day)return!0;if(newChar.bornDate.month!=oldChar.bornDate.month)return!0;if(newChar.bornDate.year!=oldChar.bornDate.year)return!0;if(newChar.bornDate.afterChrist!=oldChar.bornDate.afterChrist)return!0}if(newChar.deadDate&&oldChar.deadDate){if(newChar.deadDate.day!=oldChar.deadDate.day)return!0;if(newChar.deadDate.month!=oldChar.deadDate.month)return!0;if(newChar.deadDate.year!=oldChar.deadDate.year)return!0;if(newChar.deadDate.afterChrist!=oldChar.deadDate.afterChrist)return!0}return newChar.bornTown!=oldChar.bornTown?!0:newChar.deadTown!=oldChar.deadTown?!0:newChar.description!=oldChar.description?!0:newChar.quote!=oldChar.quote?!0:newChar.gender!=oldChar.gender?!0:newChar.role!=oldChar.role},isCurrentCharacterValid=function(char){return char.deadDate.year&&!checkDate(char.deadDate.year)?!1:char.bornDate.year&&!checkDate(char.bornDate.year)?!1:!(char.deadDate&&char.bornDate&&char.deadDate.year&&char.bornDate.year)||checkIfEndIsAfterStart(char.bornDate,char.deadDate)},checkDate=function(year){return!isNaN(year)};onStartup()}]),angular.module("smiled.application").controller("scenariosListCtrl",["loggedUser","CONSTANTS","modalService",function(loggedUser,CONSTANTS,modalService){var self=this;self.user=loggedUser,self.realDateWithHour=CONSTANTS.realDateFormatWithHour,self.realDateWithoutHour=CONSTANTS.realDateFormatWithoutHour,self.showPopUpCreationScenario=function(){modalService.showModalCreateScen()}}]),angular.module("smiled.application").controller("setPasswordCtrl",["userService","$state","alertingRegistration","$timeout",function(userService,$state,alertingRegistration,$timeout){var self=this;self.user={},self.dateOptions={regional:"it",changeYear:!0,maxDate:"0",minDate:new Date(1900,0,1,0,0,0,0),yearRange:"1900:c"},self.confirmRegister=function(){validateRegister()?userService.changeFirstPassword(self.user).then(function(data){console.log("success register"),self.user.email="",self.user.firstname="",self.user.lastname="",self.user.bornDate="",self.user.newPassword="",self.user.confirmPassword="",alertingRegistration.addSuccess("La tua richiesta e' stata accettata. A breve riceverai una mail per confermare la tua registrazione"),$timeout(function(){$state.go("notLogged.login")},5e3)},function(reason){throw self.user.email="",self.user.firstname="",self.user.lastname="",self.user.bornDate="",self.user.oldPassword="",self.user.newPassword="",self.user.confirmPassword="",alertingRegistration.addDanger("Non e' stato possibile completare la registrazione, ti preghiamo di riprovare!"),new Error("Non e' stato possibile completare la registrazione, ti preghiamo di riprovare!")}):(self.user.oldPassword="",self.user.newPassword="",self.user.confirmPassword="")};var validateRegister=function(){return null==self.user.email||""==self.user.email||null==self.user.firstname||""==self.user.firstname||null==self.user.lastname||""==self.user.lastname||null==self.user.oldPassword||""==self.user.oldPassword||null==self.user.newPassword||""==self.user.newPassword||null==self.user.confirmPassword||""==self.user.confirmPassword?(alertingRegistration.addWarning("Compilare tutti i campi!"),!1):validateEmail(self.user.email)?self.user.newPassword!=self.user.confirmPassword?(alertingRegistration.addWarning("Attenzione le due password digitate non corrispondono!"),!1):self.user.newPassword.length<8?(alertingRegistration.addWarning("Nuova password troppo corta!"),!1):self.user.oldPassword.length<8?(alertingRegistration.addWarning("Vecchia password troppo corta!"),!1):!0:(alertingRegistration.addWarning("Email non valida!"),!1)},validateEmail=function(email){var re=/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{1,6}(?:\.[a-z]{1})?)$/i;return re.test(email)}}]),angular.module("smiled.application").controller("shellCtrl",["$scope","$location","userService","$state",function($scope,$location,userService,$state){if(userService.isLogged)switch($location.path()){case"/":$state.go("logged");break;case"/dashboard":$state.go("logged");break;default:$state.go("notFound")}else $state.go("login")}]),angular.module("smiled.application").controller("singlePostCtrl",["$state","$stateParams","CONSTANTS","$scope","apiService","Upload","$interval","notifyService",function($state,$stateParams,CONSTANTS,$scope,apiService,Upload,$interval,notifyService){var self=this;self.scen=$scope.scenario.scen,self.currentCharacter=$scope.scenario.currentCharacter,self.post={};var idPost=$stateParams.idPost,scenId=$stateParams.id;self.postReady=!1;var onStartup=function(){scenId&&""!=scenId?idPost&&""!=idPost?self.post=apiService.getSingleStatus(scenId,idPost).then(function(data){self.post=data,self.postReady=!0},function(reason){self.post={},self.postReady=!1,console.log("Errore. C'è stato qualche problema nel download del post")}):$state.go("logged.scenario.posts",{id:scenId}):$state.go("logged.dashboard")};onStartup()}]),angular.module("smiled.application").controller("studentsListCtrl",["loggedUser",function(loggedUser){var self=this;self.user=loggedUser}]),angular.module("smiled.application").controller("toolMapCtrl",["CONSTANTS",function(CONSTANTS){var self=this;self.Win64="MapTool-Windows_x64.zip",self.Win32="MapTool-Windows_x86.zip",self.Mac="MapTool-MacOSX.zip",self.Tux64="MapTool-linux_x64.zip",self.Tux32="MapTool-linux_x86.zip",self.getFile=function(i){return CONSTANTS.urlToolMap(i)}}]),angular.module("smiled.application").controller("updateScenarioCtrl",["apiService",function(apiService){function produceListEmail(list){return l=[],l}var self=this;self.scenario={};var s1={},listEmail={};self.showHideContent=function(e){var container1=$("#basicinfobox"),container2=$("#studentsbox"),container3=$("#charactersbox"),container4=$("#associationbox"),container5=$("#collaboratorsbox");container1.is(e.target)||0!==container1.has(e.target).length?self.basicinfoboxOn=!0:(self.basicinfoboxOn=!1,null==self.scenario.startDate||null==self.scenario.endDate||null==self.scenario.title||(s1.title=self.scenario.title,s1.startDate=self.scenario.startDate,s1.endDate=self.scenario.endDate)),container2.is(e.target)||0!==container2.has(e.target).length?self.studentsboxOn=!0:(null==self.scenario.listEmail||(listEmail=produceListEmail(self.scenario.listEmail)),self.studentsboxOn=!1),container3.is(e.target)||0!==container3.has(e.target).length?self.charactersboxOn=!0:self.charactersboxOn=!1,container4.is(e.target)||0!==container4.has(e.target).length?self.associationboxOn=!0:self.associationboxOn=!1,container5.is(e.target)||0!==container5.has(e.target).length?self.collaboratorsboxOn=!0:self.collaboratorsboxOn=!1}}]),angular.module("smiled.application").factory("alertingGeneric",["$timeout",function($timeout){var currentAlerts=[],alertTypes=["success","info","warning","danger"],addWarning=function(message){addAlert("warning",message)},addDanger=function(message){addAlert("danger",message)},addInfo=function(message){addAlert("info",message)},addSuccess=function(message){addAlert("success",message)},addAlert=function(type,message){currentAlerts.length>0&&currentAlerts.splice(0,1);var alert={type:type,message:message};currentAlerts.push(alert),$timeout(function(){removeAlert(alert)},4e3)},removeAlert=function(alert){for(var i=0;i<currentAlerts.length;i++)if(currentAlerts[i]===alert){currentAlerts.splice(i,1);break}},removeAllAlerts=function(){currentAlerts.length=[]},errorHandler=function(description){return function(){addDanger(description)}};return{addWarning:addWarning,addDanger:addDanger,addInfo:addInfo,addSuccess:addSuccess,addAlert:addAlert,removeAlert:removeAlert,errorHandler:errorHandler,currentAlerts:currentAlerts,alertTypes:alertTypes,removeAllAlerts:removeAllAlerts}}]),angular.module("smiled.application").factory("alertingLogin",["$timeout",function($timeout){var currentAlerts=[],alertTypes=["success","info","warning","danger"],addWarning=function(message){addAlert("warning",message)},addDanger=function(message){addAlert("danger",message)},addInfo=function(message){addAlert("info",message)},addSuccess=function(message){addAlert("success",message)},addAlert=function(type,message){if(0==currentAlerts.length){var alert={type:type,message:message};currentAlerts.push(alert),$timeout(function(){removeAlert(alert)},5e3)}},removeAlert=function(alert){for(var i=0;i<currentAlerts.length;i++)if(currentAlerts[i]===alert){currentAlerts.splice(i,1);break}},errorHandler=function(description){return function(){addDanger(description)}};return{addWarning:addWarning,addDanger:addDanger,addInfo:addInfo,addSuccess:addSuccess,addAlert:addAlert,removeAlert:removeAlert,errorHandler:errorHandler,currentAlerts:currentAlerts,alertTypes:alertTypes}}]),angular.module("smiled.application").factory("alertingRegistration",["$timeout",function($timeout){var currentAlerts=[],alertTypes=["success","info","warning","danger"],addWarning=function(message){addAlert("warning",message)},addDanger=function(message){addAlert("danger",message)},addInfo=function(message){addAlert("info",message)},addSuccess=function(message){addAlert("success",message)},addAlert=function(type,message){if(0==currentAlerts.length){var alert={type:type,message:message};currentAlerts.push(alert),$timeout(function(){removeAlert(alert)},5e3)}},removeAlert=function(alert){for(var i=0;i<currentAlerts.length;i++)if(currentAlerts[i]===alert){currentAlerts.splice(i,1);break}},errorHandler=function(description){return function(){addDanger(description)}};return{addWarning:addWarning,addDanger:addDanger,addInfo:addInfo,addSuccess:addSuccess,addAlert:addAlert,removeAlert:removeAlert,errorHandler:errorHandler,currentAlerts:currentAlerts,alertTypes:alertTypes}}]),angular.module("smiled.application").factory("alertingScenario",["$timeout","$location","$anchorScroll",function($timeout,$location,$anchorScroll){var currentAlerts=[],alertTypes=["success","info","warning","danger"],addWarning=function(message){addAlert("warning",message)},addDanger=function(message){addAlert("danger",message)},addInfo=function(message){addAlert("info",message)},addSuccess=function(message){addAlert("success",message)},addAlert=function(type,message){currentAlerts.length>0&&currentAlerts.splice(0,1);var alert={type:type,message:message};currentAlerts.push(alert),$location.hash("topBox"),$anchorScroll(),$location.url($location.path()),$timeout(function(){removeAlert(alert)},5e3)},removeAlert=function(alert){for(var i=0;i<currentAlerts.length;i++)if(currentAlerts[i]===alert){currentAlerts.splice(i,1);break}},errorHandler=function(description){return function(){addDanger(description)}};return{addWarning:addWarning,addDanger:addDanger,addInfo:addInfo,addSuccess:addSuccess,addAlert:addAlert,removeAlert:removeAlert,errorHandler:errorHandler,currentAlerts:currentAlerts,alertTypes:alertTypes}}]),angular.module("smiled.application").factory("apiService",["$http","$q","Restangular",function($http,$q,Restangular){function postRegister(registerObject){return register.post("",registerObject)}var register=Restangular.one("register"),getScenario=function(idScenario){var p=$q.defer();return $http.get("/api/v1/scenarios/"+idScenario).then(function(response){p.resolve(response.data)},function(reason){p.reject(reason)}),p.promise},createScenario=function(scenarioDTO){var s=$q.defer();return $http.post("/api/v1/scenarios",scenarioDTO).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},updateScenario=function(scenarioDTO,id){var s=$q.defer();return $http.put("/api/v1/scenarios/"+id,scenarioDTO).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},deleteScenario=function(id){var s=$q.defer();return $http["delete"]("/api/v1/scenarios/"+id).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},addUsersToScenario=function(emailsDTO,id){var e=$q.defer();return $http.post("/api/v1/scenarios/"+id+"/users",emailsDTO).then(function(response){e.resolve(response.data)},function(reason){e.reject(reason)}),e.promise},addCollaboratorToScenario=function(idCollaborator,id){var e=$q.defer();return $http.post("/api/v1/scenarios/"+id+"/collaborators/"+idCollaborator).then(function(response){e.resolve(response.data)},function(reason){console.log(reason),e.reject(reason)}),e.promise},addCharacterToScenario=function(character,id){var c=$q.defer();return $http.post("/api/v1/scenarios/"+id+"/characters",character).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},updateCharacter=function(id,characterDTO,idCharacter){var c=$q.defer();return $http.put("/api/v1/scenarios/"+id+"/characters/"+idCharacter,characterDTO).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getAllCharactersFromScen=function(id){var c=$q.defer();return $http.get("/api/v1/scenarios/"+id+"/characters").then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getCharacter=function(id,idCharacter){var c=$q.defer();return $http.get("/api/v1/scenarios/"+id+"/characters/"+idCharacter).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},removeUserFromScenario=function(id,idUser){var u=$q.defer();return $http["delete"]("/api/v1/scenarios/"+id+"/users/"+idUser).then(function(response){u.resolve(response.data)},function(reason){u.reject(reason)}),u.promise},removeCollaboratorFromScenario=function(id,idCollaborator,putInAttendeesList){var u=$q.defer();return $http["delete"]("/api/v1/scenarios/"+id+"/collaborators/"+idCollaborator,putInAttendeesList).then(function(response){u.resolve(response.data)},function(reason){u.reject(reason)}),u.promise},removeCharacterFromScenario=function(id,idCharacter){var c=$q.defer();return $http["delete"]("/api/v1/scenarios/"+id+"/characters/"+idCharacter).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},addUserToCharacter=function(id,userId,characterId){var c=$q.defer();return $http.put("/api/v1/scenarios/"+id+"/characters/"+characterId+"/users/"+userId).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},removeUserFromCharacter=function(id,userId,characterId){var c=$q.defer();return $http["delete"]("/api/v1/scenarios/"+id+"/characters/"+characterId+"/users/"+userId).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},sendStatus=function(id,idCharacter,status){var s=$q.defer();return $http.post("/api/v1/scenarios/"+id+"/characters/"+idCharacter+"/status",status).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},updateStatus=function(id,idStatus,newStatus){var s=$q.defer();return $http.put("/api/v1/scenarios/"+id+"/status/"+idStatus,newStatus).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},updateEvent=function(id,idEvent,newEvent){var s=$q.defer();return $http.put("/api/v1/scenarios/"+id+"/events/"+idEvent,newEvent).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},deletePost=function(id,idPost){var s=$q.defer();return $http["delete"]("/api/v1/scenarios/"+id+"/posts/"+idPost).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},getPagedPosts=function(id,nPag,nItem,historicalOrder,orderDesc){"undefined"==typeof orderDesc&&(orderDesc=!0);var c=$q.defer();return $http.get("/api/v1/scenarios/"+id+"/posts",{params:{nPag:nPag,nItem:nItem,historicOrder:historicalOrder,orderDesc:orderDesc}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getLastPosts=function(id,lastPostId,nItem){var c=$q.defer();return $http.get("/api/v1/scenarios/"+id+"/posts",{params:{last:lastPostId,nItem:nItem}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getLastHistoricPosts=function(id,nItem,order,date,time){var first=!1;"undefined"==typeof date&&(first=!0);var c=$q.defer();return first?$http.get("/api/v1/scenarios/"+id+"/historic-posts",{params:{nItem:nItem,orderDesc:order}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}):$http.get("/api/v1/scenarios/"+id+"/historic-posts",{params:{nItem:nItem,orderDesc:order,date:date,time:time}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getLastCharacterPosts=function(scenarioId,characterId,nItem,date,time){var first=!1;"undefined"==typeof date&&(first=!0);var c=$q.defer();return first?$http.get("/api/v1/scenarios/"+scenarioId+"/characters/"+characterId+"/posts",{params:{nItem:nItem}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}):$http.get("/api/v1/scenarios/"+scenarioId+"/characters/"+characterId+"/posts",{params:{nItem:nItem,date:date,time:time}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getListOfNewPosts=function(id,listOfPosts){var s=$q.defer();return $http.post("/api/v1/scenarios/"+id+"/newPosts",listOfPosts).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},getPagedRegistrationRequests=function(nPag,nItem){var c=$q.defer();return $http.get("/api/v1/getPagedRegistrationRequests",{params:{nPag:nPag,nItem:nItem}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getPagedLogs=function(nPag,nItem){var c=$q.defer();return $http.get("/api/v1/log",{params:{nPag:nPag,nItem:nItem}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getPagedIssues=function(nPag,nItem){var c=$q.defer();return $http.get("/api/v1/issues",{params:{nPag:nPag,nItem:nItem}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getPagedSuggestions=function(nPag,nItem){var c=$q.defer();return $http.get("/api/v1/suggestions",{params:{nPag:nPag,nItem:nItem}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getUsersByFirstNameAndLastName=function(firstName,lastName){var c=$q.defer();return $http.get("/api/v1/userScenarios",{params:{firstName:firstName,lastName:lastName}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getPagedTeachers=function(nPag,nItem){var c=$q.defer();return $http.get("/api/v1/teachers",{params:{nPag:nPag,nItem:nItem}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getPagedStudents=function(nPag,nItem){var c=$q.defer();return $http.get("/api/v1/students",{params:{nPag:nPag,nItem:nItem}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getPagedScenarios=function(nPag,nItem,orderByCreation){var c=$q.defer();return $http.get("/api/v1/scenarios",{params:{nPag:nPag,nItem:nItem,orderByCreation:orderByCreation}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getPagedExceptions=function(nPag,nItem){var c=$q.defer();return $http.get("/api/v1/clientException",{params:{nPag:nPag,nItem:nItem}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getPagedTeacherByRegex=function(nPag,nItem,regex){var c=$q.defer();return $http.get("/api/v1/searchTeachers",{params:{regex:regex,nPag:nPag,nItem:nItem}}).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},getSingleStatus=function(idScenario,idPost){var s=$q.defer();return $http.get("/api/v1/scenarios/"+idScenario+"/posts/"+idPost).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},addLikeToPost=function(idScenario,idPost){var s=$q.defer();return $http.post("/api/v1/scenarios/"+idScenario+"/posts/"+idPost+"/likes").then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},sendCommentToPost=function(idScenario,idPost,comment){var s=$q.defer();return $http.post("/api/v1/scenarios/"+idScenario+"/posts/"+idPost+"/comments",comment).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},sendMetaCommentToPost=function(idScenario,idPost,comment){var s=$q.defer();return $http.post("/api/v1/scenarios/"+idScenario+"/posts/"+idPost+"/metaComments",comment).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},sendEvent=function(idScenario,event){var s=$q.defer();return $http.post("/api/v1/scenarios/"+idScenario+"/events",event).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},postIssue=function(issue){var s=$q.defer();return $http.post("/api/v1/report",issue).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},postSuggestion=function(suggestion){var s=$q.defer();return $http.post("/api/v1/suggestion",suggestion).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},addMissionToScenario=function(idScenario,mission){var s=$q.defer();return $http.put("/api/v1/scenarios/"+idScenario+"/mission",mission).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},deleteMissionToScenario=function(idScenario){var s=$q.defer();return $http["delete"]("/api/v1/scenarios/"+idScenario+"/mission").then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},addMissionToCharacter=function(idScenario,idCharacter,mission){var s=$q.defer();return $http.put("/api/v1/scenarios/"+idScenario+"/characters/"+idCharacter+"/mission",mission).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},deleteMissionToCharacter=function(idScenario,idCharacter){var s=$q.defer();return $http["delete"]("/api/v1/scenarios/"+idScenario+"/characters/"+idCharacter+"/mission").then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},postTrustedMediaMetadata=function(idScenario,idMedia,metadata){var s=$q.defer();return $http.put("/api/v1/scenarios/"+idScenario+"/media/"+idMedia+"/meta",metadata).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},getTrustedMediaMetadata=function(idScenario){var s=$q.defer();return $http.get("/api/v1/scenarios/"+idScenario+"/media/trusted/meta").then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},postTrustedMediaMetadata=function(idScenario,idMedia,metadata){var s=$q.defer();return $http.put("/api/v1/scenarios/"+idScenario+"/media/"+idMedia+"/meta",metadata).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},getTrustedMediaMetadata=function(idScenario){var s=$q.defer();return $http.get("/api/v1/scenarios/"+idScenario+"/media/trusted/meta").then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},getMyMissions=function(){var s=$q.defer();return $http.get("/api/v1/missions").then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},getMyDraft=function(preview){var url,s=$q.defer();return url=preview?"/api/v1/draft?preview=true":"/api/v1/draft",$http.get(url).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},deleteTrustedMedia=function(idScenario,idMedia){var s=$q.defer();return $http["delete"]("/api/v1/scenarios/"+idScenario+"/trustedMedia/"+idMedia).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},deleteMedia=function(idMedia,postId){var url,s=$q.defer();return url=postId?"/api/v1/me/media/"+idMedia+"?postId="+postId:"/api/v1/me/media/"+idMedia,$http["delete"](url).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},getLastUserNotifications=function(older,num){var s=$q.defer(),url="api/v1/lastNotifications?num="+num+"&old="+older;return $http.get(url).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise};return{postRegister:postRegister,createScenario:createScenario,getScenario:getScenario,updateScenario:updateScenario,addUsersToScenario:addUsersToScenario,removeUserFromScenario:removeUserFromScenario,addCollaboratorToScenario:addCollaboratorToScenario,removeCollaboratorFromScenario:removeCollaboratorFromScenario,addCharacterToScenario:addCharacterToScenario,updateCharacter:updateCharacter,getCharacter:getCharacter,deleteScenario:deleteScenario,removeCharacterFromScenario:removeCharacterFromScenario,getAllCharactersFromScen:getAllCharactersFromScen,addUserToCharacter:addUserToCharacter,removeUserFromCharacter:removeUserFromCharacter,getPagedTeacherByRegex:getPagedTeacherByRegex,sendStatus:sendStatus,updateStatus:updateStatus,deletePost:deletePost,getPagedPosts:getPagedPosts,getPagedIssues:getPagedIssues,getPagedSuggestions:getPagedSuggestions,getSingleStatus:getSingleStatus,addLikeToPost:addLikeToPost,sendCommentToPost:sendCommentToPost,sendMetaCommentToPost:sendMetaCommentToPost,sendEvent:sendEvent,addMissionToScenario:addMissionToScenario,addMissionToCharacter:addMissionToCharacter,deleteMissionToScenario:deleteMissionToScenario,deleteMissionToCharacter:deleteMissionToCharacter,postIssue:postIssue,postSuggestion:postSuggestion,getPagedStudents:getPagedStudents,getPagedTeachers:getPagedTeachers,getPagedScenarios:getPagedScenarios,getUsersByFirstNameAndLastName:getUsersByFirstNameAndLastName,updateEvent:updateEvent,getPagedExceptions:getPagedExceptions,getPagedLogs:getPagedLogs,getPagedRegistrationRequests:getPagedRegistrationRequests,postTrustedMediaMetadata:postTrustedMediaMetadata,getTrustedMediaMetadata:getTrustedMediaMetadata,deleteTrustedMedia:deleteTrustedMedia,getMyMissions:getMyMissions,getMyDraft:getMyDraft,deleteMedia:deleteMedia,getListOfNewPosts:getListOfNewPosts,getLastUserNotifications:getLastUserNotifications,getLastPosts:getLastPosts,getLastHistoricPosts:getLastHistoricPosts,getLastCharacterPosts:getLastCharacterPosts}}]),angular.module("smiled.application").constant("CONSTANTS",{realDateFormatWithHour:"d-M-yyyy H:mm",realDateFormatWithSecond:"d-M-yyyy H:mm:ss",realDateFormatWithMinute:"d-M-yyyy H:mm",realDateFormatWithoutHour:"d-M-yyyy",realDateFormatOnlyDay:"d",realDateFormatOnlyMonth:"MMM",insertHistoricalDate:"Data il post",insertHistoricalDateEvent:"Data l'evento",historicalDateOutInterval:"Inserisci una data valida nell'intervallo dello scenario",lengthOfTooltipLikesList:10,visibleComment:3,numberOfPostForScroll:10,basicTeacherCover:"assets/public/img/ic_teacher.png",basicStudentCover:"assets/public/img/ic_student.png",urlMeCover:"api/v1/me/cover",urlMeCoverLarge:"api/v1/me/coverLarge",urlUserCover:function(id){return"api/v1/users/"+id+"/cover"},urlUserCoverLarge:function(id){return"api/v1/users/"+id+"/coverLarge"},urlScenarioCover:function(id){return"api/v1/scenarios/"+id+"/cover"},urlCharacterCover:function(idScenario,idCharacter){return"api/v1/scenarios/"+idScenario+"/characters/"+idCharacter+"/cover"},urlMediaScenarioPost:function(idScenario){return"api/v1/scenarios/"+idScenario+"/media"},urlTrustedMediaScenarioPost:function(idScenario){return"api/v1/scenarios/"+idScenario+"/trustedMedia"},urlMetaMediaScenarioPost:function(idScenario,idMedia){return"api/v1/scenarios/"+idScenario+"/media/"+idMedia+"/meta"},urlTrustedMediaScenario:function(idScenario){return"api/v1/scenarios/"+idScenario+"/media/trusted/meta"},urlDeleteTrustedMedia:function(idScenario,idMedia){return"api/v1/scenarios/"+idScenario+"/trustedMedia/"+idMedia},urlMedia:function(id){return"api/v1/media/"+id},urlMediaThumb:function(id){return"api/v1/media/"+id+"?thumb=true"},urlPostMedia:function(idScenario){return"api/v1/scenarios/"+idScenario+"/media"},urlPost:function(idScenario,idPost){return"api/v1/scenarios/"+idScenario+"/posts/"+idPost},urlToolMap:function(i){return"api/v1/toolMap?version="+i},urlMarker:"assets/public/img/marker.png",monthString:function(month){var m;switch(month){case 1:m="gennaio";break;case 2:m="febbraio";break;case 3:m="marzo";break;case 4:m="aprile";break;case 5:m="maggio";break;case 6:m="giugno";break;case 7:m="luglio";break;case 8:m="agosto";break;case 9:m="settembre";break;case 10:m="ottobre";break;case 11:m="novembre";break;case 12:m="dicembre"}return m},getMonths:function(lang){var months=new Array,month={};if("it"==lang)month={value:1,name:"gennaio"},months.push(angular.copy(month)),month={value:2,name:"febbraio"},months.push(angular.copy(month)),month={value:3,name:"marzo"},months.push(angular.copy(month)),month={value:4,name:"aprile"},months.push(angular.copy(month)),month={value:5,name:"maggio"},months.push(angular.copy(month)),month={value:6,name:"giugno"},months.push(angular.copy(month)),month={value:7,name:"luglio"},months.push(angular.copy(month)),month={value:8,name:"agosto"},months.push(angular.copy(month)),month={value:9,name:"settembre"},months.push(angular.copy(month)),month={value:10,
name:"ottobre"},months.push(angular.copy(month)),month={value:11,name:"novembre"},months.push(angular.copy(month)),month={value:12,name:"dicembre"},months.push(angular.copy(month));else{if("en"!=lang)throw new Error("Not supported language");month={value:1,name:"January"},months.push(angular.copy(month)),month={value:2,name:"February"},months.push(angular.copy(month)),month={value:3,name:"March"},months.push(angular.copy(month)),month={value:4,name:"April"},months.push(angular.copy(month)),month={value:5,name:"May"},months.push(angular.copy(month)),month={value:6,name:"June"},months.push(angular.copy(month)),month={value:7,name:"July"},months.push(angular.copy(month)),month={value:8,name:"Agoust"},months.push(angular.copy(month)),month={value:9,name:"September"},months.push(angular.copy(month)),month={value:10,name:"October"},months.push(angular.copy(month)),month={value:11,name:"November"},months.push(angular.copy(month)),month={value:12,name:"December"},months.push(angular.copy(month))}return months},getDays:function(month){var numDay,days=new Array;numDay=1==month||3==month||5==month||7==month||8==month||10==month||12==month?31:2==month?28:30;for(var i=1;numDay>=i;i++){var day={value:i};days.push(day)}return days},dayOfWeekString:function(day){var d="";switch(day){case 0:d="Lun";break;case 1:d="Mar";break;case 2:d="Mer";break;case 3:d="Gio";break;case 4:d="Ven";break;case 5:d="Sab";break;case 6:d="Dom"}return d}}),angular.module("smiled.application").factory("dateUtil",["CONSTANTS",function(CONSTANTS){var julianNumberToDate=function(jd,date){var l=jd+68569,n=parseInt(4*l/146097);l-=parseInt((146097*n+3)/4);var i=parseInt(4e3*(l+1)/1461001);l=l-parseInt(1461*i/4)+31;var j=parseInt(80*l/2447);date.day=l-parseInt(2447*j/80),l=parseInt(j/11),date.month=j+2-12*l,date.year=100*(n-49)+i+l,date.dow=jd%7},dateToJulianNumber=function(date){console.log("dateToJulianNumber: "+date.year);var jd=parseInt(1461*(date.year+4800+parseInt((date.month-14)/12))/4)+parseInt(367*(date.month-2-12*parseInt((date.month-14)/12))/12)-parseInt(3*parseInt((date.year+4900+parseInt((date.month-14)/12))/100)/4)+date.day-32075;return jd},getMonthString=function(month){return CONSTANTS.monthString(month)},getTimeToSeconds=function(timeNumber,t){t.hours=parseInt(timeNumber/3600),timeNumber%=3600,t.minutes=parseInt(timeNumber/60),timeNumber%=60,t.seconds=timeNumber},getNumDaysOfMonth=function(month,year){return 1==month||3==month||5==month||7==month||8==month||10==month||12==month?31:4==month||6==month||9==month||11==month?30:year%4==0&&year%100!=0||year%400==0?29:28},dateTimeToString=function(jdn,tn){var date={},t={};jdn&&julianNumberToDate(jdn,date),tn&&"undefined"!=typeof tn&&getTimeToSeconds(tn,t);var s="";return date&&(s+=date.day+" "+getMonthString(date.month)+" "+Math.abs(date.year)),date.year<0&&(s+=" a.C."),t&&t.hours&&t.minutes&&(s+=t.hours<10?" 0"+t.hours:" "+t.hours,s+=t.minutes<10?":0"+t.minutes:":"+t.minutes),s},dateTimeToStringShort=function(jdn,tn){var date={},t={};jdn&&julianNumberToDate(jdn,date),tn&&"undefined"!=typeof tn&&getTimeToSeconds(tn,t);var s="";return date&&(s+=date.day+"/"+date.month+"/"+Math.abs(date.year)),date.year<0&&(s+=" a.C."),t&&t.hours&&t.minutes&&(s+=t.hours<10?" 0"+t.hours:" "+t.hours,s+=t.minutes<10?":0"+t.minutes:":"+t.minutes),s};return{julianNumberToDate:julianNumberToDate,dateToJulianNumber:dateToJulianNumber,getMonthString:getMonthString,getTimeToSeconds:getTimeToSeconds,getNumDaysOfMonth:getNumDaysOfMonth,dateTimeToString:dateTimeToString,dateTimeToStringShort:dateTimeToStringShort}}]),angular.module("smiled.application").factory("messageService",["$q",function($q){var messages=[],newMessage=function(m){m.read=!1,messages.push(m)};return{newMessage:newMessage}}]),angular.module("smiled.application").factory("modalService",["$modal","apiService",function($modal,apiService){var charName,modalInstanceCreateScen,modalInstanceDeleteScen,modalInstanceDeleteAttendee,modalInstanceDeleteCollaborator,modalInstanceSetDate,modalInstanceOpenMap,modalInstanceOpenMapForPost,modalInstanceOldCharacterChangeOnComment,modalInstanceSetHistoryDate,modalInstanceCreateMission,modalInstanceDeleteResource,modalInstanceDeletePost,modalInstanceConfirmRegistration,modalInstanceConcurrentModPost,scenario={},attendee={},character={},collaborator={},post={},scenarioMap="",startDate={},endDate={},scenario={},file={},registrationToConfirm={},confirmRegistrationBool=!0,optionsConcurrentModPost={templateUrl:"assets/private/partials/concurrentModPostTemplate.html"},optionSetHistoryDate={templateUrl:"assets/private/partials/customDatePickerTemplate.html",controller:"customDatePickerTemplateCtrl",controllerAs:"customDatePickerTemplate",size:"sm",resolve:{startDate:function(){return startDate},endDate:function(){return endDate},post:function(){return post}}},optionsCreateScen={templateUrl:"assets/private/partials/createScenario.html",controller:"dialogScenarioCtrl",controllerAs:"dialogScenario",size:"lg"},optionsDeleteScen={templateUrl:"assets/private/partials/deleteScenario.html",controller:"dialogScenarioCtrl",controllerAs:"dialogScenario"},optionsConfirmRegistration={templateUrl:"assets/private/partials/confirmRegistration.html",controller:"dialogConfirmRegistrationCtrl",controllerAs:"dialogConfirmRegistration",resolve:{confirmRegistrationBool:function(){return confirmRegistrationBool}}},optionsDeleteAttendee={templateUrl:"assets/private/partials/deleteAttendee.html",controller:"dialogScenarioCtrl",controllerAs:"dialogScenario"},optionsDeleteCollaborator={templateUrl:"assets/private/partials/deleteCollaborator.html",controller:"dialogScenarioCtrl",controllerAs:"dialogScenario"},optionsDeleteCharacter={templateUrl:"assets/private/partials/deleteCharacter.html",controller:"dialogScenarioCtrl",controllerAs:"dialogScenario"},optionsSetDateStart={templateUrl:"assets/private/partials/setDate.html",controller:"dialogSetDateCtrl",controllerAs:"dialogSetDate",resolve:{scen:function(){return scenario},start:function(){return!0}}},optionsSetDateEnd={templateUrl:"assets/private/partials/setDate.html",controller:"dialogSetDateCtrl",controllerAs:"dialogSetDate",resolve:{scen:function(){return scenario},start:function(){return!1}}},optionsOpenMap={templateUrl:"assets/private/partials/openMap.html",controller:"openMapCtrl",controllerAs:"openMap",size:"lg",resolve:{post:function(){return post},scenarioMap:function(){return scenarioMap}}},optionsOpenMapForPost={templateUrl:"assets/private/partials/openMapForPost.html",controller:"openMapForPostCtrl",controllerAs:"openMapForPost",size:"lg",resolve:{post:function(){return post},scenarioMap:function(){return scenarioMap}}},optionsOldCharacterChangeOnComment={templateUrl:"assets/private/partials/oldCharacterChangeOnComment.html",controller:"oldCharacterChangeOnCommentCtrl",controllerAs:"oldCharacterChangeOnComment",size:"sm",resolve:{charName:function(){return charName}}},optionsCreateMission={templateUrl:"assets/private/partials/createMission.html",controller:"dialogMissionCtrl",controllerAs:"dialogMission",size:"lg",resolve:{scenario:function(){return scenario}}},optionsDeleteResource={templateUrl:"assets/private/partials/deleteResource.html",controller:"deleteResourceCtrl",controllerAs:"deleteResource",size:"sm",resolve:{file:function(){return file}}},optionsDeletePost={templateUrl:"assets/private/partials/deletePost.html",size:"sm"},showModalCreateScen=function(){return modalInstanceCreateScen=$modal.open(optionsCreateScen),modalInstanceCreateScen.result},closeModalCreateScen=function(){modalInstanceCreateScen.close()},showModalDeleteScen=function(s){return scenario=s,modalInstanceDeleteScen=$modal.open(optionsDeleteScen),modalInstanceDeleteScen.result},showModalConfirmRegistration=function(l,isConfirm){return confirmRegistrationBool=isConfirm,registrationToConfirm=l,modalInstanceConfirmRegistration=$modal.open(optionsConfirmRegistration),modalInstanceConfirmRegistration.result},showModalDeleteAttendee=function(a){return attendee=a,modalInstanceDeleteAttendee=$modal.open(optionsDeleteAttendee),modalInstanceDeleteAttendee.result},showModalDeleteCollaborator=function(c){return collaborator=c,modalInstanceDeleteCollaborator=$modal.open(optionsDeleteCollaborator),modalInstanceDeleteCollaborator.result},showModalDeleteCharacter=function(c){return character=c,modalInstanceDeleteCharacter=$modal.open(optionsDeleteCharacter),modalInstanceDeleteCharacter.result},closeModalDeleteScen=function(){modalInstanceDeleteScen.close()},closeModalDeleteAttendee=function(){modalInstanceDeleteAttendee.close()},closeModalConfirmRegistration=function(){modalInstanceConfirmRegistration.close()},closeModalDeleteCollaborator=function(){modalInstanceDeleteCollaborator.close()},closeModalDeleteCharacter=function(){modalInstanceDeleteCharacter.close()},createScenario=function(scenario){var history={startDate:{year:"",month:"",day:"",afterChrist:""},endDate:{year:"",month:"",day:"",afterChrist:""}};history.startDate.year=scenario.startDate.year,history.startDate.month=scenario.startDate.month,history.startDate.day=scenario.startDate.day,history.startDate.afterChrist=scenario.startDate.afterChrist,history.endDate.year=scenario.endDate.year,history.endDate.month=scenario.endDate.month,history.endDate.day=scenario.endDate.day,history.endDate.afterChrist=scenario.endDate.afterChrist;var scenarioDTO={};return scenarioDTO.name=scenario.title,scenarioDTO.history=history,scenarioDTO.showRelationsToAll=scenario.showRelationsToAll,s=apiService.createScenario(scenarioDTO),s},deleteScenario=function(){return s=apiService.deleteScenario(scenario.id),s},getScenToDelete=function(){return scenario},getRegistrationToConfirm=function(){return registrationToConfirm},getAttendeeToDelete=function(){return attendee},getCollaboratorToDelete=function(){return collaborator},getCharacterToDelete=function(){return character},showPopUpSetDate=function(s,first){return scenario=s,modalInstanceSetDate=1==first?$modal.open(optionsSetDateStart):$modal.open(optionsSetDateEnd),modalInstanceSetDate.result},closeModalSetDate=function(){modalInstanceSetDate.close()},showModalOpenMap=function(p,sMap){return post=p,scenarioMap=sMap,modalInstanceOpenMap=$modal.open(optionsOpenMap),modalInstanceOpenMap.result},closeModalOpenMap=function(){modalInstanceOpenMap.close()},showModalOpenMapForPost=function(p,sMap){return post=p,scenarioMap=sMap,modalInstanceOpenMapForPost=$modal.open(optionsOpenMapForPost),modalInstanceOpenMapForPost.result},closeModalOpenMapForPost=function(){modalInstanceOpenMapForPost.close()},showModalOldCharacterChangeOnComment=function(characterName){return charName=characterName,modalInstanceOldCharacterChangeOnComment=$modal.open(optionsOldCharacterChangeOnComment),modalInstanceOldCharacterChangeOnComment.result},closeModalOldCharacterChangeOnComment=function(){modalInstanceOldCharacterChangeOnComment.close()},showModalSetHistoryDate=function(sDate,eDate,p){return startDate=sDate,endDate=eDate,post=p,modalInstanceSetHistoryDate=$modal.open(optionSetHistoryDate),modalInstanceSetHistoryDate.result},closeModalSetHistoryDate=function(){modalInstanceSetHistoryDate.close()},showModalCreateMission=function(scen){return scenario=scen,modalInstanceCreateMission=$modal.open(optionsCreateMission),modalInstanceCreateMission.result},closeModalCreateMission=function(){modalInstanceCreateMission.close()},createMission=function(mission){return console.log("CREATE MISSION -----------------------"),s=apiService.createMission(mission.scenId,mission),s},showModalDeleteResource=function(resource){return file=resource,modalInstanceDeleteResource=$modal.open(optionsDeleteResource),modalInstanceDeleteResource.result},closeModalDeleteResource=function(){modalInstanceDeleteResource.close()},showModalDeletePost=function(){return modalInstanceDeletePost=$modal.open(optionsDeletePost),modalInstanceDeletePost.result},closeModalDeletePost=function(){modalInstanceDeletePost.close()},showConcurrentModPost=function(){return modalInstanceConcurrentModPost=$modal.open(optionsConcurrentModPost),modalInstanceConcurrentModPost.result},closeModalConcurrentModPost=function(){modalInstanceConcurrentModPost.close()};return{createScenario:createScenario,deleteScenario:deleteScenario,showModalCreateScen:showModalCreateScen,closeModalCreateScen:closeModalCreateScen,showModalDeleteScen:showModalDeleteScen,closeModalDeleteScen:closeModalDeleteScen,showModalDeleteAttendee:showModalDeleteAttendee,closeModalDeleteAttendee:closeModalDeleteAttendee,showModalDeleteCollaborator:showModalDeleteCollaborator,closeModalDeleteCollaborator:closeModalDeleteCollaborator,showModalDeleteCharacter:showModalDeleteCharacter,closeModalDeleteCharacter:closeModalDeleteCharacter,getScenToDelete:getScenToDelete,getAttendeeToDelete:getAttendeeToDelete,getCollaboratorToDelete:getCollaboratorToDelete,getCharacterToDelete:getCharacterToDelete,showPopUpSetDate:showPopUpSetDate,closeModalSetDate:closeModalSetDate,showModalOpenMap:showModalOpenMap,closeModalOpenMap:closeModalOpenMap,showModalOpenMapForPost:showModalOpenMapForPost,closeModalOpenMapForPost:closeModalOpenMapForPost,showModalOldCharacterChangeOnComment:showModalOldCharacterChangeOnComment,closeModalOldCharacterChangeOnComment:closeModalOldCharacterChangeOnComment,showModalSetHistoryDate:showModalSetHistoryDate,closeModalSetHistoryDate:closeModalSetHistoryDate,createMission:createMission,showModalCreateMission:showModalCreateMission,closeModalCreateMission:closeModalCreateMission,showModalDeleteResource:showModalDeleteResource,closeModalDeleteResource:closeModalDeleteResource,showModalDeletePost:showModalDeletePost,closeModalDeletePost:closeModalDeletePost,showModalConfirmRegistration:showModalConfirmRegistration,getRegistrationToConfirm:getRegistrationToConfirm,closeModalConfirmRegistration:closeModalConfirmRegistration,showConcurrentModPost:showConcurrentModPost,closeModalConcurrentModPost:closeModalConcurrentModPost}}]),angular.module("smiled.application").factory("notifyService",["$q","$cookies","$rootScope","apiService",function($q,$cookies,$rootScope,apiService){var me=$cookies.get("myMescholaId"),newPosts=[],actualScenarioId="",observerReloadListOfPost={},observerReloadAssociationCallbacks={},inEditPost=[],toReload=[],setActualScenarioId=function(id){actualScenarioId=id},resetActualScenarioId=function(){actualScenarioId="",inEditPost=[],toReload=[]},newNotifyOrPost=function(n){"OPEN_SCENARIO"==n.verb||"CLOSE_SCENARIO"==n.verb?$rootScope.$broadcast("dashboard.reloadDashboard"):"NEW_MOD"==n.verb||"DEL_MOD"==n.verb?$rootScope.$broadcast("dashboardTeacher.reloadDashboard"):"NEW_ASSOCIATION"==n.verb&&n.objectId==me||"DEL_ASSOCIATION"==n.verb||"NEW_ATTENDEE"==n.verb||"DEL_ATTENDEE"==n.verb?$rootScope.$broadcast("dashboardStudent.reloadDashboard"):"NEW_PERSONAL_MISSION"!=n.verb&&"NEW_GLOBAL_MISSION"!=n.verb||$rootScope.$broadcast("dashboardStudent.reloadMission"),n.sender!=me&&("NEW_POST"==n.verb?n.scenarioId==actualScenarioId&&(newPosts.unshift(n.objectId),$rootScope.$broadcast("notification.newPostEvent")):"UPD_POST"==n.verb?n.scenarioId!=actualScenarioId||isInEditPost(n.objectId)?(toReload.push(n.objectId),$rootScope.$broadcast("notification.generateAlertUpd",{id:n.objectId})):$rootScope.$broadcast("notification.updPostEvent",{id:n.objectId}):"UPD_NEW_COMMENT"==n.verb?n.scenarioId==actualScenarioId&&$rootScope.$broadcast("notification.updNewComment",{notification:n}):"UPD_NEW_META"==n.verb?n.scenarioId==actualScenarioId&&$rootScope.$broadcast("notification.updNewMetaComment",{notification:n}):$rootScope.$broadcast("notification.newNotificationEvent",{notification:n}))},getAllNewPosts=function(){var nP=angular.copy(newPosts);return newPosts=[],nP},readOldNotifications=function(older,num){return apiService.getLastUserNotifications(older,num)},registerObserverReloadList=function(callback){observerReloadListOfPost=callback},resetObserverReloadList=function(){observerReloadListOfPost=null},registerObserverAssociation=function(callback){observerReloadAssociationCallbacks=callback},resetObserverAssociation=function(){observerReloadAssociationCallbacks=null},notifyReloadListObservers=function(){observerReloadListOfPost&&observerReloadListOfPost(newPosts)},reloadList=function(){notifyReloadListObservers(),newPosts=[]},reloadAssociation=function(){observerReloadAssociationCallbacks&&observerReloadAssociationCallbacks()},addToInEditPost=function(idPost){inEditPost.indexOf(idPost)<0&&inEditPost.push(idPost)},removeToInEditPost=function(idPost){var i=inEditPost.indexOf(idPost);if(i>=0){inEditPost.splice(i,1);var j=toReload.indexOf(idPost);j>=0&&($rootScope.$broadcast("notification.updPostEvent",{id:idPost}),toReload.splice(j,1))}},isInEditPost=function(idPost){return!(inEditPost.indexOf(idPost)<0)},onLoginListener=$rootScope.$on("meschola.login",function(event,data){console.log(data.id),me=data.id}),onLogoutListener=$rootScope.$on("meschola.logout",function(){me=""});return $rootScope.$on("$destroy",function(){onLoginListener(),onLogoutListener()}),{newNotifyOrPost:newNotifyOrPost,getAllNewPosts:getAllNewPosts,registerObserverReloadList:registerObserverReloadList,resetObserverReloadList:resetObserverReloadList,notifyReloadListObservers:notifyReloadListObservers,reloadList:reloadList,reloadAssociation:reloadAssociation,registerObserverAssociation:registerObserverAssociation,resetObserverAssociation:resetObserverAssociation,setActualScenarioId:setActualScenarioId,resetActualScenarioId:resetActualScenarioId,readOldNotifications:readOldNotifications,addToInEditPost:addToInEditPost,removeToInEditPost:removeToInEditPost,isInEditPost:isInEditPost}}]),angular.module("smiled.application").factory("socialGraphSketch",["userService",function(userService){return function(p5){var w,h,nodi={},archi=[],ranks={},events=[],dragged=null,inside=null,flashing=null,flashingRadius=0,draggingBar=!1,barra=0,t=.1,dt=.1,k=.5,q=4e5,g=80,friction=.5;p5.preload=function(){var id=userService.getScenarioId(),url="/api/v1/scenarios/"+id+"/socialGraph";events=p5.loadJSON(url);var container=angular.element(document.querySelector("#container-graph"));w=container.width(),h=parseInt(3*w/4)};var createNodeState=function(){var ns={};ns.links={};for(var id in nodi)ns.links[id]=0;return ns.posts=0,ns.getRadius=function(){return.75*(p5.log(ns.posts+1)/p5.log(1.2)+10)},ns},createNode=function(id,name){var node={id:id,name:name,x:[p5.random(0,p5.width),0,0,0,0],y:[p5.random(0,p5.height),0,0,0,0],targets:[],vx:0,vy:0,ax:0,ay:0,phase:p5.random(0,p5.TWO_PI)};return node.setX=function(x){var xs=p5.shorten(node.x);node.x=p5.splice(xs,x,0)},node.setY=function(y){var ys=p5.shorten(node.y);node.y=p5.splice(ys,y,0)},node.getX=function(){return node.x[0]},node.getY=function(){return node.y[0]},node.getLastX=function(){return node.x[4]},node.getLastY=function(){return node.y[4]},node.getName=function(){return node.name},node.getId=function(){return node.id},node.getTargets=function(){return node.targets},node.addTarget=function(id){node.targets.push(id)},node.draw=function(drawHistory){for(var nodeState=ranks[id],r=2*nodeState.getRadius(),start=drawHistory?node.x.length-1:0,i=start;i>=0;i--){255-128/p5.pow(p5.sq(node.vx)+p5.sq(node.vy)+1,.3);p5.push(),p5.colorMode(p5.RGB);var alpha=p5.map(i,node.x.length,0,0,1);alpha=255*p5.pow(alpha,3),p5.stroke(64,75,65,alpha),p5.fill(137,177,81,alpha);var r1=p5.map(i,0,node.x.length,r,0);p5.ellipse(node.x[i],node.y[i],r1,r1),p5.pop()}},node.flash=function(){p5.push();var ns=ranks[node.id],r=2*ns.getRadius();p5.fill(250,215,123,128),p5.noStroke(),p5.ellipse(node.getX(),node.getY(),flashingRadius*r,flashingRadius*r),p5.pop()},node};p5.setup=function(){p5.createCanvas(w,h);for(var i in events){var e=events[i],autore=e.author;autore.x=p5.random(0,p5.width),autore.y=p5.random(0,p5.height);var id=autore.id;switch(nodi[id]!=={}&&(nodi[id]=createNode(id,autore.name),ranks[id]=createNodeState()),e.action){case"POST":archi.push({from:id,to:id});break;case"TAG":case"LIKE":case"COMMENT":var oggetto=e.object,id1=oggetto.id;nodi[id1]!=={}&&(nodi[id1]=createNode(id1,oggetto.name),ranks[id1]=createNodeState()),archi.push({from:id,to:id1})}}},p5.draw=function(){p5.touchIsDown&&(p5.mouseX=p5.touchX,p5.mouseY=p5.touchY),flashingRadius*=.95,draggingBar?(barra=p5.map(p5.mouseX,20,p5.width-20,0,archi.length),barra=p5.floor(p5.constrain(barra,0,archi.length)),flashingRadius=3):null!==dragged&&(dragged.setX(p5.mouseX),dragged.setY(p5.mouseY)),p5.background(245,242,234),p5.stroke(64,75,65);var dx=0,dy=0,dx0=0,dy0=0,ns=null,f=0;for(var i in nodi){var nodo=nodi[i];nodo.getTargets();dx0=nodo.getX()-p5.width/2,dy0=nodo.getY()-p5.height/2;var d0=p5.sqrt(p5.sq(dx0)+p5.sq(dy0));1>d0&&(d0=1);var mass=1;ns=ranks[nodo.getId()],ns&&(mass+=ns.posts/3),nodo.ax=-g*mass*dx0/d0,nodo.ay=-g*mass*dy0/d0;for(var j in nodi)if(i!=j){var m=nodi[j];dx=nodo.getX()-m.getX(),dy=nodo.getY()-m.getY();var d=p5.pow(p5.sq(dx)+p5.sq(dy),1.5);10>d&&(d=10),f=q*(mass+1),nodo.ax+=f*dx/d,nodo.ay+=f*dy/d}}ranks={};for(i in nodi)ranks[i]=createNodeState();for(i=0;barra>i;i++){var arco=archi[i],n1=nodi[arco.from],m1=nodi[arco.to];ns=ranks[arco.from],arco.from!==arco.to?(ns.links[arco.to]++,flashing=null):(flashing=n1,ns.posts++),ranks[arco.from]=ns;var ms=ranks[arco.to];arco.from!==arco.to&&ms.links[arco.from]++,ranks[arco.to]=ms,dx=n1.getX()-m1.getX(),dy=n1.getY()-m1.getY(),p5.push(),p5.noFill(),p5.strokeWeight((p5.log(ns.links[arco.to])+1)/p5.log(2));var xa=.5*(n1.getLastX()+m1.getLastX()),ya=.5*(n1.getLastY()+m1.getLastY());p5.bezier(n1.getX(),n1.getY(),xa,ya,xa,ya,m1.getX(),m1.getY()),p5.pop(),n1.ax+=-k*dx,n1.ay+=-k*dy,m1.ax+=k*dx,m1.ay+=k*dy}f=p5.frameCount*p5.sqrt(t)/p5.TWO_PI;for(var i18 in nodi){var n2=nodi[i18];flashing===n2&&n2.flash(),n2.draw(n2!==dragged),n2.vx+=n2.ax*dt,n2.vy+=n2.ay*dt,n2.vx*=friction,n2.vy*=friction,n2.vx+=t*p5.sin(f+n2.phase),n2.vy+=t*p5.cos(f+n2.phase),n2.setX(n2.getX()+n2.vx*dt),n2.setY(n2.getY()+n2.vy*dt),n2.getX()<5?(n2.setX(5),n2.vx*=-1):n2.getX()>p5.width-5&&(n2.setX(p5.width-5),n2.vx*=-1),n2.getY()<5?(n2.setY(5),n2.vy*=-1):n2.getY()>p5.height-5&&(n2.setY(p5.height-5),n2.vy*=-1)}inside&&(p5.push(),p5.fill(224),p5.stroke(128),p5.rect(inside.getX()+10,inside.getY()+10,10+p5.textWidth(inside.getName()),25),p5.fill(0),p5.text(inside.getName(),inside.getX()+15,inside.getY()+28),p5.pop()),p5.push(),p5.stroke(255),p5.strokeWeight(3),p5.line(20,p5.height-20,p5.width-20,p5.height-20),p5.stroke(0),p5.strokeWeight(1),p5.line(20,p5.height-20,p5.width-20,p5.height-20);var x4=p5.map(barra,0,archi.length,20,p5.width-20),y4=p5.height-20;for(p5.stroke(0),p5.colorMode(p5.HSB,255),p5.fill(36,120,196),p5.ellipse(x4,y4,20,20),p5.noStroke(),i=10;i>0;i--)p5.fill(36,120,226-3*i),p5.ellipse(x4-2,y4-2,i,i);p5.colorMode(p5.RGB),p5.pop()},p5.mousePressed=function(){var x=p5.map(barra,0,archi.length,20,p5.width-20),y=p5.height-20,dx=p5.mouseX-x,dy=p5.mouseY-y,d=p5.sq(dx)+p5.sq(dy);400>d&&(draggingBar=!0);for(var i in nodi){var nodo=nodi[i];dx=p5.mouseX-nodo.getX(),dy=p5.mouseY-nodo.getY(),d=p5.sq(dx)+p5.sq(dy);var id=nodo.getId(),r=25,ns=ranks[id];if(ns&&(r=ns.getRadius()),r*r>d)return void(dragged=nodo)}},p5.touchStarted=function(){var x=p5.map(barra,0,archi.length,20,p5.width-20),y=p5.height-20,dx=p5.touchX-x,dy=p5.touchY-y,d=p5.sq(dx)+p5.sq(dy);1e3>d&&(draggingBar=!0);for(var i in nodi){var nodo=nodi[i];dx=p5.touchX-nodo.getX(),dy=p5.touchY-nodo.getY(),d=p5.sq(dx)+p5.sq(dy);var id=nodo.getId(),r=25,ns=ranks[id];if(ns&&(r=ns.getRadius()),r*r>.25*d)return dragged=nodo,!0}return!0},p5.mouseMoved=function(){inside=null;for(var id in nodi){var n=nodi[id],ns=ranks[id];ns||(ns=createNodeState());var r=ns.getRadius(),dx=p5.mouseX-n.getX(),dy=p5.mouseY-n.getY(),d=p5.sq(dx)+p5.sq(dy);if(r*r>d){inside=n;break}}},p5.touchMoved=function(){inside=null;for(var id in nodi){var n=nodi[id],ns=ranks[id];ns||(ns=createNodeState());var r=ns.getRadius(),dx=p5.touchX-n.getX(),dy=p5.touchY-n.getY(),d=p5.sq(dx)+p5.sq(dy);if(r*r>.25*d){inside=n;break}}return!0},p5.mouseReleased=function(){dragged=null,draggingBar=!1},p5.touchEnded=function(){return dragged=null,draggingBar=!1,!0};var shuffleNodes=function(){for(var id in nodi){var nodo=nodi[id];nodo.setX(p5.random(0,p5.width)),nodo.setY(p5.random(0,p5.height))}};p5.keyTyped=function(){switch(p5.key){case" ":case"+":barra=p5.constrain(barra+1,0,archi.length),flashingRadius=3;break;case"-":barra=p5.constrain(barra-1,0,archi.length),flashingRadius=3;break;case"c":case"C":barra=0,flashingRadius=0;break;case"s":case"S":shuffleNodes();break;case"h":case"H":t=p5.min(10,1.25*t);break;case"l":case"L":t=p5.max(0,t/1.25)}return!1}}}]),angular.module("smiled.application").service("unauthorizedInterceptor",["$rootScope","$q",function($rootScope,$q){return{response:function(response){return response},responseError:function(rejection){return 401===rejection.status&&(console.log("UNAUTHORIZED"),$rootScope.$broadcast("unauthorized")),$q.reject(rejection)}}}]),angular.module("smiled.application").factory("userService",["$http","$q","$cookies","$rootScope",function($http,$q,$cookies,$rootScope){var lastScenarioId="",lastMe={},setScenarioId=function(id){lastScenarioId=id},getScenarioId=function(){return lastScenarioId},getLastMe=function(){return lastMe},getMe=function(){var u=$q.defer();return $http.get("/api/v1/me").then(function(response){u.resolve(response.data),$cookies.put("myMescholaId",response.data.id),lastMe=response.data,$rootScope.$broadcast("meschola.login",{id:response.data.id})},function(reason){u.reject(reason),lastMe={}}),u.promise},getUserByEmail=function(email){var u=$q.defer();return $http.get("/api/v1/userByEmail?email="+email).then(function(response){u.resolve(response.data)},function(reason){u.reject(reason)}),u.promise},confirmRegisterTeacher=function(token,email){var e=$q.defer();return $http.put("/api/v1/confirmRegisterTeacher?token="+token+"&email="+email).then(function(response){e.resolve(response.data)},function(reason){console.log(reason),e.reject(reason)}),e.promise},deleteRegisterTeacher=function(token,email){var e=$q.defer();return $http["delete"]("/api/v1/deleteRegisterTeacher?token="+token+"&email="+email).then(function(response){e.resolve(response.data)},function(reason){console.log(reason),e.reject(reason)}),e.promise},getUser=function(id){var u=$q.defer();return $http.get("/api/v1/users/"+id).then(function(response){u.resolve(response.data)},function(reason){u.reject(reason)}),u.promise},updateMe=function(updateUserDTO){var c=$q.defer();return $http.put("/api/v1/me/",updateUserDTO).then(function(response){c.resolve(response.data)},function(reason){c.reject(reason)}),c.promise},logout=function(){var log=$q.defer();return $http({url:"/apiLogout",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}}).then(function(data){lastMe={},$cookies.remove("myMescholaId"),log.resolve(data),$rootScope.$broadcast("meschola.logout")},function(reason){console.log("Logout failed: "+reason),log.reject(reason)}),log.promise},login=function(email,password){var log=$q.defer(),e=encodeURIComponent(email),p=encodeURIComponent(password);return $http({url:"/apiLogin",method:"POST",data:"j_username="+e+"&j_password="+p+"&submit=",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}}).then(function(data){log.resolve(data)},function(reason){console.log("Authentication failed: "),console.log(reason),log.reject(reason)}),log.promise},observerChangePersonalCoverCallbacks=[],registerObserverPersonalCover=function(callback){observerChangePersonalCoverCallbacks.push(callback)},notifyPersonalCoverObservers=function(){angular.forEach(observerChangePersonalCoverCallbacks,function(callback){callback()})},changePassword=function(passwordDTO){var s=$q.defer();return $http.put("/api/v1/password",passwordDTO).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},changeFirstPassword=function(firstPasswordDTO){var s=$q.defer();return $http.put("/api/v1/firstPassword",firstPasswordDTO).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},forgotPasswordRequest=function(email){var s=$q.defer();return $http.post("/api/v1/forgotPasswordRequest",email).then(function(response){s.resolve(response.data)},function(reason){s.reject(reason)}),s.promise},getMeForPermission=function(){if(lastMe.hasOwnProperty("id")){var s=$q.defer();return s.resolve(lastMe),s.promise}return getMe()};return{login:login,logout:logout,getMe:getMe,getLastMe:getLastMe,getUser:getUser,registerObserverPersonalCover:registerObserverPersonalCover,notifyPersonalCoverObservers:notifyPersonalCoverObservers,setScenarioId:setScenarioId,getScenarioId:getScenarioId,changePassword:changePassword,changeFirstPassword:changeFirstPassword,updateMe:updateMe,confirmRegisterTeacher:confirmRegisterTeacher,forgotPasswordRequest:forgotPasswordRequest,deleteRegisterTeacher:deleteRegisterTeacher,getUserByEmail:getUserByEmail,getMeForPermission:getMeForPermission}}]),angular.module("smiled.application").factory("webSocketService",["$timeout","messageService","notifyService","$rootScope",function($timeout,messageService,notifyService,$rootScope){var service={},socket=null,exp=0,logged=!0;service.RECONNECT_TIMEOUT=1e3,service.START_AFTER_TIME_TO_SETUP=700,service.SOCKET_URL="/websocket/messages";var getTimeout=function(){var base;return base=0!=exp?exp*service.RECONNECT_TIMEOUT:service.RECONNECT_TIMEOUT,base+1e3*Math.random()},resetTimeout=function(){console.log("ON OPEN!!!!!!!!"),exp=0},send=function(data){socket.send(JSON.stringify(data))},reconnect=function(){logged&&$timeout(function(){retry()},getTimeout())},retry=function(){0==exp?exp=1:256>exp&&(exp=2*exp),initialize()},initialize=function(){socket=new SockJS(service.SOCKET_URL),console.log(socket),console.log("open ws connection on webSocketService!!!!"),socket.onopen=function(){resetTimeout()},socket.onmessage=function(e){var msg=JSON.parse(e.data);"NOTIFICATION"==msg.type?notifyService.newNotifyOrPost(msg):console.log("message is a message")},socket.onclose=function(){console.log("close ws connection on webSocketService"),reconnect()}};socket&&null!=socket||(console.log("WEB SOCKET SERVICE INITIALIZING after load of webSocketService..."),initialize());var onLoginListener=$rootScope.$on("meschola.login",function(){logged=!0,socket&&null!=socket||(console.log("WEB SOCKET SERVICE INITIALIZING after onLoginListener..."),initialize())}),onLogoutListener=$rootScope.$on("meschola.logout",function(){logged=!1});return $rootScope.$on("$destroy",function(){onLoginListener(),onLogoutListener()}),{send:send}}]),angular.module("smiled.application").directive("alertgeneric",["alertingGeneric",function(alertingGeneric){return{restrict:"AE",templateUrl:"assets/public/partials/alerts.html",scope:!0,controller:function($scope){$scope.removeAlert=function(alert){alertingGeneric.removeAlert(alert)}},link:function(scope){scope.currentAlerts=alertingGeneric.currentAlerts}}}]),angular.module("smiled.application").directive("alertlogin",["alertingLogin",function(alertingLogin){return{restrict:"AE",templateUrl:"assets/public/partials/alerts.html",scope:!0,controller:function($scope){$scope.removeAlert=function(alert){alertingLogin.removeAlert(alert)}},link:function(scope){scope.currentAlerts=alertingLogin.currentAlerts}}}]),angular.module("smiled.application").directive("alertregistration",["alertingRegistration",function(alertingRegistration){return{restrict:"AE",templateUrl:"assets/public/partials/alerts.html",scope:!0,controller:function($scope){$scope.removeAlert=function(alert){alertingRegistration.removeAlert(alert)}},link:function(scope){scope.currentAlerts=alertingRegistration.currentAlerts}}}]),angular.module("smiled.application").directive("alertscenario",["alertingScenario",function(alertingScenario){return{restrict:"AE",templateUrl:"assets/public/partials/alerts.html",scope:!0,controller:function($scope){$scope.removeAlert=function(alert){alertingScenario.removeAlert(alert)}},link:function(scope){
scope.currentAlerts=alertingScenario.currentAlerts}}}]),angular.module("smiled.application").directive("blurElement",[function(){return{scope:{open:"="},restrict:"A",link:function(scope,elem,attrs,ctrl){scope.$watch("open",function(currentValue,previousValue){currentValue!==!0||previousValue?currentValue===!1&&previousValue===!0&&elem[0].blur():elem[0].focus()})}}}]),angular.module("smiled.application").directive("bsSwitch",function(){return{restrict:"A",require:"ngModel",scope:{onCustomText:"@",offCustomText:"@"},controller:function($scope){$scope.state},controllerAs:"bsSwitch",link:function(scope,element,attrs,ngModelCtrl){$(element).bootstrapSwitch({onSwitchChange:function(event,state){scope.state=state,scope.$apply(function(){ngModelCtrl.$setViewValue(state)})}}),$(element).bootstrapSwitch("onText",scope.onCustomText),$(element).bootstrapSwitch("offText",scope.offCustomText),$(element).bootstrapSwitch("labelText","<span class='glyphicon glyphicon-resize-horizontal'></span>")}}}),angular.module("smiled.application").directive("commentTo",["apiService","CONSTANTS","modalService","notifyService",function(apiService,CONSTANTS,modalService,notifyService){return{templateUrl:"assets/private/partials/comment-to-template.html",scope:{post:"=",writer:"=",currentCharacter:"=",scenarioId:"@",loggedUser:"="},controller:["$scope",function($scope){var numVisibleComment=CONSTANTS.visibleComment,self=this,charId=self.currentCharacter.id,charName=self.currentCharacter.name;self.showViewOthers=!1,self.showInsert=!0,self.atLeastOneCommentWasSended=!1,self.currentCharacter&&self.currentCharacter.id||(self.showInsert=!1),self.visibleComments=new Array;for(var i=0;i<self.post.comments.length&&numVisibleComment>i;)self.visibleComments.unshift(self.post.comments[i]),i++;self.post.comments.length>numVisibleComment&&(self.showViewOthers=!0),self.openViewOthers=function(){self.visibleComments=angular.copy(self.post.comments),self.visibleComments.reverse(),self.showViewOthers=!1},self.addCommentToPost=function(){if(self.post.newComment){var comment={};comment.text=self.post.newComment,comment.characterId=charId,apiService.sendCommentToPost(self.scenarioId,self.post.id,comment).then(function(data){comment.creationDate=new Date,comment.character={},comment.character.id=self.currentCharacter.id,comment.character.firstname=self.currentCharacter.name,comment.user={},comment.user.id=self.loggedUser.id,comment.user.firstname=self.loggedUser.firstName,comment.user.lastname=self.loggedUser.lastName,self.post.comments.splice(0,0,comment),self.post.newComment=""},function(reason){console.log("fail to send comment: "+reason),"403"==reason.status&&modalService.showModalOldCharacterChangeOnComment(charName)})}}}],controllerAs:"commentTo",bindToController:!0,link:function(scope,elem,attrs,ctrl){scope.$watch("commentTo.post.comments.length",function(newVal,oldVal){newVal!=oldVal&&newVal>0&&(ctrl.showViewOthers?ctrl.visibleComments.push(ctrl.post.comments[0]):ctrl.openViewOthers())}),scope.$watch("commentTo.post.newComment.length",function(newVal,oldVal){newVal>0&&(0==oldVal||void 0==oldVal)?notifyService.addToInEditPost(ctrl.post.id):(0==newVal||void 0==newVal)&&oldVal>0&&notifyService.removeToInEditPost(ctrl.post.id)}),scope.$on("$destroy",function(){ctrl.post.newComment="",notifyService.removeToInEditPost(ctrl.post.id)})}}}]),angular.module("smiled.application").directive("customDatePicker",["CONSTANTS",function(CONSTANTS){return{restrict:"AE",templateUrl:"assets/private/partials/customDatePicker.html",scope:{startDateNumber:"=?",endDateNumber:"=?",dateNumber:"=?",date:"=?",startDate:"=?",endDate:"=?",dateString:"=?",timeNumber:"=?"},controller:function(){var self=this,selected={};self.startDate&&(self.startDate.day=parseInt(self.startDate.day),self.startDate.month=parseInt(self.startDate.month),self.startDate.year=parseInt(self.startDate.year)),self.endDate&&(self.endDate.day=parseInt(self.endDate.day),self.endDate.month=parseInt(self.endDate.month),self.endDate.year=parseInt(self.endDate.year)),self.startDate||self.startDateNumber||(self.startDateNumber=0,self.startDate={}),self.endDateNumber||self.endDate||(self.endDateNumber=38245427,self.endDate={}),self.currentMonthDate={},self.days;var years=new Array,yearMatrixSize=4;self.showDays=!0,self.yearMatrix=new Array;for(var i=0;yearMatrixSize>i;i++)self.yearMatrix[i]=new Array;var emptyYearMatrix=function(){for(var i=0;yearMatrixSize>i;i++)for(var j=0;yearMatrixSize>j;j++)self.yearMatrix[i][j]=""},julianNumberToDate=function(jd,date){var l=jd+68569,n=parseInt(4*l/146097);l-=parseInt((146097*n+3)/4);var i=parseInt(4e3*(l+1)/1461001);l=l-parseInt(1461*i/4)+31;var j=parseInt(80*l/2447);date.day=l-parseInt(2447*j/80),l=parseInt(j/11),date.month=j+2-12*l,date.year=100*(n-49)+i+l,date.dow=jd%7},dateToJulianNumber=function(date){var jd=parseInt(1461*(date.year+4800+parseInt((date.month-14)/12))/4)+parseInt(367*(date.month-2-12*parseInt((date.month-14)/12))/12)-parseInt(3*parseInt((date.year+4900+parseInt((date.month-14)/12))/100)/4)+date.day-32075;return jd},getMonthString=function(month){return CONSTANTS.monthString(month)};self.dateNumber&&(self.currentDate={},julianNumberToDate(self.dateNumber,self.currentDate)),self.startDateNumber?julianNumberToDate(parseInt(self.startDateNumber),self.startDate):self.startDateNumber=dateToJulianNumber(self.startDate),self.endDateNumber?julianNumberToDate(parseInt(self.endDateNumber),self.endDate):self.endDateNumber=dateToJulianNumber(self.endDate),self.dateNumber?julianNumberToDate(self.dateNumber-(self.currentDate.day-1),self.currentMonthDate):julianNumberToDate(self.startDateNumber-(self.startDate.day-1),self.currentMonthDate);var getTimeToSeconds=function(timeNumber,t){t.hours=parseInt(timeNumber/3600),timeNumber%=3600,t.minutes=parseInt(timeNumber/60),timeNumber%=60,t.seconds=timeNumber},writeStringCurrent=function(){var era=self.currentMonthDate.year>0?"":" a.C.",s=getMonthString(self.currentMonthDate.month)+" "+Math.abs(self.currentMonthDate.year)+era;self.currentMonthDate.title=s};writeStringCurrent();for(var st=angular.copy(self.startDate),en=angular.copy(self.endDate),k=0;st.year<=en.year;)years[k]=st.year,st.year++,k++;var getNumDaysOfMonth=function(month,year){return 1==month||3==month||5==month||7==month||8==month||10==month||12==month?31:4==month||6==month||9==month||11==month?30:year%4==0&&year%100!=0||year%400==0?29:28},elaborateDaysOfMonth=function(currentMonthDate){selected={};var numDaysOfMonth=getNumDaysOfMonth(currentMonthDate.month,currentMonthDate.year),inserted=1,passed=1;self.days=new Array;for(var i=0;5>i;i++){self.days[i]=new Array;for(var j=0;7>j;j++)currentMonthDate.dow>=passed?self.days[i][j]="":numDaysOfMonth>=inserted&&(self.days[i][j]={},self.days[i][j].val=inserted,self.days[i][j].selected=!1,(currentMonthDate.year==self.startDate.year&&currentMonthDate.month<self.startDate.month||currentMonthDate.year==self.startDate.year&&currentMonthDate.month==self.startDate.month&&inserted<self.startDate.day||currentMonthDate.year==self.endDate.year&&currentMonthDate.month>self.endDate.month||currentMonthDate.year==self.endDate.year&&currentMonthDate.month==self.endDate.month&&inserted>self.endDate.day)&&(self.days[i][j].inactive=!0),self.currentDate&&self.currentDate.year==currentMonthDate.year&&self.currentDate.month==currentMonthDate.month&&self.currentDate.day==inserted&&(self.days[i][j].selected=!0,selected=self.days[i][j]),inserted++),passed++}if(numDaysOfMonth>=inserted){self.days[5]=new Array;for(var k=0;numDaysOfMonth>=inserted;k++)self.days[5][k]={},self.days[5][k].val=inserted,self.days[5][k].selected=!1,(currentMonthDate.year==self.startDate.year&&currentMonthDate.month<self.startDate.month||currentMonthDate.year==self.startDate.year&&currentMonthDate.month==self.startDate.month&&inserted<self.startDate.day||currentMonthDate.year==self.endDate.year&&currentMonthDate.month>self.endDate.month||currentMonthDate.year==self.endDate.year&&currentMonthDate.month==self.endDate.month&&inserted>self.endDate.day)&&(self.days[5][k].inactive=!0),self.currentDate&&self.currentDate.year==currentMonthDate.year&&self.currentDate.month==currentMonthDate.month&&self.currentDate.day==inserted&&(self.days[5][k].selected=!0,selected=self.days[5][k]),inserted++}writeStringCurrent()};elaborateDaysOfMonth(self.currentMonthDate),self.getDayOfWeekString=function(day){return CONSTANTS.dayOfWeekString(day)},self.nextMonth=function(){if(self.showDays){var n=dateToJulianNumber(self.currentMonthDate);n+=getNumDaysOfMonth(self.currentMonthDate.month,self.currentMonthDate.year),n<=self.endDateNumber&&(julianNumberToDate(n,self.currentMonthDate),elaborateDaysOfMonth(self.currentMonthDate))}else{var index=self.yearMatrix[yearMatrixSize-1][yearMatrixSize-1]+1-self.startDate.year;if(index<years.length&&index>0){emptyYearMatrix(),years[index]>=0?self.yearsInterval=""+years[index]+" d.C.":self.yearsInterval=""+Math.abs(years[index])+" a.C.";for(var i=0;yearMatrixSize>i;i++)for(var j=0;yearMatrixSize>j&&index<years.length&&index>0;j++)self.yearMatrix[i][j]=years[index],index++;years[index-1]>=0?self.yearsInterval+=" - "+years[index-1]+" d.C.":self.yearsInterval+=" - "+Math.abs(years[index-1])+" a.C."}}},self.prevMonth=function(){if(self.showDays){var n=dateToJulianNumber(self.currentMonthDate);n-=getNumDaysOfMonth(self.currentMonthDate.month-1,self.currentMonthDate.year),n>=self.startDateNumber?(julianNumberToDate(n,self.currentMonthDate),elaborateDaysOfMonth(self.currentMonthDate)):(n+=self.startDate.day,n>=self.startDateNumber&&(julianNumberToDate(n,self.currentMonthDate),elaborateDaysOfMonth(self.currentMonthDate)))}else{var index=self.yearMatrix[0][0]-yearMatrixSize*yearMatrixSize-self.startDate.year;if(0>index&&(index=0),index<years.length){emptyYearMatrix(),years[index]>=0?self.yearsInterval=""+years[index]+" d.C.":self.yearsInterval=""+Math.abs(years[index])+" a.C.";for(var i=0;yearMatrixSize>i;i++)for(var j=0;yearMatrixSize>j&&index<years.length&&index>=0;j++)self.yearMatrix[i][j]=years[index],index++;years[index-1]>=0?self.yearsInterval+=" - "+years[index-1]+" d.C.":self.yearsInterval+=" - "+Math.abs(years[index-1])+" a.C."}}},self.selectDate=function(row,col){if(!self.days[row][col].inactive){selected&&(selected.selected=!1);var date={};date.day=self.days[row][col].val,date.month=self.currentMonthDate.month,date.year=self.currentMonthDate.year,self.dateNumber=dateToJulianNumber(date),self.days[row][col].selected=!0,selected=self.days[row][col],self.dateString=self.days[row][col].val+" "+self.currentMonthDate.title;var t={};getTimeToSeconds(self.timeNumber,t),self.dateString+=" "+t.hours+":",t.minutes<10?self.dateString+="0"+t.minutes:self.dateString+=t.minutes}},self.switchToShowYears=function(){self.showDays=!1,emptyYearMatrix();var index=self.currentMonthDate.year-self.startDate.year;years[index]>=0?self.yearsInterval=""+years[index]+" d.C.":self.yearsInterval=""+Math.abs(years[index])+" a.C.";for(var i=0;yearMatrixSize>i;i++)for(var j=0;yearMatrixSize>j&&index<years.length;j++)self.yearMatrix[i][j]=years[index],index++;years[index-1]>=0?self.yearsInterval+=" - "+years[index-1]+" d.C.":self.yearsInterval+=" - "+Math.abs(years[index-1])+" a.C."},self.switchToShowDays=function(){self.showDays=!0},self.selectYear=function(row,col){self.currentMonthDate.year=self.yearMatrix[row][col],self.currentMonthDate.year==self.startDate.year?self.currentMonthDate.month==self.startDate.month:self.currentMonthDate.month=1,self.currentMonthDate.day=1,self.switchToShowDays(),elaborateDaysOfMonth(self.currentMonthDate)};var getSecondsOfTime=function(date){var hour=date.getHours(),minute=date.getMinutes(),seconds=date.getSeconds();self.timeNumber=seconds+60*minute+3600*hour};if(self.timeNumber){var d=new Date,t={};getTimeToSeconds(self.timeNumber,t),self.myTime=new Date(d.getFullYear(),d.getMonth(),d.getDay(),t.hours,t.minutes,t.seconds)}else self.myTime=new Date,getSecondsOfTime(self.myTime);self.changed=function(){getSecondsOfTime(self.myTime)}},controllerAs:"vm",bindToController:!0}}]),angular.module("smiled.application").directive("editDraftPost",["apiService","CONSTANTS","modalService","Upload","$state","$q",function(apiService,CONSTANTS,modalService,Upload,$state,$q){return{templateUrl:"assets/private/partials/edit-draft-post-directive.html",scope:{posts:"=",postId:"@",user:"="},controller:["$scope",function($scope){var self=this;if(self.scenario={},self.date={},self.colorMapMarker={},self.colorImageMarker={},self.colorFileMarker={},self.realDateFormat=CONSTANTS.realDateFormatWithHour,self.sendPostEnable=!0,self.post={},self.postId&&self.posts)for(var i=0;i<self.posts.length;i++)if(self.posts[i].id==self.postId){self.post=self.posts[i],self.post.character&&(self.post.character.cover=CONSTANTS.urlCharacterCover(self.post.scenarioId,self.post.character.id));break}self.newPost=angular.copy(self.post),self.newPost.image=new Array,self.newPost.file=new Array,self.newPost.tags=new Array,self.newPost.toDeleteImage=new Array,self.newPost.toDeleteFile=new Array;var calculateType=function(uploadedFile){var split=uploadedFile.name.split("."),type=split[split.length-1];uploadedFile.fileType=null,"jpg"==type||"jpeg"==type||"png"==type||"gif"==type?uploadedFile.fileType="img":"pdf"==type?uploadedFile.fileType="pdf":"doc"==type||"docx"==type||"odt"==type||"txt"==type?uploadedFile.fileType="doc":"ppt"==type||"pptx"==type||"odp"==type?uploadedFile.fileType="ppt":"xls"!=type&&"xlsx"!=type&&"ods"!=type||(uploadedFile.fileType="excel")},updateMediaAndTagOnStart=function(){if(self.post.imagesMetadata)for(var i=0;i<self.post.imagesMetadata.length;i++){var s={};s.id=self.post.imagesMetadata[i].id,s.name=self.post.imagesMetadata[i].originalName,self.newPost.image.push(angular.copy(s))}if(self.post.filesMetadata)for(var i=0;i<self.post.filesMetadata.length;i++){var s={};s.id=self.post.filesMetadata[i].id,s.name=self.post.filesMetadata[i].originalName,calculateType(s),self.newPost.file.push(angular.copy(s))}if(self.post.tags)for(var i=0;i<self.post.tags.length;i++){var s={};s.id=self.post.tags[i].id,s.name=self.post.tags[i].firstname,self.post.tags[i].lastname&&(s.name+=" "+self.post.tags[i].lastname),self.newPost.tags.push(angular.copy(s))}};updateMediaAndTagOnStart(),apiService.getScenario(self.post.scenarioId).then(function(data){self.scenario=data,self.startDate=angular.copy(self.scenario.history.startDate),self.startDate.afterChrist||(self.startDate.year*=-1),self.endDate=angular.copy(self.scenario.history.endDate),self.endDate.afterChrist||(self.endDate.year*=-1)},function(reason){console.log("Impossibile recuperare lo scenario"),console.log(reason)}),self.showDatePicker=!1,self.setDateNewPost=function(){modalService.showModalSetHistoryDate(self.startDate,self.endDate,self.newPost)},self.colorTagsMarker={},self.stringTags="",self.tagIsSet=!1,self.showTagBox=!1,self.switchShowTagBox=function(){self.showTagBox=!self.showTagBox},self.hideTagBox=function(){self.showTagBox=!1};var getMonthString=function(month){return CONSTANTS.monthString(month)},julianNumberToDate=function(jd,date){var l=jd+68569,n=parseInt(4*l/146097);l-=parseInt((146097*n+3)/4);var i=parseInt(4e3*(l+1)/1461001);l=l-parseInt(1461*i/4)+31;var j=parseInt(80*l/2447);date.day=l-parseInt(2447*j/80),l=parseInt(j/11),date.month=j+2-12*l,date.year=100*(n-49)+i+l,date.dow=jd%7},getTimeToSeconds=function(timeNumber,t){t.hours=parseInt(timeNumber/3600),timeNumber%=3600,t.minutes=parseInt(timeNumber/60),timeNumber%=60,t.seconds=timeNumber};self.formatDate=function(jd,timeNumber){julianNumberToDate(jd,self.date);var era=self.date.year>0?"":" a.C.",s=getMonthString(self.date.month)+" "+Math.abs(self.date.year)+era,f=self.date.day+" "+s;if(timeNumber){var t={};getTimeToSeconds(timeNumber,t),f+=" "+t.hours+":",f+=t.minutes<10?"0"+t.minutes:t.minutes}return f},self.newPost.julianDayNumber?self.newPost.formattedDate=self.formatDate(self.newPost.julianDayNumber,self.newPost.timeNumber):self.newPost.formattedDate=CONSTANTS.insertHistoricalDate,self.updatePositionPost=function(){var map=null;self.scenario.history.mapId&&(map={url:CONSTANTS.urlMedia(self.scenario.history.mapId)}),modalService.showModalOpenMap(self.newPost,map)},self.addImageToNewPost=function(file){uploadMediaToPost(file,!0)},self.removeImage=function(image){var id=angular.copy(image.id);modalService.showModalDeleteResource(image).then(function(data){apiService.deleteMedia(id,self.post.id).then(function(data){for(var i=0;i<self.newPost.image.length;i++)self.newPost.image[i].id==id&&self.newPost.image.splice(i,1)},function(reason){console.log("Impossibile eliminare immagine")})},function(reason){console.log("Eliminazione annullata")})},self.getMedia=function(id){return CONSTANTS.urlMediaThumb(id)},self.addFileToNewPost=function(file){uploadMediaToPost(file,!1)},self.removeFile=function(file){var id=angular.copy(file.id);modalService.showModalDeleteResource(file).then(function(data){apiService.deleteMedia(id,self.post.id).then(function(data){for(var i=0;i<self.newPost.file.length;i++)self.newPost.file[i].id==id&&self.newPost.file.splice(i,1)},function(reason){console.log("Impossibile eliminare file")})},function(reason){console.log("Eliminazione annullata")})};var uploadMediaToPost=function(file,isImage){file&&file.length&&Upload.upload({url:CONSTANTS.urlMediaScenarioPost(self.scenario.id),headers:{"Content-Type":file.type},file:file}).then(function(response){if(isImage){var uploadedFile={};uploadedFile.id=response.data.id,uploadedFile.name=response.config.file[0].name,self.newPost.image.push(uploadedFile)}else{var uploadedFile={};uploadedFile.id=response.data.id,uploadedFile.name=response.config.file[0].name,calculateType(uploadedFile),self.newPost.file.push(uploadedFile)}},function(reason){console.log("Impossibile effettuare l'upload")})};self.search=function($query,isChar){var selectable;self.suggestions=new Array,isChar?selectable=self.scenario.characters:(self.scenario.attendees&&(selectable=self.scenario.attendees),self.scenario.collaborators&&selectable.push.apply(self.scenario.collaborators),selectable.push(self.scenario.teacherCreator));var regex=new RegExp("(^|\\s|-|'|,|.)"+$query,"gi");if(selectable)if(isChar){if(!isChar)throw new Error("Unsupported type");if(!self.scenario.id)throw new Error("Unsupported type");for(var i=0;i<selectable.length;i++)if(regex.test(selectable[i].name)){var suggestion={};suggestion.name=selectable[i].name,suggestion.id=selectable[i].id,suggestion.cover=CONSTANTS.urlCharacterCover(self.scenario.id,selectable[i].id),self.suggestions.push(suggestion)}}else for(var i=0;i<selectable.length;i++)if(regex.test(selectable[i].firstname)||regex.test(selectable[i].lastname)){var suggestion={};suggestion.name=selectable[i].lastname+" "+selectable[i].firstname,suggestion.id=selectable[i].id,suggestion.cover=CONSTANTS.urlUserCover(selectable[i].id),self.suggestions.push(suggestion)}var result=$q.defer();return result.resolve(self.suggestions),result.promise};var validateDate=function(){return!(!self.newPost.julianDayNumber||!self.newPost.timeNumber)};self.draftNewPost=function(publish){var savable=!0,toSendPost={};if(publish?validateDate()?toSendPost.status="PUBLISHED":(self.setDateNewPost(),savable=!1):toSendPost.status="DRAFT",savable&&self.sendPostEnable&&self.newPost.text){self.sendPostEnable=!1,toSendPost.text=self.newPost.text,toSendPost.julianDayNumber=self.newPost.julianDayNumber,toSendPost.timeNumber=self.newPost.timeNumber,toSendPost.place=self.newPost.place,toSendPost.imageMetaId=new Array,toSendPost.fileMetaId=new Array,toSendPost.tags=new Array;for(var i=0;i<self.newPost.image.length;i++)toSendPost.imageMetaId.push(self.newPost.image[i].id);for(var i=0;i<self.newPost.file.length;i++)toSendPost.fileMetaId.push(self.newPost.file[i].id);for(var i=0;i<self.newPost.tags.length;i++)toSendPost.tags.push(self.newPost.tags[i].id);self.post.character?apiService.updateStatus(self.scenario.id,self.post.id,toSendPost).then(function(data){self.sendPostEnable=!0,self.post=data;for(var i=0;i<self.posts.length;i++)if(self.posts[i].id==self.post.id){self.posts[i]=self.post,self.posts[i].character.cover=CONSTANTS.urlCharacterCover(self.posts[i].scenarioId,self.posts[i].character.id);break}publish&&$state.go("logged.scenario.posts",{id:self.scenario.id})},function(reason){self.sendPostEnable=!0,console.log("error in send status: "+reason)}):apiService.updateEvent(self.scenario.id,self.post.id,toSendPost).then(function(data){self.sendPostEnable=!0,self.post=data;for(var i=0;i<self.posts.length;i++)if(self.posts[i].id==self.post.id){self.posts[i]=self.post;break}publish&&$state.go("logged.scenario.posts",{id:self.scenario.id})},function(reason){self.sendPostEnable=!0,console.log("error in send status: "+reason)})}else angular.element(document.querySelector("#textContentStatus")).focus()},self.deletePost=function(){modalService.showModalDeletePost().then(function(data){apiService.deletePost(self.scenario.id,self.post.id).then(function(data){for(var i=0;i<self.posts.length;i++)if(self.posts[i].id==self.post.id){self.posts.splice(i,1);break}$state.go("logged.dashboard.draft")})},function(reason){console.log("DELETE CANCELED")})}}],controllerAs:"editDraftPost",bindToController:!0,link:function(scope,elem,attrs,ctrl){scope.$watch("editDraftPost.newPost.image.length",function(val){val>0?ctrl.colorImageMarker={color:"#89b151"}:ctrl.colorImageMarker={color:"dark grey"}}),scope.$watch("editDraftPost.newPost.file.length",function(val){val>0?ctrl.colorFileMarker={color:"#89b151"}:ctrl.colorFileMarker={color:"dark grey"}}),scope.$watch("editDraftPost.newPost.place",function(newVal,oldVal){newVal&&newVal.x&&newVal.y?ctrl.colorMapMarker={color:"#89b151"}:ctrl.colorMapMarker={color:"dark grey"}}),scope.$watch("editDraftPost.newPost.tags.length",function(val){if(val>0){ctrl.tagIsSet=!0,ctrl.colorTagsMarker={color:"#89b151"},ctrl.stringTags="";for(var i=0;val>i;i++){if(i>=2){ctrl.stringTags+=" e altri personaggi";break}val-1>i?ctrl.stringTags+=""+ctrl.newPost.tags[i].name+", ":ctrl.stringTags+=""+ctrl.newPost.tags[i].name}}else ctrl.colorTagsMarker={color:"dark grey"},ctrl.stringTags="",ctrl.tagIsSet=!1})}}}]),angular.module("smiled.application").directive("errSrc",[function(){return{link:function(scope,element,attrs){element.bind("error",function(){attrs.src!=attrs.errSrc&&attrs.$set("src",attrs.errSrc)})}}}]),angular.module("smiled.application").directive("forminput",["$compile",function($compile){var setupDom=function(element){var input=element.querySelector("input, textArea, select"),type=input.getAttribute("type"),name=input.getAttribute("name");return"checkbox"!==type&&"radio"!==type&&input.classList.add("form-control"),name},watcherFor=function(form,name){return function(){return name&&form[name]&&form[name].$invalid&&form[name].$dirty?form[name].$invalid:void 0}},updaterFor=function(element){return function(hasError){hasError?element.removeClass("has-success").addClass("has-error"):element.removeClass("has-error").addClass("has-success")}},addMessages=function(form,element,name,$compile,scope){var messages="<div class='help-block' ng-messages='"+form.$name+"."+name+".$error' ng-messages-include='assets/public/partials/messages.html'></div>";element.append($compile(messages)(scope)),scope.$watch(watcherFor(form,name),updaterFor(element))},link=function($compile){return function(scope,element,attributes,form){var name=setupDom(element[0]);addMessages(form,element,name,$compile,scope)}};return{restrict:"A",require:"^form",link:link($compile)}}]),angular.module("smiled.application").directive("hideOnHoverParent",function(){return{link:function(scope,element,attrs){element.parent().bind("mouseenter",function(){element.hide()}),element.parent().bind("mouseleave",function(){element.show()})}}}),angular.module("smiled.application").directive("historicaldate",[function(){return{restrict:"AE",templateUrl:"assets/private/partials/historicalDate.html",scope:!0,controller:function($scope){$scope.removeAlert=function(alert){alertingGeneric.removeAlert(alert)}},link:function(scope){scope.currentAlerts=alertingGeneric.currentAlerts}}}]),angular.module("smiled.application").directive("historicalDatePicker",["CONSTANTS",function(CONSTANTS){return{restrict:"AE",templateUrl:"assets/public/partials/historicalDatePicker.html",scope:{date:"="},controller:function(){var self=this;self.months=CONSTANTS.getMonths("it"),self.getDays=function(){self.days=CONSTANTS.getDays(self.date.month)},self.date&&self.date.month?self.days=CONSTANTS.getDays(self.date.month):self.days=CONSTANTS.getDays(1)},controllerAs:"vm",bindToController:!0,link:function(scope,element,attr){scope.$watch("vm.date",function(newValue,oldValue){if(newValue&&newValue.year&&newValue.month&&newValue.day){var era;era=newValue.afterChrist?"D.C.":"A.C.",newValue.formatted=newValue.day+" "+CONSTANTS.monthString(newValue.month)+" "+newValue.year+" "+era}},!0)}}}]),angular.module("smiled.application").directive("insertEvent",["CONSTANTS","apiService","Upload","$q","modalService","alertingScenario",function(CONSTANTS,apiService,Upload,$q,modalService,alertingScenario){return{templateUrl:"assets/private/partials/insert-event-template.html",scope:{posts:"=",scenario:"="},bindToController:!0,controller:["$scope",function(){var self=this;self.startDate=angular.copy(self.scenario.history.startDate),self.startDate.afterChrist||(self.startDate.year*=-1),self.endDate=angular.copy(self.scenario.history.endDate),self.endDate.afterChrist||(self.endDate.year*=-1),self.newPost={},self.newPost.julianDayNumber="",self.newPost.timeNumber="",self.newPost.formattedDate=CONSTANTS.insertHistoricalDate,self.newPost.image=new Array,self.newPost.file=new Array,self.newPost.tags=new Array,self.showViewToSelectType=!1,self.newPost.type=null,self.sendPostEnable=!0,self.showDatePicker=!1,self.setDateNewPost=function(){modalService.showModalSetHistoryDate(self.startDate,self.endDate,self.newPost)};var validateDate=function(){return!(!self.newPost.julianDayNumber||!self.newPost.timeNumber)};self.savePost=function(){if(validateDate())if(self.sendPostEnable&&self.newPost.content){self.sendPostEnable=!1;var toSendPost={};toSendPost.text=self.newPost.content,toSendPost.julianDayNumber=self.newPost.julianDayNumber,toSendPost.timeNumber=self.newPost.timeNumber,toSendPost.status="PUBLISHED",toSendPost.type=self.newPost.type,toSendPost.imageMetaId=new Array,toSendPost.fileMetaId=new Array,toSendPost.tags=new Array,toSendPost.place=self.newPost.place;for(var i=0;i<self.newPost.image.length;i++)toSendPost.imageMetaId.push(self.newPost.image[i].id);for(var i=0;i<self.newPost.file.length;i++)toSendPost.fileMetaId.push(self.newPost.file[i].id);for(var i=0;i<self.newPost.tags.length;i++)toSendPost.tags.push(self.newPost.tags[i].id);apiService.sendEvent(self.scenario.id,toSendPost).then(function(data){self.newPost.content="",self.newPost.image=[],self.newPost.file=[],self.newPost.place=null,self.newPost.tags=[],self.newPost.date="",self.newPost.julianDayNumber="",self.newPost.timeNumber="",self.newPost.formattedDate=CONSTANTS.insertHistoricalDate,self.sendPostEnable=!0,apiService.getSingleStatus(self.scenario.id,data.id).then(function(data){if(self.posts.unshift(data),self.posts[0].imageMetaId){self.posts[0].imagesUrl=new Array;for(var i=0;i<self.posts[0].imageMetaId.length;i++)self.posts[0].imagesUrl[i].push(CONSTANTS.urlMedia(self.posts[0].imageMetaId[i]))}},function(reason){console.log("error in insert new event in array")})},function(reason){self.sendPostEnable=!0,console.log("error in send event: "+reason)})}else angular.element(document.querySelector("#textContentStatus")).focus();else self.setDateNewPost()},self.draftNewPost=function(){if(self.sendPostEnable&&self.newPost.content){self.sendPostEnable=!1;var toSendPost={};toSendPost.text=self.newPost.content,toSendPost.julianDayNumber=self.newPost.julianDayNumber,toSendPost.timeNumber=self.newPost.timeNumber,toSendPost.status="DRAFT",toSendPost.place=self.newPost.place,toSendPost.imageMetaId=new Array,toSendPost.fileMetaId=new Array,toSendPost.tags=new Array;for(var i=0;i<self.newPost.image.length;i++)toSendPost.imageMetaId.push(self.newPost.image[i].id);for(var i=0;i<self.newPost.file.length;i++)toSendPost.fileMetaId.push(self.newPost.file[i].id);for(var i=0;i<self.newPost.tags.length;i++)toSendPost.tags.push(self.newPost.tags[i].id);apiService.sendEvent(self.scenario.id,toSendPost).then(function(data){self.newPost.content="",self.newPost.image=[],self.newPost.file=[],self.newPost.julianDayNumber="",self.newPost.timeNumber="",self.newPost.formattedDate=CONSTANTS.insertHistoricalDate,self.sendPostEnable=!0,self.newPost.place=null,self.newPost.tags=[],alertingScenario.addSuccess("Bozza salvata con successo.")},function(reason){self.sendPostEnable=!0,console.log("error in send status: "+reason),alertingScenario.addWarning("Impossibile salvare la bozza. Riprova per favore.")})}else angular.element(document.querySelector("#textContentEvent")).focus()},self.addImageToNewPost=function(file){uploadMediaToPost(file,!0)},self.removeImage=function(image){var id=angular.copy(image.id);apiService.deleteMedia(id).then(function(data){for(var i=0;i<self.newPost.image.length;i++)self.newPost.image[i].id==id&&self.newPost.image.splice(i,1)},function(reason){console.log("Impossibile eliminare immagine")})},self.addFileToNewPost=function(file){uploadMediaToPost(file,!1)},self.removeFile=function(file){var id=angular.copy(file.id);apiService.deleteMedia(id).then(function(data){for(var i=0;i<self.newPost.file.length;i++)self.newPost.file[i].id==id&&self.newPost.file.splice(i,1)},function(reason){console.log("Impossibile eliminare file")})};var uploadMediaToPost=function(file,isImage){file&&file.length&&(isImage&&"image/png"!=file[0].type&&"image/gif"!=file[0].type&&"image/jpg"!=file[0].type&&"image/jpeg"!=file[0].type?alertingScenario.addWarning("Formato non valido per le immagini."):Upload.upload({url:CONSTANTS.urlMediaScenarioPost(self.scenario.id),headers:{"Content-Type":file.type},file:file}).then(function(response){if(isImage){var uploadedFile={};uploadedFile.id=response.data.id,uploadedFile.name=response.config.file[0].name,self.newPost.image.push(uploadedFile)}else{var uploadedFile={};uploadedFile.id=response.data.id,uploadedFile.name=response.config.file[0].name;var split=uploadedFile.name.split("."),type=split[split.length-1];uploadedFile.fileType=null,"jpg"==type||"jpeg"==type||"png"==type||"gif"==type?uploadedFile.fileType="img":"pdf"==type?uploadedFile.fileType="pdf":"doc"==type||"docx"==type||"odt"==type||"txt"==type?uploadedFile.fileType="doc":"ppt"==type||"pptx"==type||"odp"==type?uploadedFile.fileType="ppt":"xls"!=type&&"xlsx"!=type&&"ods"!=type||(uploadedFile.fileType="excel"),self.newPost.file.push(uploadedFile)}},function(reason){"400"==reason.status||"406"==reason.status?alertingScenario.addWarning("Formato non supportato."):alertingScenario.addWarning("C'è stato un errore, non è stato possibile caricare il file. Riprova per favore.")}))};self.search=function($query,isChar){var selectable;self.suggestions=new Array,isChar?selectable=self.scenario.characters:(self.scenario.attendees&&(selectable=self.scenario.attendees),self.scenario.collaborators&&selectable.push.apply(self.scenario.collaborators),selectable.push(self.scenario.teacherCreator));var regex=new RegExp("(^|\\s|-|'|,|.)"+$query,"gi");if(selectable)if(isChar){if(!isChar)throw new Error("Unsupported type");if(!self.scenario.id)throw new Error("Unsupported type");for(var i=0;i<selectable.length;i++)if(regex.test(selectable[i].name)){var suggestion={};suggestion.name=selectable[i].name,suggestion.id=selectable[i].id,suggestion.cover=CONSTANTS.urlCharacterCover(self.scenario.id,selectable[i].id),self.suggestions.push(suggestion)}}else for(var i=0;i<selectable.length;i++)if(regex.test(selectable[i].firstname)||regex.test(selectable[i].lastname)){var suggestion={};suggestion.name=selectable[i].lastname+" "+selectable[i].firstname,suggestion.id=selectable[i].id,
suggestion.cover=CONSTANTS.urlUserCover(selectable[i].id),self.suggestions.push(suggestion)}var result=$q.defer();return result.resolve(self.suggestions),result.promise},self.getMedia=function(id){return CONSTANTS.urlMedia(id)},self.colorTagsMarker={},self.stringTags="",self.tagIsSet=!1,self.showTagBox=!1,self.switchShowTagBox=function(){self.showTagBox=!self.showTagBox},self.hideTagBox=function(){self.showTagBox=!1},self.colorMapMarker={},self.setPositionNewPost=function(){var map;map=self.scenario.history.mapId?{url:CONSTANTS.urlMedia(self.scenario.history.mapId)+".jpg"}:null,modalService.showModalOpenMap(self.newPost,map)},self.showSelectType=function(){self.showViewToSelectType=!self.showViewToSelectType},self.hideType=function(){self.showViewToSelectType=!1}}],controllerAs:"insertEvent",link:function(scope,elem,attrs,ctrl){scope.$watch("insertEvent.newPost.image.length",function(val){val>0?ctrl.colorImageMarker={color:"#89b151"}:ctrl.colorImageMarker={color:"dark grey"}}),scope.$watch("insertEvent.newPost.file.length",function(val){val>0?ctrl.colorFileMarker={color:"#89b151"}:ctrl.colorFileMarker={color:"dark grey"}}),scope.$watch("insertEvent.newPost.place",function(val){val&&val.x&&val.y?ctrl.colorMapMarker={color:"#89b151"}:ctrl.colorMapMarker={color:"dark grey"}}),scope.$watch("insertEvent.newPost.date",function(val){val&&val.x&&val.y?ctrl.colorMapMarker={color:"#89b151"}:ctrl.colorMapMarker={color:"dark grey"}}),scope.$watch("insertEvent.newPost.tags.length",function(val){if(val>0){ctrl.colorTagsMarker={color:"#89b151"},ctrl.tagIsSet=!0,ctrl.stringTags="";for(var i=0;val>i;i++){if(i>=2){ctrl.stringTags+=" e altri personaggi";break}val-1>i?ctrl.stringTags+=""+ctrl.newPost.tags[i].name+", ":ctrl.stringTags+=""+ctrl.newPost.tags[i].name}}else ctrl.colorTagsMarker={color:"dark grey"},ctrl.tagIsSet=!1,ctrl.stringTags=""}),scope.$watch("insertEvent.newPost.type.length",function(val){val>0?ctrl.colorTypeMarker={color:"#89b151"}:ctrl.colorTypeMarker={color:"dark grey"}})}}}]),angular.module("smiled.application").directive("insertMission",["CONSTANTS","apiService","Upload","$q","modalService","$timeout",function(CONSTANTS,apiService,Upload,$q,modalService,$timeout){return{templateUrl:"assets/private/partials/insert-mission-template.html",scope:{idScenarioVeloce:"@?",scenario:"=",character:"=?",isModerator:"=",isCreator:"="},bindToController:!0,controller:["$scope",function(){var self=this;self.dirty=!1,self.realDateFormat=CONSTANTS.realDateFormatWithHour,self.isModerator||self.isCreator?self.formMission=!1:self.formMission=!0,self.openFormMission=function(){self.formMission=!0},self.closeFormMission=function(){self.formMission=!1},self.character?(self.character.mission?(self.mission=self.character.mission,self.newMission=angular.copy(self.mission)):(self.mission=null,self.newMission=null),self.urlCover="url('"+CONSTANTS.urlCharacterCover(self.scenario.id,self.character.id)+"'),url('assets/public/img/icon/pg.png')"):(self.urlCover="url('"+CONSTANTS.urlScenarioCover(self.idScenarioVeloce)+"'),url('assets/public/img/icon/ic_scen.png')",self.scenario.mission?(self.mission=self.scenario.mission,self.newMission=angular.copy(self.mission)):(self.mission=null,self.newMission=null)),self.saveMission=function(){self.character?apiService.addMissionToCharacter(self.scenario.id,self.character.id,self.newMission).then(function(data){self.character=data,self.mission=self.character.mission,self.newMission=angular.copy(self.mission),self.dirty=!1},function(reason){console.log("error in add mission to character"),self.newMission=angular.copy(self.mission),self.dirty=!1}):apiService.addMissionToScenario(self.scenario.id,self.newMission).then(function(data){self.scenario=data,self.mission=self.scenario.mission,self.newMission=angular.copy(self.mission),self.dirty=!1},function(reason){console.log("error in add mission to scenario"),self.newMission=angular.copy(self.mission),self.dirty=!1})},self.deleteModifyMission=function(){self.newMission=angular.copy(self.mission),$timeout(function(){self.dirty=!1},200)},self.deleteMission=function(){self.character?apiService.deleteMissionToCharacter(self.scenario.id,self.character.id).then(function(data){self.mission=null,self.newMission=null,self.dirty=!1},function(reason){console.log("error in delete mission to character"),self.newMission=null,self.dirty=!1}):apiService.deleteMissionToScenario(self.scenario.id).then(function(data){self.mission=null,self.newMission=null,self.dirty=!1},function(reason){console.log("error in delete mission to scenario"),self.mission=null,self.newMission=null,self.dirty=!1})}}],controllerAs:"insertMission",link:function(scope,elem,attrs,ctrl){scope.$watch("insertMission.newMission.title",function(newVal,oldVal){newVal&&newVal!=oldVal&&(ctrl.dirty=!0)}),scope.$watch("insertMission.newMission.description",function(newVal,oldVal){newVal&&newVal!=oldVal&&(ctrl.dirty=!0)}),scope.$watch("insertMission.scenario.mission.title",function(newVal,oldVal){newVal&&newVal!=oldVal&&!ctrl.character&&(ctrl.mission.title=newVal,ctrl.newMission.title=newVal)}),scope.$watch("insertMission.scenario.mission.description",function(newVal,oldVal){newVal&&newVal!=oldVal&&!ctrl.character&&(ctrl.mission.description=newVal,ctrl.newMission.description=newVal)})}}}]),angular.module("smiled.application").directive("insertPost",[function(){return{templateUrl:"assets/private/partials/insert-post-template.html",scope:{character:"=",posts:"=",scenario:"=",hasCharacter:"=",isModerator:"="},bindToController:!0,controller:["$scope",function(){var self=this;self.showBoxEvent=!0}],controllerAs:"insertPost"}}]),angular.module("smiled.application").directive("insertStatus",["CONSTANTS","apiService","Upload","$q","modalService","alertingScenario",function(CONSTANTS,apiService,Upload,$q,modalService,alertingScenario){return{templateUrl:"assets/private/partials/insert-status-template.html",scope:{character:"=",posts:"=",scenario:"="},bindToController:!0,controller:["$scope",function(){var self=this;self.startDate=angular.copy(self.scenario.history.startDate),self.startDate.afterChrist||(self.startDate.year*=-1),self.endDate=angular.copy(self.scenario.history.endDate),self.endDate.afterChrist||(self.endDate.year*=-1),self.newPost={},self.newPost.formattedDate=CONSTANTS.insertHistoricalDate,self.newPost.julianDayNumber="",self.newPost.timeNumber="",self.newPost.image=new Array,self.newPost.file=new Array,self.newPost.tags=new Array,self.sendPostEnable=!0,self.character&&self.character.id?self.showInsertStatus=!0:self.showInsertStatus=!1,self.showDatePicker=!1,self.setDateNewPost=function(){modalService.showModalSetHistoryDate(self.startDate,self.endDate,self.newPost)};var validateDate=function(){return!(!self.newPost.julianDayNumber||!self.newPost.timeNumber)};self.savePost=function(){if(validateDate())if(self.sendPostEnable&&self.newPost.content){self.sendPostEnable=!1;var toSendPost={};toSendPost.text=self.newPost.content,toSendPost.julianDayNumber=self.newPost.julianDayNumber,toSendPost.timeNumber=self.newPost.timeNumber,toSendPost.status="PUBLISHED",toSendPost.place=self.newPost.place,toSendPost.imageMetaId=new Array,toSendPost.fileMetaId=new Array,toSendPost.tags=new Array;for(var i=0;i<self.newPost.image.length;i++)toSendPost.imageMetaId.push(self.newPost.image[i].id);for(var i=0;i<self.newPost.file.length;i++)toSendPost.fileMetaId.push(self.newPost.file[i].id);for(var i=0;i<self.newPost.tags.length;i++)toSendPost.tags.push(self.newPost.tags[i].id);apiService.sendStatus(self.scenario.id,self.character.id,toSendPost).then(function(data){self.newPost.content="",self.newPost.image=[],self.newPost.file=[],self.newPost.julianDayNumber="",self.newPost.timeNumber="",self.newPost.formattedDate=CONSTANTS.insertHistoricalDate,self.sendPostEnable=!0,self.newPost.place=null,self.newPost.tags=[],apiService.getSingleStatus(self.scenario.id,data.id).then(function(data){if(self.posts.unshift(data),self.posts[0].imageMetaId){self.posts[0].imagesUrl=new Array;for(var i=0;i<self.posts[0].imageMetaId.length;i++)self.posts[0].imagesUrl[i].push(CONSTANTS.urlMedia(self.posts[0].imageMetaId[i]))}self.posts[0].character.cover=CONSTANTS.urlCharacterCover(self.scenario.id,self.posts[0].character.id)},function(reason){console.log("error in insert new post in array"+reason)})},function(reason){self.sendPostEnable=!0,console.log("error in send status: "+reason)})}else angular.element(document.querySelector("#textContentStatus")).focus();else self.setDateNewPost()},self.draftNewPost=function(){if(self.sendPostEnable&&self.newPost.content){self.sendPostEnable=!1;var toSendPost={};toSendPost.text=self.newPost.content,toSendPost.julianDayNumber=self.newPost.julianDayNumber,toSendPost.timeNumber=self.newPost.timeNumber,toSendPost.status="DRAFT",toSendPost.place=self.newPost.place,toSendPost.imageMetaId=new Array,toSendPost.fileMetaId=new Array,toSendPost.tags=new Array;for(var i=0;i<self.newPost.image.length;i++)toSendPost.imageMetaId.push(self.newPost.image[i].id);for(var i=0;i<self.newPost.file.length;i++)toSendPost.fileMetaId.push(self.newPost.file[i].id);for(var i=0;i<self.newPost.tags.length;i++)toSendPost.tags.push(self.newPost.tags[i].id);apiService.sendStatus(self.scenario.id,self.character.id,toSendPost).then(function(data){self.newPost.content="",self.newPost.image=[],self.newPost.file=[],self.newPost.julianDayNumber="",self.newPost.timeNumber="",self.newPost.formattedDate=CONSTANTS.insertHistoricalDate,self.sendPostEnable=!0,self.newPost.place=null,self.newPost.tags=[],alertingScenario.addSuccess("Bozza salvata con successo.")},function(reason){self.sendPostEnable=!0,console.log("error in send status: "+reason),alertingScenario.addWarning("Impossibile salvare la bozza. Riprova per favore.")})}else angular.element(document.querySelector("#textContentStatus")).focus()},self.addImageToNewPost=function(file){uploadMediaToPost(file,!0)},self.removeImage=function(image){var id=angular.copy(image.id);apiService.deleteMedia(id).then(function(data){for(var i=0;i<self.newPost.image.length;i++)self.newPost.image[i].id==id&&self.newPost.image.splice(i,1)},function(reason){console.log("Impossibile eliminare immagine")})},self.getMedia=function(id){return CONSTANTS.urlMedia(id)},self.addFileToNewPost=function(file){uploadMediaToPost(file,!1)},self.removeFile=function(file){var id=angular.copy(file.id);apiService.deleteMedia(id).then(function(data){for(var i=0;i<self.newPost.file.length;i++)self.newPost.file[i].id==id&&self.newPost.file.splice(i,1)},function(reason){console.log("Impossibile eliminare file")})};var uploadMediaToPost=function(file,isImage){file&&file.length&&(isImage&&"image/png"!=file[0].type&&"image/gif"!=file[0].type&&"image/jpg"!=file[0].type&&"image/jpeg"!=file[0].type?alertingScenario.addWarning("Formato non valido per le immagini."):Upload.upload({url:CONSTANTS.urlMediaScenarioPost(self.scenario.id),headers:{"Content-Type":file.type},file:file}).then(function(response){if(isImage){var uploadedFile={};uploadedFile.id=response.data.id,uploadedFile.name=response.config.file[0].name,self.newPost.image.push(uploadedFile)}else{var uploadedFile={};uploadedFile.id=response.data.id,uploadedFile.name=response.config.file[0].name;var split=uploadedFile.name.split("."),type=split[split.length-1];uploadedFile.fileType=null,"jpg"==type||"jpeg"==type||"png"==type||"gif"==type?uploadedFile.fileType="img":"pdf"==type?uploadedFile.fileType="pdf":"doc"==type||"docx"==type||"odt"==type||"txt"==type?uploadedFile.fileType="doc":"ppt"==type||"pptx"==type||"odp"==type?uploadedFile.fileType="ppt":"xls"!=type&&"xlsx"!=type&&"ods"!=type||(uploadedFile.fileType="excel"),self.newPost.file.push(uploadedFile)}},function(reason){"400"==reason.status||"406"==reason.status?alertingScenario.addWarning("Formato non supportato."):alertingScenario.addWarning("C'è stato un errore, non è stato possibile caricare il file. Riprova per favore.")}))};self.search=function($query,isChar){var selectable;self.suggestions=new Array,isChar?selectable=self.scenario.characters:(self.scenario.attendees&&(selectable=self.scenario.attendees),self.scenario.collaborators&&selectable.push.apply(self.scenario.collaborators),selectable.push(self.scenario.teacherCreator));var regex=new RegExp("(^|\\s|-|'|,|.)"+$query,"gi");if(selectable)if(isChar){if(!isChar)throw new Error("Unsupported type");if(!self.scenario.id)throw new Error("Unsupported type");for(var i=0;i<selectable.length;i++)if(regex.test(selectable[i].name)){var suggestion={};suggestion.name=selectable[i].name,suggestion.id=selectable[i].id,suggestion.cover=CONSTANTS.urlCharacterCover(self.scenario.id,selectable[i].id),self.suggestions.push(suggestion)}}else for(var i=0;i<selectable.length;i++)if(regex.test(selectable[i].firstname)||regex.test(selectable[i].lastname)){var suggestion={};suggestion.name=selectable[i].lastname+" "+selectable[i].firstname,suggestion.id=selectable[i].id,suggestion.cover=CONSTANTS.urlUserCover(selectable[i].id),self.suggestions.push(suggestion)}var result=$q.defer();return result.resolve(self.suggestions),result.promise},self.colorTagsMarker={},self.stringTags="",self.tagIsSet=!1,self.showTagBox=!1,self.switchShowTagBox=function(){self.showTagBox=!self.showTagBox},self.hideTagBox=function(){self.showTagBox=!1},self.colorMapMarker={},self.setPositionNewPost=function(){var map;map=self.scenario.history.mapId?{url:CONSTANTS.urlMedia(self.scenario.history.mapId)}:null,modalService.showModalOpenMap(self.newPost,map)}}],controllerAs:"insertStatus",link:function(scope,elem,attrs,ctrl){scope.$watch("insertStatus.newPost.image.length",function(val){val>0?ctrl.colorImageMarker={color:"#89b151"}:ctrl.colorImageMarker={color:"dark grey"}}),scope.$watch("insertStatus.newPost.file.length",function(val){val>0?ctrl.colorFileMarker={color:"#89b151"}:ctrl.colorFileMarker={color:"dark grey"}}),scope.$watch("insertStatus.newPost.place",function(newVal,oldVal){newVal&&newVal.x&&newVal.y?ctrl.colorMapMarker={color:"#89b151"}:ctrl.colorMapMarker={color:"dark grey"}}),scope.$watch("insertStatus.newPost.tags.length",function(val){if(val>0){ctrl.tagIsSet=!0,ctrl.colorTagsMarker={color:"#89b151"},ctrl.stringTags="";for(var i=0;val>i;i++){if(i>=2){ctrl.stringTags+=" e altri personaggi";break}val-1>i?ctrl.stringTags+=""+ctrl.newPost.tags[i].name+", ":ctrl.stringTags+=""+ctrl.newPost.tags[i].name}}else ctrl.colorTagsMarker={color:"dark grey"},ctrl.stringTags="",ctrl.tagIsSet=!1})}}}]),angular.module("smiled.application").directive("likeTo",["apiService",function(apiService){return{templateUrl:"assets/private/partials/like-to-template.html",scope:{liker:"=",post:"=",scenarioId:"@"},controller:function(){var self=this;self.numLike=self.post.likes.length,self.likePost=function(s){self.liker.id&&apiService.addLikeToPost(self.scenarioId,self.post.id).then(function(data){if(s.youLike){for(var i=0;i<s.likes.length;i++)if(s.likes[i].id==self.liker.id){s.likes.splice(i,1),self.numLike--;break}}else s.likes.push(self.liker),self.numLike++;s.youLike=!s.youLike},function(reason){console.log("Error in like")})}},controllerAs:"likeTo",bindToController:!0}}]),angular.module("smiled.application").directive("mapPostView",["CONSTANTS",function(CONSTANTS){return{restrict:"A",scope:{post:"=",map:"@"},link:function(scope,element,attrs){var ctx=element[0].getContext("2d"),canvas=ctx.canvas,marker=new Image;marker.src=CONSTANTS.urlMarker,canvas.width=700;var map=new Image;map.src=scope.map;var original,lastX=-1,lastY=-1,markerDim=40;map.onload=function(){var newHeight=(map.width/map.height,map.height*canvas.width/map.width);if(canvas.height=newHeight,ctx.drawImage(map,0,0,map.width,map.height,0,0,canvas.width,newHeight),original=ctx.getImageData(0,0,canvas.width,canvas.height),scope.post.place){var x=scope.post.place.x*canvas.width-markerDim/2,y=scope.post.place.y*canvas.height-markerDim;ctx.drawImage(marker,x,y,markerDim,markerDim),lastX=x,lastY=y}}}}}]),angular.module("smiled.application").directive("mapScenario",["CONSTANTS","$timeout","$document","dateUtil",function(CONSTANTS,$timeout,$document,dateUtil){return{restrict:"A",scope:{posts:"=",slideNumber:"=",map:"@",start:"=",end:"=",bars:"=",actual:"="},controller:function(){var self=this;self.toShowPost=new Array;var mapPost,compare=function(p1,p2){var d1=parseInt(p1.julianDayNumber),d2=parseInt(p2.julianDayNumber);if(p1.timeNumber)var t1=parseInt(p1.timeNumber);else var t1=0;if(p2.timeNumber)var t2=parseInt(p2.timeNumber);else var t2=0;return d2>d1?-1:d1>d2?1:t2>t1?-1:t1>t2?1:0},elaborate=function(){if(mapPost.length){mapPost.sort(compare),self.start=dateUtil.dateTimeToStringShort(mapPost[0].julianDayNumber,mapPost[0].timeNumber),self.end=dateUtil.dateTimeToStringShort(mapPost[mapPost.length-1].julianDayNumber,mapPost[mapPost.length-1].timeNumber);var startDate=0;mapPost[0].timeNumber&&(startDate+=parseInt(mapPost[0].timeNumber/60));var endDate=24*(mapPost[mapPost.length-1].julianDayNumber-mapPost[0].julianDayNumber)*60;mapPost[mapPost.length-1].timeNumber&&(endDate+=parseInt(mapPost[mapPost.length-1].timeNumber/60));for(var actualStep=(endDate-startDate)/100,step=actualStep,i=0,index=0;100>index&&i<mapPost.length;){var col=0;self.toShowPost[index]=new Array;var actualDate=24*(mapPost[i].julianDayNumber-mapPost[0].julianDayNumber)*60;for(mapPost[i].timeNumber&&(actualDate+=parseInt(mapPost[i].timeNumber/60));startDate+actualStep>=actualDate&&(self.toShowPost[index][col]=mapPost[i],col++,i++,i<mapPost.length);)actualDate=24*(mapPost[i].julianDayNumber-mapPost[0].julianDayNumber)*60,mapPost[i].timeNumber&&(actualDate+=parseInt(mapPost[i].timeNumber/60));index++,actualStep+=step}}self.bars=new Array;for(var i=0;100>i;i++)self.toShowPost[i]?self.bars[i]=self.toShowPost[i].length:self.bars[i]=0};self.posts.then(function(data){mapPost=angular.copy(data.content),elaborate()},function(reason){console.log("Error in retrieve post")})},controllerAs:"dirMapScenario",bindToController:!0,link:function(scope,element,attrs,ctrl){var ctx=element[0].getContext("2d"),canvas=ctx.canvas,marker=new Image;marker.src=CONSTANTS.urlMarker,canvas.style.width="100%",canvas.style.height="100%";var container=angular.element(document.querySelector("#container-canvas"));canvas.width=container.width(),canvas.height=container.height();var map=new Image;map.src=ctrl.map;var original,markerDim=40;map.onload=function(){var newHeight=(map.width/map.height,map.height*canvas.width/map.width);canvas.height=newHeight,ctx.drawImage(map,0,0,map.width,map.height,0,0,canvas.width,newHeight),original=ctx.getImageData(0,0,canvas.width,canvas.height)};var drawMarker=function(n){if(ctrl.toShowPost){for(var i=0;n>i;i++)if(ctrl.toShowPost[i]){var alpha=Math.exp(.0135*(i-n+1));ctx.globalAlpha=alpha;for(var j=0;j<ctrl.toShowPost[i].length;j++)if(ctrl.toShowPost[i][j].place){var x=ctrl.toShowPost[i][j].place.x*canvas.width-markerDim/2,y=ctrl.toShowPost[i][j].place.y*canvas.height-markerDim;ctx.drawImage(marker,x,y,markerDim,markerDim)}ctx.globalAlpha=1}ctrl.toShowPost&&ctrl.toShowPost[n-1]&&ctrl.toShowPost[n-1][0]?(ctrl.actual=dateUtil.dateTimeToStringShort(ctrl.toShowPost[n-1][0].julianDayNumber,ctrl.toShowPost[n-1][0].timeNumber),ctrl.actual+=" ("+ctrl.toShowPost[n-1].length+")"):ctrl.actual=""}};scope.$watch("dirMapScenario.slideNumber",function(newVal,oldVal){oldVal&&(ctx.putImageData(original,0,0),0!=newVal&&newVal>oldVal?drawMarker(newVal):0!=newVal&&oldVal>newVal&&drawMarker(newVal))})}}}]),angular.module("smiled.application").directive("metaCommentTo",["apiService","CONSTANTS","notifyService",function(apiService,CONSTANTS,notifyService){return{templateUrl:"assets/private/partials/meta-comment-to-template.html",scope:{post:"=",writer:"=",scenarioId:"@",loggedUser:"="},controller:["$scope",function($scope){var self=this,numVisibleComment=CONSTANTS.visibleComment,self=this;self.showViewOthers=!1,self.atLeastOneCommentWasSended=!1,self.visibleComments=new Array;for(var i=0;i<self.post.metaComments.length&&numVisibleComment>i;)self.visibleComments.unshift(self.post.metaComments[i]),i++;self.post.metaComments.length>numVisibleComment&&(self.showViewOthers=!0),self.openViewOthers=function(){self.visibleComments=angular.copy(self.post.metaComments),self.visibleComments.reverse(),self.showViewOthers=!1},self.addMetaCommentToPost=function(){if(self.post.newMetaComment){var metaComment={};metaComment.text=self.post.newMetaComment,apiService.sendMetaCommentToPost(self.scenarioId,self.post.id,metaComment).then(function(data){metaComment.creationDate=new Date,metaComment.user={},metaComment.user.id=self.loggedUser.id,metaComment.user.firstname=self.loggedUser.firstName,metaComment.user.lastname=self.loggedUser.lastName,self.post.metaComments.splice(0,0,metaComment),self.post.newMetaComment=""},function(reason){console.log("fail to send comment: "+reason)})}}}],controllerAs:"metaCommentTo",bindToController:!0,link:function(scope,elem,attrs,ctrl){scope.$watch("metaCommentTo.post.metaComments.length",function(newVal,oldVal){newVal!=oldVal&&(ctrl.showViewOthers?ctrl.visibleComments.push(ctrl.post.metaComments[0]):ctrl.openViewOthers())}),scope.$watch("metaCommentTo.post.newMetaComment.length",function(newVal,oldVal){newVal>0&&(0==oldVal||void 0==oldVal)?notifyService.addToInEditPost(ctrl.post.id):(0==newVal||void 0==newVal)&&oldVal>0&&notifyService.removeToInEditPost(ctrl.post.id)}),scope.$on("$destroy",function(){ctrl.post.newMetaComment="",notifyService.removeToInEditPost(ctrl.post.id)})}}}]),angular.module("smiled.application").directive("pinPointCanvas",["CONSTANTS","$q",function(CONSTANTS,$q){return{restrict:"A",scope:{post:"=",map:"@"},link:function(scope,element,attrs){var ctx=element[0].getContext("2d"),canvas=ctx.canvas;canvas.width=700;var map=new Image;map.src=scope.map;var lastX=-1,lastY=-1,marker=new Image;marker.src=CONSTANTS.urlMarker;var original,markerDim=40,promise=$q.defer();map.onload=function(){var newHeight=(map.width/map.height,map.height*canvas.width/map.width);canvas.height=newHeight,ctx.drawImage(map,0,0,map.width,map.height,0,0,canvas.width,newHeight),original=ctx.getImageData(0,0,canvas.width,canvas.height),promise.resolve()},marker.onload=function(){scope.post.place&&promise.promise.then(function(data){var x=scope.post.place.x*canvas.width-markerDim/2,y=scope.post.place.y*canvas.height-markerDim;ctx.drawImage(marker,x,y,markerDim,markerDim),lastX=x,lastY=y})},element.on("click",function(event){var pin={};pin.x=event.offsetX/canvas.width,pin.y=event.offsetY/canvas.height,scope.post.place=pin;var x=event.offsetX-20,y=event.offsetY-40;-1!=lastX&&-1!=lastY&&(ctx.clearRect(0,0,canvas.width,canvas.height),ctx.putImageData(original,0,0)),ctx.drawImage(marker,x,y,markerDim,markerDim),lastX=x,lastY=y})}}}]),angular.module("smiled.application").directive("showNewsPost",["CONSTANTS","apiService","Lightbox","$q","Upload","modalService","notifyService",function(CONSTANTS,apiService,Lightbox,$q,Upload,modalService,notifyService){return{templateUrl:"assets/private/partials/show-news-post-template.html",scope:{post:"=",scenario:"=",mapId:"@",currentCharacter:"=",loggedUser:"="},controller:function(){var self=this,numMediaPerRow=5;self.showTagBox=!1,self.editPost=!1,self.deleted=!1,self.postDTO={},self.postDTO.text=self.post.text,self.date={},self.files=new Array,self.originalPost=angular.copy(self.post),self.editButton=!1;var checkPermissionEdit=function(){if(self.scenario.teacherCreator.id==self.loggedUser.id)return void(self.editButton=!0);if(self.scenario.collaborators)for(var i=0;i<self.scenario.collaborators.length;i++)if(self.scenario.collaborators[i].id==self.loggedUser.id)return void(self.editButton=!0);return self.post.character&&self.post.user.id==self.loggedUser.id&&self.currentCharacter.id==self.post.character.id?void(self.editButton=!0):void 0};checkPermissionEdit(),self.startDate=angular.copy(self.scenario.history.startDate),self.startDate.afterChrist||(self.startDate.year*=-1),self.endDate=angular.copy(self.scenario.history.endDate),self.endDate.afterChrist||(self.endDate.year*=-1),self.originalTagsList=angular.copy(self.post.tags),self.originalJulianDayNumber=angular.copy(self.post.julianDayNumber),self.newCharactersToTags=new Array,self.switchEditPost=function(){self.editPost=!self.editPost,self.editPost?notifyService.addToInEditPost(self.post.id):notifyService.removeToInEditPost(self.post.id)},self.closeEditPost=function(){self.postDTO={},self.postDTO.text=self.post.text,self.editPost=!self.editPost,self.newCharactersToTags=[],self.post=angular.copy(self.originalPost),self.recalculateMatrix(),notifyService.removeToInEditPost(self.post.id)},self.post.imagesMetadata.length>0&&(self.colorImageMarker={color:"#89b151"}),null!=self.post.place&&(self.colorMapMarker={color:"#89b151"}),self.currentCharacter&&self.currentCharacter.id||(self.classCommentButton="disabled-div"),self.getMediaUrl=function(id){var t=CONSTANTS.urlMedia(id);return t},self.realDateFormat=CONSTANTS.realDateFormatWithHour;var getMonthString=function(month){return CONSTANTS.monthString(month)},julianNumberToDate=function(jd,date){var l=jd+68569,n=parseInt(4*l/146097);l-=parseInt((146097*n+3)/4);var i=parseInt(4e3*(l+1)/1461001);l=l-parseInt(1461*i/4)+31;var j=parseInt(80*l/2447);date.day=l-parseInt(2447*j/80),l=parseInt(j/11),date.month=j+2-12*l,date.year=100*(n-49)+i+l,date.dow=jd%7},getTimeToSeconds=function(timeNumber,t){t.hours=parseInt(timeNumber/3600),timeNumber%=3600,t.minutes=parseInt(timeNumber/60),timeNumber%=60,t.seconds=timeNumber};if(self.formatDate=function(jd,timeNumber){julianNumberToDate(jd,self.date);var era=self.date.year>0?"":" a.C.",s=getMonthString(self.date.month)+" "+Math.abs(self.date.year)+era,f=self.date.day+" "+s;if(timeNumber){var t={};getTimeToSeconds(timeNumber,t),f+=" "+t.hours+":",f+=t.minutes<10?"0"+t.minutes:t.minutes}return f},self.showComment=!1,self.showMetaComment=!1,self.switchShowMetaComment=function(){self.showMetaComment=!self.showMetaComment,self.showMetaComment&&(self.showComment=!1)},self.switchShowComment=function(){self.showComment=!self.showComment,self.showComment&&(self.showMetaComment=!1)},self.post.imagesMetadata){self.post.media=new Array,self.post.media[0]=new Array;for(var col=-1,row=0,j=0;j<self.post.imagesMetadata.length;j++)0!=j&&j%numMediaPerRow==0?(col=0,row++,self.post.media[row]=new Array):col++,self.post.media[row][col]=CONSTANTS.urlMediaThumb(self.post.imagesMetadata[j].id),self.post.imagesMetadata[j].url=CONSTANTS.urlMedia(self.post.imagesMetadata[j].id)}self.openPostGallery=function(row,col){var index=row*numMediaPerRow+col;self.post.media&&Lightbox.openModal(self.post.imagesMetadata,index)},self.post.comments.reverse(),self.post.metaComments.reverse(),self.viewMap=function(){var map={url:CONSTANTS.urlMedia(self.mapId)+".jpg"};modalService.showModalOpenMapForPost(self.post,map)},self.hideTagBox=function(){self.showTagBox=!1},self.switchShowTagBox=function(){self.showTagBox=!self.showTagBox},self.addImageToPost=function(file){uploadMediaToPost(file,!0)},self.recalculateMatrix=function(){if(self.post.imagesMetadata.length>0&&(self.colorImageMarker={color:"#89b151"}),null!=self.post.place&&(self.colorMapMarker={color:"#89b151"}),self.currentCharacter&&self.currentCharacter.id||(self.classCommentButton="disabled-div"),self.post.imagesMetadata){self.post.media=new Array,self.post.media[0]=new Array;for(var col=-1,row=0,j=0;j<self.post.imagesMetadata.length;j++)0!=j&&j%numMediaPerRow==0?(col=0,row++,self.post.media[row]=new Array):col++,self.post.media[row][col]=CONSTANTS.urlMediaThumb(self.post.imagesMetadata[j].id),self.post.imagesMetadata[j].url=CONSTANTS.urlMedia(self.post.imagesMetadata[j].id)}},self.removeImage=function(row,col){var index=row*numMediaPerRow+col;modalService.showModalDeleteResource(self.post.imagesMetadata[index]).then(function(data){var id=angular.copy(self.post.imagesMetadata[index].id);apiService.deleteMedia(id,self.post.id).then(function(data){self.post.imagesMetadata.splice(index,1),self.recalculateMatrix();for(var i=0;i<self.originalPost.imagesMetadata.length;i++)self.originalPost.imagesMetadata[i].id==id&&self.originalPost.imagesMetadata.splice(i,1)},function(reason){console.log("Impossibile eliminare immagine")})})};var assignFileType=function(){self.files.splice(0,self.files.length);for(var i=0;i<self.post.filesMetadata.length;i++){var myFile={};myFile.id=self.post.filesMetadata[i].id,myFile.originalName=self.post.filesMetadata[i].originalName;var split=myFile.originalName.split("."),type=split[split.length-1];"jpg"==type||"jpeg"==type||"png"==type||"gif"==type?myFile.fileType="img":"pdf"==type?myFile.fileType="pdf":"doc"==type||"docx"==type||"odt"==type||"txt"==type?myFile.fileType="doc":"ppt"==type||"pptx"==type||"odp"==type?myFile.fileType="ppt":"xls"!=type&&"xlsx"!=type&&"ods"!=type||(myFile.fileType="excel"),self.files.push(myFile)}};assignFileType(),self.addFileToPost=function(file){uploadMediaToPost(file,!1)},self.removeFile=function(file){modalService.showModalDeleteResource(file).then(function(data){apiService.deleteMedia(file.id,self.post.id).then(function(data){for(var i=0;i<self.post.filesMetadata.length;i++)self.post.filesMetadata[i].id==file.id&&self.post.filesMetadata.splice(i,1);for(var i=0;i<self.files.length;i++)self.files[i].id==file.id&&self.files.splice(i,1);for(var i=0;i<self.originalPost.filesMetadata.length;i++)self.originalPost.filesMetadata[i].id==file.id&&self.originalPost.filesMetadata.splice(i,1)})})},self.updatePositionPost=function(){var map=null;self.mapId&&(map={url:CONSTANTS.urlMedia(self.mapId)}),modalService.showModalOpenMap(self.post,map)},self.getMedia=function(id){return CONSTANTS.urlMedia(id)},self.deletePost=function(){apiService.deletePost(self.scenario.id,self.post.id).then(function(data){self.deleted=!0,self.post={}},function(reason){console.log("DELETE POST FAILED")})},self.updateStatus=function(){self.postDTO.id=self.post.id,self.postDTO.julianDayNumber=self.post.julianDayNumber,self.postDTO.timeNumber=self.post.timeNumber,self.postDTO.place=self.post.place;for(var newTags=new Array,i=0;i<self.newCharactersToTags.length;i++)newTags.push(self.newCharactersToTags[i].id);var oldTags=new Array;if(self.post.tags)for(var i=0;i<self.post.tags.length;i++)oldTags.push(self.post.tags[i].id);self.postDTO.tags=newTags,self.postDTO.tags=self.postDTO.tags.concat(oldTags),apiService.updateStatus(self.scenario.id,self.post.id,self.postDTO).then(function(data){self.post=data,self.originalTagsList=angular.copy(self.post.tags),self.newCharactersToTags=[],self.switchEditPost(),self.recalculateMatrix(),self.post.character.cover=CONSTANTS.urlCharacterCover(self.scenario.id,self.post.character.id),self.originalPost=angular.copy(self.post),self.postDTO={},self.postDTO.text=self.post.text},function(reason){console.log("UPDATE STATUS FAILED"),self.post.tags=angular.copy(self.originalTagsList),self.postDTO={},self.postDTO.text=self.post.text,self.newCharactersToTags=[],self.editPost=!self.editPost,modalService.showModalOldCharacterChangeOnComment(self.post.character.name)})},self.updateEvent=function(){self.postDTO.id=self.post.id,self.postDTO.julianDayNumber=self.post.julianDayNumber,self.postDTO.timeNumber=self.post.timeNumber,self.postDTO.place=self.post.place;for(var newTags=new Array,i=0;i<self.newCharactersToTags.length;i++)newTags.push(self.newCharactersToTags[i].id);var oldTags=new Array;if(self.post.tags)for(var i=0;i<self.post.tags.length;i++)oldTags.push(self.post.tags[i].id);self.postDTO.tags=newTags,self.postDTO.tags=self.postDTO.tags.concat(oldTags),apiService.updateEvent(self.scenario.id,self.post.id,self.postDTO).then(function(data){self.post=data,self.originalTagsList=angular.copy(self.post.tags),self.newCharactersToTags=[],self.switchEditPost(),self.recalculateMatrix(),self.postDTO={},self.postDTO.text=self.post.text,self.originalPost=angular.copy(self.post)},function(reason){console.log("UPDATE STATUS FAILED"),self.editPost=!self.editPost})},self.updateDate=function(){modalService.showModalSetHistoryDate(self.startDate,self.endDate,self.post);
},self.removeTag=function(index){self.post.tags.splice(index,1)},self.search=function($query){var selectable=new Array;self.suggestions=new Array;for(var founded=!1,i=0;i<self.scenario.characters.length;i++)if(founded=!1,null!=self.post.tags){for(var j=0;j<self.post.tags.length;j++)if(self.scenario.characters[i].id==self.post.tags[j].id){founded=!0;break}founded||selectable.push(self.scenario.characters[i])}var regex=new RegExp("(^|\\s|-|'|,|.)"+$query,"gi");if(selectable){if(!self.scenario.id)throw new Error("Unsupported type");for(var i=0;i<selectable.length;i++)if(regex.test(selectable[i].name)){var suggestion={};suggestion.name=selectable[i].name,suggestion.id=selectable[i].id,suggestion.cover=CONSTANTS.urlCharacterCover(self.scenario.id,selectable[i].id),self.suggestions.push(suggestion)}}var result=$q.defer();return result.resolve(self.suggestions),result.promise};var uploadMediaToPost=function(file,isImage){file&&file.length&&Upload.upload({url:CONSTANTS.urlMediaScenarioPost(self.scenario.id),headers:{"Content-Type":file.type},file:file}).then(function(response){if(isImage){var uploadedFile={};uploadedFile.id=response.data.id,uploadedFile.name=response.config.file[0].name,self.post.imagesMetadata.push(uploadedFile),self.recalculateMatrix(),self.postDTO.imageMetaId||(self.postDTO.imageMetaId=new Array),self.postDTO.imageMetaId.push(uploadedFile.id)}else{var uploadedFile={};uploadedFile.id=response.data.id,uploadedFile.originalName=response.config.file[0].name,self.post.filesMetadata.push(uploadedFile),self.postDTO.fileMetaId||(self.postDTO.fileMetaId=new Array),self.postDTO.fileMetaId.push(uploadedFile.id),assignFileType()}},function(reason){console.log("Impossibile effettuare l'upload")})};self.setPositionPost=function(){var map=null;self.scenario.history.mapId&&(map={url:CONSTANTS.urlMedia(self.scenario.history.mapId)}),modalService.showModalOpenMap(self.post,map)}},controllerAs:"showNewsPost",bindToController:!0,link:function(scope,elem,attrs,ctrl){scope.$watch("showNewsPost.currentCharacter.id",function(newVal,oldVal){newVal?newVal!=oldVal&&(ctrl.classCommentButton=""):ctrl.classCommentButton="disabled-div"}),scope.$watch("showNewsPost.post.imageMetadata.length",function(val){val>0&&(ctrl.colorImageMarker={color:"#89b151"})}),scope.$watch("showNewsPost.post.filesMetadata.length",function(val){val>0?ctrl.colorFileMarker={color:"#89b151"}:ctrl.colorFileMarker={color:"dark grey"}}),scope.$watch("showNewsPost.post.place",function(newVal,oldVal){newVal&&newVal.x&&newVal.y?ctrl.colorMapMarker={color:"#89b151"}:ctrl.colorMapMarker={color:"dark grey"}}),scope.$watch("showNewsPost.post.tags.length",function(val){if(val>0){ctrl.tagIsSet=!0,ctrl.colorTagsMarker={color:"#89b151"},ctrl.stringTags="";for(var i=0;val>i;i++){if(i>=2){ctrl.stringTags+=" e altri personaggi";break}val-1>i?ctrl.stringTags+=""+ctrl.post.tags[i].name+", ":ctrl.stringTags+=""+ctrl.post.tags[i].name}}else ctrl.colorTagsMarker={color:"dark grey"},ctrl.stringTags="",ctrl.tagIsSet=!1});var alertListener=scope.$on("notification.generateAlertUpd",function(event,data){ctrl.editPost&&ctrl.post.id==data.id&&modalService.showConcurrentModPost().then(function(data){},function(reason){ctrl.closeEditPost()})});scope.$on("$destroy",function(){alertListener()})}}}]),angular.module("smiled.application").directive("showOnHoverParent",function(){return{link:function(scope,element,attrs){element.parent().bind("mouseenter",function(){element.show()}),element.parent().bind("mouseleave",function(){element.hide()})}}}),angular.module("smiled.application").directive("summarizeInfoPost",["CONSTANTS",function(CONSTANTS){return{templateUrl:"assets/private/partials/summarize-info-post-template.html",scope:{post:"=",currentCharacter:"=",showComment:"=",showMetaComment:"="},controller:function(){var self=this;self.likesLabel="",self.commentsLabel="",self.metaCommentsLabel="",self.switchShowComments=function(){self.showMetaComment=!1,self.showComment=!self.showComment},self.switchShowMetaComments=function(){self.showComment=!1,self.showMetaComment=!self.showMetaComment},self.tooltipLikes="";var i=0;for(self.l=CONSTANTS.lengthOfTooltipLikesList;i<self.l&&i<self.post.likes.length;)self.post.likes[i].id!=self.currentCharacter.id?self.tooltipLikes+=self.post.likes[i].name+"&#013":self.post.youLike=!0,i++;self.post.likes.length==self.l+1?self.tooltipLikes+="e ad un&#39altra persona":self.post.likes.length>self.l+1&&(self.tooltipLikes+="e ad altre"+(self.post.likes.length-i)+" persone")},controllerAs:"summarizeInfoPost",bindToController:!0,link:function(scope,elem,attrs,ctrl){var updateLabel=function(){1!=ctrl.post.likes.length||ctrl.post.youLike?ctrl.post.likes.length>1&&!ctrl.post.youLike?ctrl.likesLabel="Piace a <span class='tooltips clickable' title='"+ctrl.tooltipLikes+"'>"+ctrl.post.likes.length+" persone</span>":1==ctrl.post.likes.length&&ctrl.post.youLike?ctrl.likesLabel="Ti piace":2==ctrl.post.likes.length&&ctrl.post.youLike?ctrl.likesLabel="Piace a te e ad <span class='tooltips clickable' title='"+ctrl.tooltipLikes+"'>un' altra persona</span>":ctrl.post.likes.length>2&&ctrl.post.youLike?ctrl.likesLabel="Piace a te e ad <span class='tooltips clickable' title='"+ctrl.tooltipLikes+"'>altre "+(ctrl.post.likes.length-1)+" persone</span>":0==ctrl.post.likes.length&&(ctrl.likesLabel=""):ctrl.likesLabel="Piace a <span class='tooltips clickable' title='"+ctrl.tooltipLikes+"'>1 persona</span>"};scope.$watch("summarizeInfoPost.post.likes.length",function(val){updateLabel()}),scope.$watch("summarizeInfoPost.currentCharacter.id",function(newVal,oldVal){var i=0;if(!newVal||newVal!=oldVal){for(ctrl.tooltipLikes="";i<ctrl.l&&i<ctrl.post.likes.length;)ctrl.post.likes[i].id!=newVal?(ctrl.post.youLike=!1,ctrl.tooltipLikes+=ctrl.post.likes[i].name+"&#013"):ctrl.post.youLike=!0,i++;updateLabel()}}),scope.$watch("summarizeInfoPost.post.comments.length",function(val){1==ctrl.post.comments.length?ctrl.commentsLabel="1 commento":ctrl.post.comments.length>1&&(ctrl.commentsLabel=ctrl.post.comments.length+" commenti")}),scope.$watch("summarizeInfoPost.post.metaComments.length",function(val){1==ctrl.post.metaComments.length?ctrl.metaCommentsLabel="1 suggerimento":ctrl.post.metaComments.length>1&&(ctrl.metaCommentsLabel=ctrl.post.metaComments.length+" suggerimenti")})}}}]),angular.module("smiled.application").directive("myTagBox",["CONSTANTS","$document",function(CONSTANTS,$document){return{restrict:"EA",templateUrl:"assets/private/partials/tag-box-template.html",scope:{selectedTags:"=tags",selectable:"=",type:"@",scenarioId:"@?scenario"},controller:function(){var self=this;self.selectedIndex=-1,self.suggestions=new Array,self.searchText="",self.showSuggestions=!0,self.search=function(){self.suggestions=[],self.selectedIndex=-1;var regex=new RegExp("(^|\\s|-|'|,|.)"+self.searchText,"gi");if(self.selectable)if("user"==self.type){for(var i=0;i<self.selectable.length;i++)if(regex.test(self.selectable[i].firstname)||regex.test(self.selectable[i].lastname)){var suggestion={};suggestion.name=self.selectable[i].lastname+" "+self.selectable[i].firstname,suggestion.id=self.selectable[i].id,suggestion.cover=CONSTANTS.urlUserCover(self.selectable[i].id),self.suggestions.push(suggestion)}}else{if("character"!=self.type)throw new Error("Unsupported type");if(!self.scenarioId)throw new Error("Unsupported type");for(var i=0;i<self.selectable.length;i++)if(regex.test(self.selectable[i].name)){var suggestion={};suggestion.name=self.selectable[i].name,suggestion.id=self.selectable[i].id,suggestion.cover=CONSTANTS.urlCharacterCover(self.scenarioId,self.selectable[i].id),self.suggestions.push(suggestion)}}},self.removeTag=function(index){self.selectedTags.splice(index,1)},self.addToSelectedTags=function(index){-1===self.selectedTags.indexOf(self.suggestions[index])&&(self.selectedTags.push(self.suggestions[index]),self.searchText="",self.suggestions=[])},self.checkKeyDown=function(event){40===event.keyCode?(event.preventDefault(),self.selectedIndex+1!==self.suggestions.length?self.selectedIndex++:self.selectedIndex=0):38===event.keyCode?(event.preventDefault(),self.selectedIndex-1!==-1?self.selectedIndex--:self.selectedIndex=self.suggestions.length-1):13===event.keyCode&&self.addToSelectedTags(self.selectedIndex)}},controllerAs:"tagBox",bindToController:!0,link:function(scope,elem,attrs,controller){scope.$watch("tagBox.selectedIndex",function(val){-1!==val&&(controller.searchText=controller.suggestions[controller.selectedIndex].name)}),elem.on("focusout",function($event){controller.showSuggestions=!1,scope.$apply()}),elem.on("focusin",function($event){controller.search(),controller.showSuggestions=!0,scope.$apply()})}}}]),angular.module("smiled.application").directive("updatePostOnScrool",["$window",function($window){return{scope:{stop:"&",start:"&"},controller:function($scope){var self=this;self.control=function(){this.pageYOffset<=150?self.start():self.stop()}},controllerAs:"updatePostOnScrollCtrl",bindToController:!0,link:function(scope,element,attrs,ctrl){angular.element($window).on("scroll",ctrl.control),scope.$on("$destroy",function(){console.log("LOCATION CHANGE"),ctrl.stop(),angular.element($window).off("scroll",ctrl.control)})}}}]),angular.module("smiled.application").directive("userCard",["CONSTANTS","userService",function(CONSTANTS,userService){return{templateUrl:"assets/private/partials/user-card.html",scope:{userid:"@"},controller:function(){var self=this;self.user=null,self.profilePicture=null,self.userCover=null,self.ruolo=null,self.numScen=0,userService.getUser(self.userid).then(function(data){self.user=data,self.profilePicture=CONSTANTS.urlUserCover(self.userid),self.userCover=CONSTANTS.urlUserCoverLarge(self.userid);var role=self.user.role;"ROLE_TEACHER"==role.authority?self.ruolo="DOCENTE":self.ruolo="STUDENTE",null!=self.user.creatingScenarios&&(self.numScen+=self.user.creatingScenarios.length),null!=self.user.openScenarios&&(self.numScen+=self.user.openScenarios.length),null!=self.user.closedScenarios&&(self.numScen+=self.user.closedScenarios.length)},function(reason){console.log(reason)})},controllerAs:"userCard",bindToController:!0,link:function(scope,elem,attrs,ctrl){}}}]),angular.module("smiled.application").directive("workSpinner",["requestCounter",function(requestCounter){return{restrict:"EA",transclude:!0,scope:{},template:"<ng-transclude ng-show='requestCount'></ng-transclude>",link:function(scope){scope.$watch(function(){return requestCounter.getRequestCount()},function(requestCount){scope.requestCount=requestCount})}}}]),angular.module("smiled.application").config(function($provide){$provide.decorator("$exceptionHandler",["$delegate","$injector",function($delegate,$injector){return function(exception,cause){console.log("I'M ON EXCEPTION HANDLER"),console.log("EXCEPTION: "+exception+", cause: "+cause);var $rootScope=$injector.get("$rootScope");$delegate(exception,cause),$rootScope.logAngularError(exception,cause)}}])}).run(function($http,$rootScope){$rootScope.logAngularError=function(exception,cause){var errore={};errore.exceptionMessage=exception.message,errore.cause=cause,$http.post("/api/v1/clientException",errore).success(function(response){console.log(JSON.stringify(response))})}}),angular.module("smiled.application").factory("requestCounter",["$q",function($q){var requests=0,request=function(config){return requests+=1,$q.when(config)},requestError=function(error){return requests-=1,$q.reject(error)},response=function(response){return requests-=1,$q.when(response)},responseError=function(error){return requests-=1,$q.reject(error)},getRequestCount=function(){return requests};return{request:request,response:response,requestError:requestError,responseError:responseError,getRequestCount:getRequestCount}}]).config(function($httpProvider){$httpProvider.interceptors.push("requestCounter")}),angular.module("smiled.application").run(function($rootScope){$rootScope.$on("$stateChangeError",function(event,toState,toParams,fromState,fromParams,error){console.log("impossibile caricare lo stato "+toState.name)})});