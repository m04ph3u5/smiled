"use strict";angular.module("ngDragDrop",[]).directive("dragAndDrop",["$rootScope",function(r){return{restrict:"A",scope:!0,link:function(e,n){var a="dragged",t="dragover";n.attr("draggable","true"),r.dragSource=null;var o=e.$eval(n.attr("drag-and-drop"));e.enteredTimes=0,e.$watch("enteredTimes",function(r){r>0?n.addClass(t):n.removeClass(t)});var d=e.$eval(n.attr("on-drag")),i=e.$eval(n.attr("on-drop"));n.bind("dragstart",function(){r.dragSource=o,angular.isFunction(d)&&d(r.dragSource),n.addClass(a)}),n.bind("dragend",function(){n.removeClass(a)}),n.bind("dragover",function(r){return r.preventDefault&&r.preventDefault(),!1}),n.bind("dragenter",function(){o!==r.dragSource&&e.$apply(function(){e.enteredTimes+=1})}),n.bind("dragleave",function(){o!==r.dragSource&&e.$apply(function(){e.enteredTimes-=1})}),n.bind("drop",function(n){n.preventDefault&&n.preventDefault(),n.stopPropagation&&n.stopPropagation(),e.$apply(function(){e.enteredTimes-=1}),angular.isFunction(i)&&i(r.dragSource,o)})}}}]).directive("droppable",["$rootScope",function(){return{restrict:"A",link:function(r,e){var n="dragover";e.bind("dragenter",function(){e.addClass(n)}),e.bind("dragleave",function(){e.removeClass(n)})}}}]);