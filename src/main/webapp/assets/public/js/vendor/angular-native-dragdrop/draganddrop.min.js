/* meschola-0.2.1 2016-10-12 Buonaiuto Andrea - Parlato Luigi  */
!function(angular){"use strict";function isDnDsSupported(){return"ondrag"in document.createElement("a")}if(!isDnDsSupported())return void angular.module("ang-drag-drop",[]);window.jQuery&&-1===window.jQuery.event.props.indexOf("dataTransfer")&&window.jQuery.event.props.push("dataTransfer");var module=angular.module("ang-drag-drop",[]);module.directive("uiDraggable",["$parse","$rootScope","$dragImage",function($parse,$rootScope,$dragImage){return function(scope,element,attrs){function dragendHandler(e){setTimeout(function(){element.unbind("$destroy",dragendHandler)},0);var sendChannel=attrs.dragChannel||"defaultchannel";if($rootScope.$broadcast("ANGULAR_DRAG_END",e,sendChannel),e.dataTransfer&&"none"!==e.dataTransfer.dropEffect)if(attrs.onDropSuccess){var onDropSuccessFn=$parse(attrs.onDropSuccess);scope.$evalAsync(function(){onDropSuccessFn(scope,{$event:e})})}else if(attrs.onDropFailure){var onDropFailureFn=$parse(attrs.onDropFailure);scope.$evalAsync(function(){onDropFailureFn(scope,{$event:e})})}element.removeClass(draggingClass)}function dragstartHandler(e){var isDragAllowed=!isDragHandleUsed||dragTarget.classList.contains(dragHandleClass);if(isDragAllowed){var sendChannel=attrs.dragChannel||"defaultchannel",dragData="";attrs.drag&&(dragData=scope.$eval(attrs.drag));var dragImage=attrs.dragImage||null;if(element.addClass(draggingClass),element.bind("$destroy",dragendHandler),dragImage){var dragImageFn=$parse(attrs.dragImage);scope.$apply(function(){var dragImageParameters=dragImageFn(scope,{$event:e});if(dragImageParameters&&(angular.isString(dragImageParameters)&&(dragImageParameters=$dragImage.generate(dragImageParameters)),dragImageParameters.image)){var xOffset=dragImageParameters.xOffset||0,yOffset=dragImageParameters.yOffset||0;e.dataTransfer.setDragImage(dragImageParameters.image,xOffset,yOffset)}})}var transferDataObject={data:dragData,channel:sendChannel},transferDataText=angular.toJson(transferDataObject);e.dataTransfer.setData("text",transferDataText),e.dataTransfer.effectAllowed="copyMove",$rootScope.$broadcast("ANGULAR_DRAG_START",e,sendChannel,transferDataObject)}else e.preventDefault()}var dragHandleClass,dragTarget,isDragHandleUsed=!1,draggingClass=attrs.draggingClass||"on-dragging";element.attr("draggable",!1),scope.$watch(attrs.uiDraggable,function(newValue){newValue?(element.attr("draggable",newValue),element.bind("dragend",dragendHandler),element.bind("dragstart",dragstartHandler)):(element.removeAttr("draggable"),element.unbind("dragend",dragendHandler),element.unbind("dragstart",dragstartHandler))}),angular.isString(attrs.dragHandleClass)&&(isDragHandleUsed=!0,dragHandleClass=attrs.dragHandleClass.trim()||"drag-handle",element.bind("mousedown",function(e){dragTarget=e.target}))}}]),module.directive("uiOnDrop",["$parse","$rootScope",function($parse,$rootScope){return function(scope,element,attr){function onDragOver(e){e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation();var uiOnDragOverFn=$parse(attr.uiOnDragOver);return scope.$evalAsync(function(){uiOnDragOverFn(scope,{$event:e,$channel:dropChannel})}),!1}function onDragLeave(e){e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation(),dragging--,0===dragging&&(scope.$evalAsync(function(){customDragLeaveEvent(scope,{$event:e,$channel:dropChannel})}),element.addClass(dragEnterClass),element.removeClass(dragHoverClass));var uiOnDragLeaveFn=$parse(attr.uiOnDragLeave);scope.$evalAsync(function(){uiOnDragLeaveFn(scope,{$event:e,$channel:dropChannel})})}function onDragEnter(e){e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation(),0===dragging&&(scope.$evalAsync(function(){customDragEnterEvent(scope,{$event:e,$channel:dropChannel})}),element.removeClass(dragEnterClass),element.addClass(dragHoverClass)),dragging++;var uiOnDragEnterFn=$parse(attr.uiOnDragEnter);scope.$evalAsync(function(){uiOnDragEnterFn(scope,{$event:e,$channel:dropChannel})}),$rootScope.$broadcast("ANGULAR_HOVER",dragChannel)}function onDrop(e){e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation();var sendData=e.dataTransfer.getData("text");sendData=angular.fromJson(sendData),"none"===e.dataTransfer.dropEffect&&("copy"===e.dataTransfer.effectAllowed||"move"===e.dataTransfer.effectAllowed?e.dataTransfer.dropEffect=e.dataTransfer.effectAllowed:"copyMove"===e.dataTransfer.effectAllowed&&(e.dataTransfer.dropEffect=e.ctrlKey?"copy":"move"));var uiOnDropFn=$parse(attr.uiOnDrop);scope.$evalAsync(function(){uiOnDropFn(scope,{$data:sendData.data,$event:e,$channel:sendData.channel})}),element.removeClass(dragEnterClass),dragging=0}function isDragChannelAccepted(dragChannel,dropChannel){if("*"===dropChannel)return!0;var channelMatchPattern=new RegExp("(\\s|[,])+("+dragChannel+")(\\s|[,])+","i");return channelMatchPattern.test(","+dropChannel+",")}function preventNativeDnD(e){return e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation(),e.dataTransfer.dropEffect="none",!1}var dragging=0,dropChannel=attr.dropChannel||"defaultchannel",dragChannel="",dragEnterClass=attr.dragEnterClass||"on-drag-enter",dragHoverClass=attr.dragHoverClass||"on-drag-hover",customDragEnterEvent=$parse(attr.onDragEnter),customDragLeaveEvent=$parse(attr.onDragLeave),deregisterDragStart=$rootScope.$on("ANGULAR_DRAG_START",function(_,e,channel,transferDataObject){dragChannel=channel;var valid=!0;if(isDragChannelAccepted(channel,dropChannel)||(valid=!1),valid&&attr.dropValidate){var validateFn=$parse(attr.dropValidate);valid=validateFn(scope,{$drop:{scope:scope,element:element},$event:e,$data:transferDataObject.data,$channel:transferDataObject.channel})}valid?(element.bind("dragover",onDragOver),element.bind("dragenter",onDragEnter),element.bind("dragleave",onDragLeave),element.bind("drop",onDrop),element.addClass(dragEnterClass)):(element.bind("dragover",preventNativeDnD),element.bind("dragenter",preventNativeDnD),element.bind("dragleave",preventNativeDnD),element.bind("drop",preventNativeDnD),element.removeClass(dragEnterClass))}),deregisterDragEnd=$rootScope.$on("ANGULAR_DRAG_END",function(_,e,channel){element.unbind("dragover",onDragOver),element.unbind("dragenter",onDragEnter),element.unbind("dragleave",onDragLeave),element.unbind("drop",onDrop),element.removeClass(dragHoverClass),element.removeClass(dragEnterClass),element.unbind("dragover",preventNativeDnD),element.unbind("dragenter",preventNativeDnD),element.unbind("dragleave",preventNativeDnD),element.unbind("drop",preventNativeDnD)});scope.$on("$destroy",function(){deregisterDragStart(),deregisterDragEnd()}),attr.$observe("dropChannel",function(value){value&&(dropChannel=value)})}}]),module.constant("$dragImageConfig",{height:20,width:200,padding:10,font:"bold 11px Arial",fontColor:"#eee8d5",backgroundColor:"#93a1a1",xOffset:0,yOffset:0}),module.service("$dragImage",["$dragImageConfig",function(defaultConfig){function fitString(canvas,text,config){var width=canvas.measureText(text).width;if(width<config.width)return text;for(;width+config.padding>config.width;)text=text.substring(0,text.length-1),width=canvas.measureText(text+ELLIPSIS).width;return text+ELLIPSIS}var ELLIPSIS="â€¦";this.generate=function(text,options){var config=angular.extend({},defaultConfig,options||{}),el=document.createElement("canvas");el.height=config.height,el.width=config.width;var canvas=el.getContext("2d");canvas.fillStyle=config.backgroundColor,canvas.fillRect(0,0,config.width,config.height),canvas.font=config.font,canvas.fillStyle=config.fontColor;var title=fitString(canvas,text,config);canvas.fillText(title,4,config.padding+4);var image=new Image;return image.src=el.toDataURL(),{image:image,xOffset:config.xOffset,yOffset:config.yOffset}}}])}(angular);